[
{"api_id": 414, "api_type": 3, "full_declaration": "Advice", "qualified_name": "org.aopalliance.aop.Advice", "short_description": " Tag interface for Advice. "},
{"api_id": 415, "api_type": 4, "full_declaration": "AspectException", "qualified_name": "org.aopalliance.aop.AspectException", "short_description": " Superclass for all AOP infrastructure exceptions. "},
{"api_id": 416, "api_type": 3, "full_declaration": "ConstructorInterceptor", "qualified_name": "org.aopalliance.intercept.ConstructorInterceptor", "short_description": " Intercepts the construction of a new object. "},
{"api_id": 417, "api_type": 3, "full_declaration": "ConstructorInvocation", "qualified_name": "org.aopalliance.intercept.ConstructorInvocation", "short_description": " Description of an invocation to a constructor, given to an\ninterceptor upon constructor-call. "},
{"api_id": 418, "api_type": 3, "full_declaration": "Interceptor", "qualified_name": "org.aopalliance.intercept.Interceptor", "short_description": " This interface represents a generic interceptor. "},
{"api_id": 419, "api_type": 3, "full_declaration": "Invocation", "qualified_name": "org.aopalliance.intercept.Invocation", "short_description": " This interface represents an invocation in the program. "},
{"api_id": 420, "api_type": 3, "full_declaration": "Joinpoint", "qualified_name": "org.aopalliance.intercept.Joinpoint", "short_description": " This interface represents a generic runtime joinpoint (in the AOP\nterminology). "},
{"api_id": 421, "api_type": 3, "full_declaration": "MethodInterceptor", "qualified_name": "org.aopalliance.intercept.MethodInterceptor", "short_description": " Intercepts calls on an interface on its way to the target. "},
{"api_id": 422, "api_type": 3, "full_declaration": "MethodInvocation", "qualified_name": "org.aopalliance.intercept.MethodInvocation", "short_description": " Description of an invocation to a method, given to an interceptor\nupon method-call. "},
{"api_id": 423, "api_type": 3, "full_declaration": "Log", "qualified_name": "org.apache.commons.logging.Log", "short_description": " A simple logging interface abstracting logging APIs. "},
{"api_id": 424, "api_type": 2, "full_declaration": "LogFactory", "qualified_name": "org.apache.commons.logging.LogFactory", "short_description": " A minimal incarnation of Apache Commons Logging's  LogFactory  API,\nproviding just the common  Log  lookup methods. "},
{"api_id": 425, "api_type": 2, "full_declaration": "LogFactoryService", "qualified_name": "org.apache.commons.logging.LogFactoryService", "short_description": "Deprecated since it is only meant to be used in the above-mentioned fallback scenario "},
{"api_id": 426, "api_type": 2, "full_declaration": "NoOpLog", "qualified_name": "org.apache.commons.logging.impl.NoOpLog", "short_description": " Trivial implementation of  Log  that throws away all messages. "},
{"api_id": 427, "api_type": 2, "full_declaration": "SimpleLog", "qualified_name": "org.apache.commons.logging.impl.SimpleLog", "short_description": "Deprecated in  spring-jcl  (effectively equivalent to  NoOpLog ) "},
{"api_id": 428, "api_type": 3, "full_declaration": "Advisor", "qualified_name": "org.springframework.aop.Advisor", "short_description": " Base interface holding AOP  advice  (action to take at a joinpoint)\nand a filter determining the applicability of the advice (such as\na pointcut). "},
{"api_id": 429, "api_type": 3, "full_declaration": "AfterAdvice", "qualified_name": "org.springframework.aop.AfterAdvice", "short_description": " Common marker interface for after advice,\nsuch as  AfterReturningAdvice  and  ThrowsAdvice . "},
{"api_id": 430, "api_type": 3, "full_declaration": "AfterReturningAdvice", "qualified_name": "org.springframework.aop.AfterReturningAdvice", "short_description": " After returning advice is invoked only on normal method return, not if an\nexception is thrown. "},
{"api_id": 431, "api_type": 3, "full_declaration": "BeforeAdvice", "qualified_name": "org.springframework.aop.BeforeAdvice", "short_description": " Common marker interface for before advice, such as  MethodBeforeAdvice . "},
{"api_id": 432, "api_type": 3, "full_declaration": "ClassFilter", "qualified_name": "org.springframework.aop.ClassFilter", "short_description": " Filter that restricts matching of a pointcut or introduction to\na given set of target classes. "},
{"api_id": 433, "api_type": 3, "full_declaration": "DynamicIntroductionAdvice", "qualified_name": "org.springframework.aop.DynamicIntroductionAdvice", "short_description": " Subinterface of AOP Alliance Advice that allows additional interfaces\nto be implemented by an Advice, and available via a proxy using that\ninterceptor. "},
{"api_id": 434, "api_type": 3, "full_declaration": "IntroductionAdvisor", "qualified_name": "org.springframework.aop.IntroductionAdvisor", "short_description": " Superinterface for advisors that perform one or more AOP  introductions . "},
{"api_id": 435, "api_type": 3, "full_declaration": "IntroductionAwareMethodMatcher", "qualified_name": "org.springframework.aop.IntroductionAwareMethodMatcher", "short_description": " A specialized type of  MethodMatcher  that takes into account introductions\nwhen matching methods. "},
{"api_id": 436, "api_type": 3, "full_declaration": "IntroductionInfo", "qualified_name": "org.springframework.aop.IntroductionInfo", "short_description": " Interface supplying the information necessary to describe an introduction. "},
{"api_id": 437, "api_type": 3, "full_declaration": "IntroductionInterceptor", "qualified_name": "org.springframework.aop.IntroductionInterceptor", "short_description": " Subinterface of AOP Alliance MethodInterceptor that allows additional interfaces\nto be implemented by the interceptor, and available via a proxy using that\ninterceptor. "},
{"api_id": 438, "api_type": 3, "full_declaration": "MethodBeforeAdvice", "qualified_name": "org.springframework.aop.MethodBeforeAdvice", "short_description": " Advice invoked before a method is invoked. "},
{"api_id": 439, "api_type": 3, "full_declaration": "MethodMatcher", "qualified_name": "org.springframework.aop.MethodMatcher", "short_description": " Part of a  Pointcut : Checks whether the target method is eligible for advice. "},
{"api_id": 440, "api_type": 3, "full_declaration": "Pointcut", "qualified_name": "org.springframework.aop.Pointcut", "short_description": " Core Spring pointcut abstraction. "},
{"api_id": 441, "api_type": 3, "full_declaration": "PointcutAdvisor", "qualified_name": "org.springframework.aop.PointcutAdvisor", "short_description": " Superinterface for all Advisors that are driven by a pointcut. "},
{"api_id": 442, "api_type": 3, "full_declaration": "ProxyMethodInvocation", "qualified_name": "org.springframework.aop.ProxyMethodInvocation", "short_description": " Extension of the AOP Alliance  MethodInvocation interface, allowing access to the proxy that the method invocation was made through. "},
{"api_id": 443, "api_type": 3, "full_declaration": "RawTargetAccess", "qualified_name": "org.springframework.aop.RawTargetAccess", "short_description": " Marker for AOP proxy interfaces (in particular: introduction interfaces)\nthat explicitly intend to return the raw target object (which would normally\nget replaced with the proxy object when returned from a method invocation). "},
{"api_id": 444, "api_type": 3, "full_declaration": "SpringProxy", "qualified_name": "org.springframework.aop.SpringProxy", "short_description": " Marker interface implemented by all AOP proxies. "},
{"api_id": 445, "api_type": 3, "full_declaration": "TargetClassAware", "qualified_name": "org.springframework.aop.TargetClassAware", "short_description": " Minimal interface for exposing the target class behind a proxy. "},
{"api_id": 446, "api_type": 3, "full_declaration": "TargetSource", "qualified_name": "org.springframework.aop.TargetSource", "short_description": " A  TargetSource  is used to obtain the current \"target\" of\nan AOP invocation, which will be invoked via reflection if no around\nadvice chooses to end the interceptor chain itself. "},
{"api_id": 447, "api_type": 3, "full_declaration": "ThrowsAdvice", "qualified_name": "org.springframework.aop.ThrowsAdvice", "short_description": " Tag interface for throws advice. "},
{"api_id": 448, "api_type": 4, "full_declaration": "AopInvocationException", "qualified_name": "org.springframework.aop.AopInvocationException", "short_description": " Exception that gets thrown when an AOP invocation failed\nbecause of misconfiguration or unexpected runtime issues. "},
{"api_id": 449, "api_type": 3, "full_declaration": "AspectInstanceFactory", "qualified_name": "org.springframework.aop.aspectj.AspectInstanceFactory", "short_description": " Interface implemented to provide an instance of an AspectJ aspect. "},
{"api_id": 450, "api_type": 3, "full_declaration": "AspectJPrecedenceInformation", "qualified_name": "org.springframework.aop.aspectj.AspectJPrecedenceInformation", "short_description": " Interface to be implemented by types that can supply the information\nneeded to sort advice/advisors by AspectJ's precedence rules. "},
{"api_id": 451, "api_type": 3, "full_declaration": "InstantiationModelAwarePointcutAdvisor", "qualified_name": "org.springframework.aop.aspectj.InstantiationModelAwarePointcutAdvisor", "short_description": " Interface to be implemented by Spring AOP Advisors wrapping AspectJ\naspects that may have a lazy initialization strategy. "},
{"api_id": 452, "api_type": 2, "full_declaration": "AbstractAspectJAdvice", "qualified_name": "org.springframework.aop.aspectj.AbstractAspectJAdvice", "short_description": " Base class for AOP Alliance  Advice  classes\nwrapping an AspectJ aspect or an AspectJ-annotated advice method. "},
{"api_id": 453, "api_type": 2, "full_declaration": "AspectJAdviceParameterNameDiscoverer", "qualified_name": "org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer", "short_description": " ParameterNameDiscoverer  implementation that tries to deduce parameter names\nfor an advice method from the pointcut expression, returning, and throwing clauses. "},
{"api_id": 454, "api_type": 2, "full_declaration": "AspectJAfterAdvice", "qualified_name": "org.springframework.aop.aspectj.AspectJAfterAdvice", "short_description": " Spring AOP advice wrapping an AspectJ after advice method. "},
{"api_id": 455, "api_type": 2, "full_declaration": "AspectJAfterReturningAdvice", "qualified_name": "org.springframework.aop.aspectj.AspectJAfterReturningAdvice", "short_description": " Spring AOP advice wrapping an AspectJ after-returning advice method. "},
{"api_id": 456, "api_type": 2, "full_declaration": "AspectJAfterThrowingAdvice", "qualified_name": "org.springframework.aop.aspectj.AspectJAfterThrowingAdvice", "short_description": " Spring AOP advice wrapping an AspectJ after-throwing advice method. "},
{"api_id": 457, "api_type": 2, "full_declaration": "AspectJAopUtils", "qualified_name": "org.springframework.aop.aspectj.AspectJAopUtils", "short_description": " Utility methods for dealing with AspectJ advisors. "},
{"api_id": 458, "api_type": 2, "full_declaration": "AspectJAroundAdvice", "qualified_name": "org.springframework.aop.aspectj.AspectJAroundAdvice", "short_description": " Spring AOP around advice (MethodInterceptor) that wraps\nan AspectJ advice method. "},
{"api_id": 459, "api_type": 2, "full_declaration": "AspectJExpressionPointcut", "qualified_name": "org.springframework.aop.aspectj.AspectJExpressionPointcut", "short_description": " Spring  Pointcut  implementation\nthat uses the AspectJ weaver to evaluate a pointcut expression. "},
{"api_id": 460, "api_type": 2, "full_declaration": "AspectJExpressionPointcutAdvisor", "qualified_name": "org.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor", "short_description": " Spring AOP Advisor that can be used for any AspectJ pointcut expression. "},
{"api_id": 461, "api_type": 2, "full_declaration": "AspectJMethodBeforeAdvice", "qualified_name": "org.springframework.aop.aspectj.AspectJMethodBeforeAdvice", "short_description": " Spring AOP advice that wraps an AspectJ before method. "},
{"api_id": 462, "api_type": 2, "full_declaration": "AspectJPointcutAdvisor", "qualified_name": "org.springframework.aop.aspectj.AspectJPointcutAdvisor", "short_description": " AspectJPointcutAdvisor that adapts an  AbstractAspectJAdvice to the  PointcutAdvisor  interface. "},
{"api_id": 463, "api_type": 2, "full_declaration": "AspectJProxyUtils", "qualified_name": "org.springframework.aop.aspectj.AspectJProxyUtils", "short_description": " Utility methods for working with AspectJ proxies. "},
{"api_id": 464, "api_type": 2, "full_declaration": "AspectJWeaverMessageHandler", "qualified_name": "org.springframework.aop.aspectj.AspectJWeaverMessageHandler", "short_description": " Implementation of AspectJ's  IMessageHandler  interface that\nroutes AspectJ weaving messages through the same logging system as the\nregular Spring messages. "},
{"api_id": 465, "api_type": 2, "full_declaration": "DeclareParentsAdvisor", "qualified_name": "org.springframework.aop.aspectj.DeclareParentsAdvisor", "short_description": " Introduction advisor delegating to the given object. "},
{"api_id": 466, "api_type": 2, "full_declaration": "MethodInvocationProceedingJoinPoint", "qualified_name": "org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint", "short_description": " An implementation of the AspectJ  ProceedingJoinPoint  interface\nwrapping an AOP Alliance  MethodInvocation . "},
{"api_id": 467, "api_type": 2, "full_declaration": "SimpleAspectInstanceFactory", "qualified_name": "org.springframework.aop.aspectj.SimpleAspectInstanceFactory", "short_description": " Implementation of  AspectInstanceFactory  that creates a new instance\nof the specified aspect class for every  SimpleAspectInstanceFactory.getAspectInstance()  call. "},
{"api_id": 468, "api_type": 2, "full_declaration": "SingletonAspectInstanceFactory", "qualified_name": "org.springframework.aop.aspectj.SingletonAspectInstanceFactory", "short_description": " Implementation of  AspectInstanceFactory  that is backed by a\nspecified singleton object, returning the same instance for every SingletonAspectInstanceFactory.getAspectInstance()  call. "},
{"api_id": 469, "api_type": 2, "full_declaration": "TypePatternClassFilter", "qualified_name": "org.springframework.aop.aspectj.TypePatternClassFilter", "short_description": " Spring AOP  ClassFilter  implementation using AspectJ type matching. "},
{"api_id": 470, "api_type": 4, "full_declaration": "AspectJAdviceParameterNameDiscoverer.AmbiguousBindingException", "qualified_name": "org.springframework.aop.aspectj.AspectJAdviceParameterNameDiscoverer.AmbiguousBindingException", "short_description": " Thrown in response to an ambiguous binding being detected when\ntrying to resolve a method's parameter names. "},
{"api_id": 471, "api_type": 3, "full_declaration": "AspectJAdvisorFactory", "qualified_name": "org.springframework.aop.aspectj.annotation.AspectJAdvisorFactory", "short_description": " Interface for factories that can create Spring AOP Advisors from classes\nannotated with AspectJ annotation syntax. "},
{"api_id": 472, "api_type": 3, "full_declaration": "MetadataAwareAspectInstanceFactory", "qualified_name": "org.springframework.aop.aspectj.annotation.MetadataAwareAspectInstanceFactory", "short_description": " Subinterface of  AspectInstanceFactory that returns  AspectMetadata  associated with AspectJ-annotated classes. "},
{"api_id": 473, "api_type": 2, "full_declaration": "AbstractAspectJAdvisorFactory", "qualified_name": "org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory", "short_description": " Abstract base class for factories that can create Spring AOP Advisors\ngiven AspectJ classes from classes honoring the AspectJ 5 annotation syntax. "},
{"api_id": 474, "api_type": 2, "full_declaration": "AbstractAspectJAdvisorFactory.AspectJAnnotation", "qualified_name": "org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory.AspectJAnnotation", "short_description": " Class modelling an AspectJ annotation, exposing its type enumeration and\npointcut String. "},
{"api_id": 475, "api_type": 2, "full_declaration": "AnnotationAwareAspectJAutoProxyCreator", "qualified_name": "org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator", "short_description": " AspectJAwareAdvisorAutoProxyCreator  subclass that processes all AspectJ\nannotation aspects in the current application context, as well as Spring Advisors. "},
{"api_id": 476, "api_type": 2, "full_declaration": "AspectJProxyFactory", "qualified_name": "org.springframework.aop.aspectj.annotation.AspectJProxyFactory", "short_description": " AspectJ-based proxy factory, allowing for programmatic building\nof proxies which include AspectJ aspects (code style as well\nJava 5 annotation style). "},
{"api_id": 477, "api_type": 2, "full_declaration": "AspectMetadata", "qualified_name": "org.springframework.aop.aspectj.annotation.AspectMetadata", "short_description": " Metadata for an AspectJ aspect class, with an additional Spring AOP pointcut\nfor the per clause. "},
{"api_id": 478, "api_type": 2, "full_declaration": "BeanFactoryAspectInstanceFactory", "qualified_name": "org.springframework.aop.aspectj.annotation.BeanFactoryAspectInstanceFactory", "short_description": " AspectInstanceFactory  implementation\nbacked by a Spring  BeanFactory . "},
{"api_id": 479, "api_type": 2, "full_declaration": "BeanFactoryAspectJAdvisorsBuilder", "qualified_name": "org.springframework.aop.aspectj.annotation.BeanFactoryAspectJAdvisorsBuilder", "short_description": " Helper for retrieving @AspectJ beans from a BeanFactory and building\nSpring Advisors based on them, for use with auto-proxying. "},
{"api_id": 480, "api_type": 2, "full_declaration": "LazySingletonAspectInstanceFactoryDecorator", "qualified_name": "org.springframework.aop.aspectj.annotation.LazySingletonAspectInstanceFactoryDecorator", "short_description": " Decorator to cause a  MetadataAwareAspectInstanceFactory  to instantiate only once. "},
{"api_id": 481, "api_type": 2, "full_declaration": "PrototypeAspectInstanceFactory", "qualified_name": "org.springframework.aop.aspectj.annotation.PrototypeAspectInstanceFactory", "short_description": " AspectInstanceFactory  backed by a BeanFactory -provided prototype, enforcing prototype semantics. "},
{"api_id": 482, "api_type": 2, "full_declaration": "ReflectiveAspectJAdvisorFactory", "qualified_name": "org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory", "short_description": " Factory that can create Spring AOP Advisors given AspectJ classes from\nclasses honoring AspectJ's annotation syntax, using reflection to invoke the\ncorresponding advice methods. "},
{"api_id": 483, "api_type": 2, "full_declaration": "ReflectiveAspectJAdvisorFactory.SyntheticInstantiationAdvisor", "qualified_name": "org.springframework.aop.aspectj.annotation.ReflectiveAspectJAdvisorFactory.SyntheticInstantiationAdvisor", "short_description": " Synthetic advisor that instantiates the aspect. "},
{"api_id": 484, "api_type": 2, "full_declaration": "SimpleMetadataAwareAspectInstanceFactory", "qualified_name": "org.springframework.aop.aspectj.annotation.SimpleMetadataAwareAspectInstanceFactory", "short_description": " Implementation of  MetadataAwareAspectInstanceFactory  that\ncreates a new instance of the specified aspect class for every SimpleAspectInstanceFactory.getAspectInstance()  call. "},
{"api_id": 485, "api_type": 2, "full_declaration": "SingletonMetadataAwareAspectInstanceFactory", "qualified_name": "org.springframework.aop.aspectj.annotation.SingletonMetadataAwareAspectInstanceFactory", "short_description": " Implementation of  MetadataAwareAspectInstanceFactory  that is backed\nby a specified singleton object, returning the same instance for every SingletonAspectInstanceFactory.getAspectInstance()  call. "},
{"api_id": 486, "api_type": 8, "full_declaration": "AbstractAspectJAdvisorFactory.AspectJAnnotationType", "qualified_name": "org.springframework.aop.aspectj.annotation.AbstractAspectJAdvisorFactory.AspectJAnnotationType", "short_description": " Enum for AspectJ annotation types. "},
{"api_id": 487, "api_type": 4, "full_declaration": "NotAnAtAspectException", "qualified_name": "org.springframework.aop.aspectj.annotation.NotAnAtAspectException", "short_description": " Extension of AopConfigException thrown when trying to perform\nan advisor generation operation on a class that is not an\nAspectJ annotation-style aspect. "},
{"api_id": 488, "api_type": 2, "full_declaration": "AspectJAwareAdvisorAutoProxyCreator", "qualified_name": "org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator", "short_description": " AbstractAdvisorAutoProxyCreator subclass that exposes AspectJ's invocation context and understands AspectJ's rules\nfor advice precedence when multiple pieces of advice come from the same aspect. "},
{"api_id": 489, "api_type": 2, "full_declaration": "AbstractInterceptorDrivenBeanDefinitionDecorator", "qualified_name": "org.springframework.aop.config.AbstractInterceptorDrivenBeanDefinitionDecorator", "short_description": " Base implementation for BeanDefinitionDecorators wishing to add an  interceptor to the resulting bean. "},
{"api_id": 490, "api_type": 2, "full_declaration": "AdviceEntry", "qualified_name": "org.springframework.aop.config.AdviceEntry", "short_description": " ParseState  entry representing an advice element. "},
{"api_id": 491, "api_type": 2, "full_declaration": "AdvisorComponentDefinition", "qualified_name": "org.springframework.aop.config.AdvisorComponentDefinition", "short_description": " ComponentDefinition that bridges the gap between the advisor bean definition configured\nby the  <aop:advisor>  tag and the component definition\ninfrastructure. "},
{"api_id": 492, "api_type": 2, "full_declaration": "AdvisorEntry", "qualified_name": "org.springframework.aop.config.AdvisorEntry", "short_description": " ParseState  entry representing an advisor. "},
{"api_id": 493, "api_type": 2, "full_declaration": "AopConfigUtils", "qualified_name": "org.springframework.aop.config.AopConfigUtils", "short_description": " Utility class for handling registration of AOP auto-proxy creators. "},
{"api_id": 494, "api_type": 2, "full_declaration": "AopNamespaceHandler", "qualified_name": "org.springframework.aop.config.AopNamespaceHandler", "short_description": " NamespaceHandler  for the  aop  namespace. "},
{"api_id": 495, "api_type": 2, "full_declaration": "AopNamespaceUtils", "qualified_name": "org.springframework.aop.config.AopNamespaceUtils", "short_description": " Utility class for handling registration of auto-proxy creators used internally\nby the ' aop ' namespace tags. "},
{"api_id": 496, "api_type": 2, "full_declaration": "AspectComponentDefinition", "qualified_name": "org.springframework.aop.config.AspectComponentDefinition", "short_description": " ComponentDefinition that holds an aspect definition, including its nested pointcuts. "},
{"api_id": 497, "api_type": 2, "full_declaration": "AspectEntry", "qualified_name": "org.springframework.aop.config.AspectEntry", "short_description": " ParseState  entry representing an aspect. "},
{"api_id": 498, "api_type": 2, "full_declaration": "MethodLocatingFactoryBean", "qualified_name": "org.springframework.aop.config.MethodLocatingFactoryBean", "short_description": " FactoryBean  implementation that locates a  Method  on a specified bean. "},
{"api_id": 499, "api_type": 2, "full_declaration": "PointcutComponentDefinition", "qualified_name": "org.springframework.aop.config.PointcutComponentDefinition", "short_description": " ComponentDefinition implementation that holds a pointcut definition. "},
{"api_id": 500, "api_type": 2, "full_declaration": "PointcutEntry", "qualified_name": "org.springframework.aop.config.PointcutEntry", "short_description": " ParseState  entry representing a pointcut. "},
{"api_id": 501, "api_type": 2, "full_declaration": "SimpleBeanFactoryAwareAspectInstanceFactory", "qualified_name": "org.springframework.aop.config.SimpleBeanFactoryAwareAspectInstanceFactory", "short_description": " Implementation of  AspectInstanceFactory  that locates the aspect from the BeanFactory  using a configured bean name. "},
{"api_id": 502, "api_type": 3, "full_declaration": "Advised", "qualified_name": "org.springframework.aop.framework.Advised", "short_description": " Interface to be implemented by classes that hold the configuration\nof a factory of AOP proxies. "},
{"api_id": 503, "api_type": 3, "full_declaration": "AdvisedSupportListener", "qualified_name": "org.springframework.aop.framework.AdvisedSupportListener", "short_description": " Listener to be registered on  ProxyCreatorSupport  objects\nAllows for receiving callbacks on activation and change of advice. "},
{"api_id": 504, "api_type": 3, "full_declaration": "AdvisorChainFactory", "qualified_name": "org.springframework.aop.framework.AdvisorChainFactory", "short_description": " Factory interface for advisor chains. "},
{"api_id": 505, "api_type": 3, "full_declaration": "AopInfrastructureBean", "qualified_name": "org.springframework.aop.framework.AopInfrastructureBean", "short_description": " Marker interface that indicates a bean that is part of Spring's\nAOP infrastructure. "},
{"api_id": 506, "api_type": 3, "full_declaration": "AopProxy", "qualified_name": "org.springframework.aop.framework.AopProxy", "short_description": " Delegate interface for a configured AOP proxy, allowing for the creation\nof actual proxy objects. "},
{"api_id": 507, "api_type": 3, "full_declaration": "AopProxyFactory", "qualified_name": "org.springframework.aop.framework.AopProxyFactory", "short_description": " Interface to be implemented by factories that are able to create\nAOP proxies based on  AdvisedSupport  configuration objects. "},
{"api_id": 508, "api_type": 2, "full_declaration": "AbstractAdvisingBeanPostProcessor", "qualified_name": "org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor", "short_description": " Base class for  BeanPostProcessor  implementations that apply a\nSpring AOP  Advisor  to specific beans. "},
{"api_id": 509, "api_type": 2, "full_declaration": "AbstractSingletonProxyFactoryBean", "qualified_name": "org.springframework.aop.framework.AbstractSingletonProxyFactoryBean", "short_description": " Convenient superclass for  FactoryBean  types that produce singleton-scoped\nproxy objects. "},
{"api_id": 510, "api_type": 2, "full_declaration": "AdvisedSupport", "qualified_name": "org.springframework.aop.framework.AdvisedSupport", "short_description": " Base class for AOP proxy configuration managers. "},
{"api_id": 511, "api_type": 2, "full_declaration": "AopContext", "qualified_name": "org.springframework.aop.framework.AopContext", "short_description": " Class containing static methods used to obtain information about the current AOP invocation. "},
{"api_id": 512, "api_type": 2, "full_declaration": "AopProxyUtils", "qualified_name": "org.springframework.aop.framework.AopProxyUtils", "short_description": " Utility methods for AOP proxy factories. "},
{"api_id": 513, "api_type": 2, "full_declaration": "DefaultAdvisorChainFactory", "qualified_name": "org.springframework.aop.framework.DefaultAdvisorChainFactory", "short_description": " A simple but definitive way of working out an advice chain for a Method,\ngiven an  Advised  object. "},
{"api_id": 514, "api_type": 2, "full_declaration": "DefaultAopProxyFactory", "qualified_name": "org.springframework.aop.framework.DefaultAopProxyFactory", "short_description": " Default  AopProxyFactory  implementation, creating either a CGLIB proxy\nor a JDK dynamic proxy. "},
{"api_id": 515, "api_type": 2, "full_declaration": "ProxyConfig", "qualified_name": "org.springframework.aop.framework.ProxyConfig", "short_description": " Convenience superclass for configuration used in creating proxies,\nto ensure that all proxy creators have consistent properties. "},
{"api_id": 516, "api_type": 2, "full_declaration": "ProxyCreatorSupport", "qualified_name": "org.springframework.aop.framework.ProxyCreatorSupport", "short_description": " Base class for proxy factories. "},
{"api_id": 517, "api_type": 2, "full_declaration": "ProxyFactory", "qualified_name": "org.springframework.aop.framework.ProxyFactory", "short_description": " Factory for AOP proxies for programmatic use, rather than via declarative\nsetup in a bean factory. "},
{"api_id": 518, "api_type": 2, "full_declaration": "ProxyFactoryBean", "qualified_name": "org.springframework.aop.framework.ProxyFactoryBean", "short_description": " FactoryBean  implementation that builds an\nAOP proxy based on beans in Spring  BeanFactory . "},
{"api_id": 519, "api_type": 2, "full_declaration": "ProxyProcessorSupport", "qualified_name": "org.springframework.aop.framework.ProxyProcessorSupport", "short_description": " Base class with common functionality for proxy processors, in particular\nClassLoader management and the  ProxyProcessorSupport.evaluateProxyInterfaces(java.lang.Class<?>, org.springframework.aop.framework.ProxyFactory)  algorithm. "},
{"api_id": 520, "api_type": 2, "full_declaration": "ReflectiveMethodInvocation", "qualified_name": "org.springframework.aop.framework.ReflectiveMethodInvocation", "short_description": " Spring's implementation of the AOP Alliance MethodInvocation  interface,\nimplementing the extended ProxyMethodInvocation  interface. "},
{"api_id": 521, "api_type": 4, "full_declaration": "AopConfigException", "qualified_name": "org.springframework.aop.framework.AopConfigException", "short_description": " Exception that gets thrown on illegal AOP configuration arguments. "},
{"api_id": 522, "api_type": 3, "full_declaration": "AdvisorAdapter", "qualified_name": "org.springframework.aop.framework.adapter.AdvisorAdapter", "short_description": " Interface allowing extension to the Spring AOP framework to allow\nhandling of new Advisors and Advice types. "},
{"api_id": 523, "api_type": 3, "full_declaration": "AdvisorAdapterRegistry", "qualified_name": "org.springframework.aop.framework.adapter.AdvisorAdapterRegistry", "short_description": " Interface for registries of Advisor adapters. "},
{"api_id": 524, "api_type": 2, "full_declaration": "AdvisorAdapterRegistrationManager", "qualified_name": "org.springframework.aop.framework.adapter.AdvisorAdapterRegistrationManager", "short_description": " BeanPostProcessor that registers  AdvisorAdapter  beans in the BeanFactory with\nan  AdvisorAdapterRegistry  (by default the  GlobalAdvisorAdapterRegistry ). "},
{"api_id": 525, "api_type": 2, "full_declaration": "AfterReturningAdviceInterceptor", "qualified_name": "org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor", "short_description": " Interceptor to wrap an  AfterReturningAdvice . "},
{"api_id": 526, "api_type": 2, "full_declaration": "DefaultAdvisorAdapterRegistry", "qualified_name": "org.springframework.aop.framework.adapter.DefaultAdvisorAdapterRegistry", "short_description": " Default implementation of the  AdvisorAdapterRegistry  interface. "},
{"api_id": 527, "api_type": 2, "full_declaration": "GlobalAdvisorAdapterRegistry", "qualified_name": "org.springframework.aop.framework.adapter.GlobalAdvisorAdapterRegistry", "short_description": " Singleton to publish a shared DefaultAdvisorAdapterRegistry instance. "},
{"api_id": 528, "api_type": 2, "full_declaration": "MethodBeforeAdviceInterceptor", "qualified_name": "org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor", "short_description": " Interceptor to wrap a  MethodBeforeAdvice . "},
{"api_id": 529, "api_type": 2, "full_declaration": "ThrowsAdviceInterceptor", "qualified_name": "org.springframework.aop.framework.adapter.ThrowsAdviceInterceptor", "short_description": " Interceptor to wrap an after-throwing advice. "},
{"api_id": 530, "api_type": 4, "full_declaration": "UnknownAdviceTypeException", "qualified_name": "org.springframework.aop.framework.adapter.UnknownAdviceTypeException", "short_description": " Exception thrown when an attempt is made to use an unsupported\nAdvisor or Advice type. "},
{"api_id": 531, "api_type": 3, "full_declaration": "TargetSourceCreator", "qualified_name": "org.springframework.aop.framework.autoproxy.TargetSourceCreator", "short_description": " Implementations can create special target sources, such as pooling target\nsources, for particular beans. "},
{"api_id": 532, "api_type": 2, "full_declaration": "AbstractAdvisorAutoProxyCreator", "qualified_name": "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator", "short_description": " Generic auto proxy creator that builds AOP proxies for specific beans\nbased on detected Advisors for each bean. "},
{"api_id": 533, "api_type": 2, "full_declaration": "AbstractAutoProxyCreator", "qualified_name": "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator", "short_description": " BeanPostProcessor  implementation\nthat wraps each eligible bean with an AOP proxy, delegating to specified interceptors\nbefore invoking the bean itself. "},
{"api_id": 534, "api_type": 2, "full_declaration": "AbstractBeanFactoryAwareAdvisingPostProcessor", "qualified_name": "org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor", "short_description": " Extension of  AbstractAutoProxyCreator  which implements  BeanFactoryAware ,\nadds exposure of the original target class for each proxied bean\n( AutoProxyUtils.ORIGINAL_TARGET_CLASS_ATTRIBUTE ),\nand participates in an externally enforced target-class mode for any given bean\n( AutoProxyUtils.PRESERVE_TARGET_CLASS_ATTRIBUTE ). "},
{"api_id": 535, "api_type": 2, "full_declaration": "AutoProxyUtils", "qualified_name": "org.springframework.aop.framework.autoproxy.AutoProxyUtils", "short_description": " Utilities for auto-proxy aware components. "},
{"api_id": 536, "api_type": 2, "full_declaration": "BeanFactoryAdvisorRetrievalHelper", "qualified_name": "org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper", "short_description": " Helper for retrieving standard Spring Advisors from a BeanFactory,\nfor use with auto-proxying. "},
{"api_id": 537, "api_type": 2, "full_declaration": "BeanNameAutoProxyCreator", "qualified_name": "org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator", "short_description": " Auto proxy creator that identifies beans to proxy via a list of names. "},
{"api_id": 538, "api_type": 2, "full_declaration": "DefaultAdvisorAutoProxyCreator", "qualified_name": "org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator", "short_description": " BeanPostProcessor  implementation that creates AOP proxies based on all\ncandidate  Advisor s in the current  BeanFactory . "},
{"api_id": 539, "api_type": 2, "full_declaration": "InfrastructureAdvisorAutoProxyCreator", "qualified_name": "org.springframework.aop.framework.autoproxy.InfrastructureAdvisorAutoProxyCreator", "short_description": " Auto-proxy creator that considers infrastructure Advisor beans only,\nignoring any application-defined Advisors. "},
{"api_id": 540, "api_type": 2, "full_declaration": "ProxyCreationContext", "qualified_name": "org.springframework.aop.framework.autoproxy.ProxyCreationContext", "short_description": " Holder for the current proxy creation context, as exposed by auto-proxy creators\nsuch as  AbstractAdvisorAutoProxyCreator . "},
{"api_id": 541, "api_type": 2, "full_declaration": "AbstractBeanFactoryBasedTargetSourceCreator", "qualified_name": "org.springframework.aop.framework.autoproxy.target.AbstractBeanFactoryBasedTargetSourceCreator", "short_description": " Convenient superclass for TargetSourceCreator implementations that require creating multiple instances of a prototype bean. "},
{"api_id": 542, "api_type": 2, "full_declaration": "LazyInitTargetSourceCreator", "qualified_name": "org.springframework.aop.framework.autoproxy.target.LazyInitTargetSourceCreator", "short_description": " TargetSourceCreator  that enforces a  LazyInitTargetSource  for\neach bean that is defined as \"lazy-init\". "},
{"api_id": 543, "api_type": 2, "full_declaration": "QuickTargetSourceCreator", "qualified_name": "org.springframework.aop.framework.autoproxy.target.QuickTargetSourceCreator", "short_description": " Convenient TargetSourceCreator using bean name prefixes to create one of three\nwell-known TargetSource types:\n: CommonsPool2TargetSource\n% ThreadLocalTargetSource\n! PrototypeTargetSource "},
{"api_id": 544, "api_type": 3, "full_declaration": "AsyncUncaughtExceptionHandler", "qualified_name": "org.springframework.aop.interceptor.AsyncUncaughtExceptionHandler", "short_description": " A strategy for handling uncaught exceptions thrown from asynchronous methods. "},
{"api_id": 545, "api_type": 2, "full_declaration": "AbstractMonitoringInterceptor", "qualified_name": "org.springframework.aop.interceptor.AbstractMonitoringInterceptor", "short_description": " Base class for monitoring interceptors, such as performance monitors. "},
{"api_id": 546, "api_type": 2, "full_declaration": "AbstractTraceInterceptor", "qualified_name": "org.springframework.aop.interceptor.AbstractTraceInterceptor", "short_description": " Base  MethodInterceptor  implementation for tracing. "},
{"api_id": 547, "api_type": 2, "full_declaration": "AsyncExecutionAspectSupport", "qualified_name": "org.springframework.aop.interceptor.AsyncExecutionAspectSupport", "short_description": " Base class for asynchronous method execution aspects, such as org.springframework.scheduling.annotation.AnnotationAsyncExecutionInterceptor or  org.springframework.scheduling.aspectj.AnnotationAsyncExecutionAspect . "},
{"api_id": 548, "api_type": 2, "full_declaration": "AsyncExecutionInterceptor", "qualified_name": "org.springframework.aop.interceptor.AsyncExecutionInterceptor", "short_description": " AOP Alliance  MethodInterceptor  that processes method invocations\nasynchronously, using a given  AsyncTaskExecutor . "},
{"api_id": 549, "api_type": 2, "full_declaration": "ConcurrencyThrottleInterceptor", "qualified_name": "org.springframework.aop.interceptor.ConcurrencyThrottleInterceptor", "short_description": " Interceptor that throttles concurrent access, blocking invocations\nif a specified concurrency limit is reached. "},
{"api_id": 550, "api_type": 2, "full_declaration": "CustomizableTraceInterceptor", "qualified_name": "org.springframework.aop.interceptor.CustomizableTraceInterceptor", "short_description": " MethodInterceptor  implementation that allows for highly customizable\nmethod-level tracing, using placeholders. "},
{"api_id": 551, "api_type": 2, "full_declaration": "DebugInterceptor", "qualified_name": "org.springframework.aop.interceptor.DebugInterceptor", "short_description": " AOP Alliance  MethodInterceptor  that can be introduced in a chain\nto display verbose information about intercepted invocations to the logger. "},
{"api_id": 552, "api_type": 2, "full_declaration": "ExposeBeanNameAdvisors", "qualified_name": "org.springframework.aop.interceptor.ExposeBeanNameAdvisors", "short_description": " Convenient methods for creating advisors that may be used when autoproxying beans\ncreated with the Spring IoC container, binding the bean name to the current\ninvocation. "},
{"api_id": 553, "api_type": 2, "full_declaration": "ExposeInvocationInterceptor", "qualified_name": "org.springframework.aop.interceptor.ExposeInvocationInterceptor", "short_description": " Interceptor that exposes the current  MethodInvocation as a thread-local object. "},
{"api_id": 554, "api_type": 2, "full_declaration": "JamonPerformanceMonitorInterceptor", "qualified_name": "org.springframework.aop.interceptor.JamonPerformanceMonitorInterceptor", "short_description": " Performance monitor interceptor that uses  JAMon  library to perform the\nperformance measurement on the intercepted method and output the stats. "},
{"api_id": 555, "api_type": 2, "full_declaration": "PerformanceMonitorInterceptor", "qualified_name": "org.springframework.aop.interceptor.PerformanceMonitorInterceptor", "short_description": " Simple AOP Alliance  MethodInterceptor  for performance monitoring. "},
{"api_id": 556, "api_type": 2, "full_declaration": "SimpleAsyncUncaughtExceptionHandler", "qualified_name": "org.springframework.aop.interceptor.SimpleAsyncUncaughtExceptionHandler", "short_description": " A default  AsyncUncaughtExceptionHandler  that simply logs the exception. "},
{"api_id": 557, "api_type": 2, "full_declaration": "SimpleTraceInterceptor", "qualified_name": "org.springframework.aop.interceptor.SimpleTraceInterceptor", "short_description": " Simple AOP Alliance  MethodInterceptor  that can be introduced\nin a chain to display verbose trace information about intercepted method\ninvocations, with method entry and method exit info. "},
{"api_id": 558, "api_type": 3, "full_declaration": "ScopedObject", "qualified_name": "org.springframework.aop.scope.ScopedObject", "short_description": " An AOP introduction interface for scoped objects. "},
{"api_id": 559, "api_type": 2, "full_declaration": "DefaultScopedObject", "qualified_name": "org.springframework.aop.scope.DefaultScopedObject", "short_description": " Default implementation of the  ScopedObject  interface. "},
{"api_id": 560, "api_type": 2, "full_declaration": "ScopedProxyFactoryBean", "qualified_name": "org.springframework.aop.scope.ScopedProxyFactoryBean", "short_description": " Convenient proxy factory bean for scoped objects. "},
{"api_id": 561, "api_type": 2, "full_declaration": "ScopedProxyUtils", "qualified_name": "org.springframework.aop.scope.ScopedProxyUtils", "short_description": " Utility class for creating a scoped proxy. "},
{"api_id": 562, "api_type": 3, "full_declaration": "ExpressionPointcut", "qualified_name": "org.springframework.aop.support.ExpressionPointcut", "short_description": " Interface to be implemented by pointcuts that use String expressions. "},
{"api_id": 563, "api_type": 2, "full_declaration": "AbstractBeanFactoryPointcutAdvisor", "qualified_name": "org.springframework.aop.support.AbstractBeanFactoryPointcutAdvisor", "short_description": " Abstract BeanFactory-based PointcutAdvisor that allows for any Advice\nto be configured as reference to an Advice bean in a BeanFactory. "},
{"api_id": 564, "api_type": 2, "full_declaration": "AbstractExpressionPointcut", "qualified_name": "org.springframework.aop.support.AbstractExpressionPointcut", "short_description": " Abstract superclass for expression pointcuts,\noffering location and expression properties. "},
{"api_id": 565, "api_type": 2, "full_declaration": "AbstractGenericPointcutAdvisor", "qualified_name": "org.springframework.aop.support.AbstractGenericPointcutAdvisor", "short_description": " Abstract generic  PointcutAdvisor that allows for any  Advice  to be configured. "},
{"api_id": 566, "api_type": 2, "full_declaration": "AbstractPointcutAdvisor", "qualified_name": "org.springframework.aop.support.AbstractPointcutAdvisor", "short_description": " Abstract base class for  PointcutAdvisor implementations. "},
{"api_id": 567, "api_type": 2, "full_declaration": "AbstractRegexpMethodPointcut", "qualified_name": "org.springframework.aop.support.AbstractRegexpMethodPointcut", "short_description": " Abstract base regular expression pointcut bean. "},
{"api_id": 568, "api_type": 2, "full_declaration": "AopUtils", "qualified_name": "org.springframework.aop.support.AopUtils", "short_description": " Utility methods for AOP support code. "},
{"api_id": 569, "api_type": 2, "full_declaration": "ClassFilters", "qualified_name": "org.springframework.aop.support.ClassFilters", "short_description": " Static utility methods for composing  ClassFilters . "},
{"api_id": 570, "api_type": 2, "full_declaration": "ComposablePointcut", "qualified_name": "org.springframework.aop.support.ComposablePointcut", "short_description": " Convenient class for building up pointcuts. "},
{"api_id": 571, "api_type": 2, "full_declaration": "ControlFlowPointcut", "qualified_name": "org.springframework.aop.support.ControlFlowPointcut", "short_description": " Pointcut and method matcher for use in simple  cflow -style pointcut. "},
{"api_id": 572, "api_type": 2, "full_declaration": "DefaultBeanFactoryPointcutAdvisor", "qualified_name": "org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor", "short_description": " Concrete BeanFactory-based PointcutAdvisor that allows for any Advice\nto be configured as reference to an Advice bean in the BeanFactory,\nas well as the Pointcut to be configured through a bean property. "},
{"api_id": 573, "api_type": 2, "full_declaration": "DefaultIntroductionAdvisor", "qualified_name": "org.springframework.aop.support.DefaultIntroductionAdvisor", "short_description": " Simple  IntroductionAdvisor  implementation\nthat by default applies to any class. "},
{"api_id": 574, "api_type": 2, "full_declaration": "DefaultPointcutAdvisor", "qualified_name": "org.springframework.aop.support.DefaultPointcutAdvisor", "short_description": " Convenient Pointcut-driven Advisor implementation. "},
{"api_id": 575, "api_type": 2, "full_declaration": "DelegatePerTargetObjectIntroductionInterceptor", "qualified_name": "org.springframework.aop.support.DelegatePerTargetObjectIntroductionInterceptor", "short_description": " Convenient implementation of the IntroductionInterceptor  interface. "},
{"api_id": 576, "api_type": 2, "full_declaration": "DelegatingIntroductionInterceptor", "qualified_name": "org.springframework.aop.support.DelegatingIntroductionInterceptor", "short_description": " Convenient implementation of the IntroductionInterceptor  interface. "},
{"api_id": 577, "api_type": 2, "full_declaration": "DynamicMethodMatcher", "qualified_name": "org.springframework.aop.support.DynamicMethodMatcher", "short_description": " Convenient abstract superclass for dynamic method matchers,\nwhich do care about arguments at runtime. "},
{"api_id": 578, "api_type": 2, "full_declaration": "DynamicMethodMatcherPointcut", "qualified_name": "org.springframework.aop.support.DynamicMethodMatcherPointcut", "short_description": " Convenient superclass when we want to force subclasses to\nimplement MethodMatcher interface, but subclasses\nwill want to be pointcuts. "},
{"api_id": 579, "api_type": 2, "full_declaration": "IntroductionInfoSupport", "qualified_name": "org.springframework.aop.support.IntroductionInfoSupport", "short_description": " Support for implementations of  IntroductionInfo . "},
{"api_id": 580, "api_type": 2, "full_declaration": "JdkRegexpMethodPointcut", "qualified_name": "org.springframework.aop.support.JdkRegexpMethodPointcut", "short_description": " Regular expression pointcut based on the  java.util.regex  package. "},
{"api_id": 581, "api_type": 2, "full_declaration": "MethodMatchers", "qualified_name": "org.springframework.aop.support.MethodMatchers", "short_description": " Static utility methods for composing  MethodMatchers . "},
{"api_id": 582, "api_type": 2, "full_declaration": "NameMatchMethodPointcut", "qualified_name": "org.springframework.aop.support.NameMatchMethodPointcut", "short_description": " Pointcut bean for simple method name matches, as an alternative to regexp patterns. "},
{"api_id": 583, "api_type": 2, "full_declaration": "NameMatchMethodPointcutAdvisor", "qualified_name": "org.springframework.aop.support.NameMatchMethodPointcutAdvisor", "short_description": " Convenient class for name-match method pointcuts that hold an Advice,\nmaking them an Advisor. "},
{"api_id": 584, "api_type": 2, "full_declaration": "Pointcuts", "qualified_name": "org.springframework.aop.support.Pointcuts", "short_description": " Pointcut constants for matching getters and setters,\nand static methods useful for manipulating and evaluating pointcuts. "},
{"api_id": 585, "api_type": 2, "full_declaration": "RegexpMethodPointcutAdvisor", "qualified_name": "org.springframework.aop.support.RegexpMethodPointcutAdvisor", "short_description": " Convenient class for regexp method pointcuts that hold an Advice,\nmaking them an  Advisor . "},
{"api_id": 586, "api_type": 2, "full_declaration": "RootClassFilter", "qualified_name": "org.springframework.aop.support.RootClassFilter", "short_description": " Simple ClassFilter implementation that passes classes (and optionally subclasses). "},
{"api_id": 587, "api_type": 2, "full_declaration": "StaticMethodMatcher", "qualified_name": "org.springframework.aop.support.StaticMethodMatcher", "short_description": " Convenient abstract superclass for static method matchers, which don't care\nabout arguments at runtime. "},
{"api_id": 588, "api_type": 2, "full_declaration": "StaticMethodMatcherPointcut", "qualified_name": "org.springframework.aop.support.StaticMethodMatcherPointcut", "short_description": " Convenient superclass when we want to force subclasses to implement the MethodMatcher  interface but subclasses will want to be pointcuts. "},
{"api_id": 589, "api_type": 2, "full_declaration": "StaticMethodMatcherPointcutAdvisor", "qualified_name": "org.springframework.aop.support.StaticMethodMatcherPointcutAdvisor", "short_description": " Convenient base class for Advisors that are also static pointcuts. "},
{"api_id": 590, "api_type": 2, "full_declaration": "AnnotationClassFilter", "qualified_name": "org.springframework.aop.support.annotation.AnnotationClassFilter", "short_description": " Simple ClassFilter that looks for a specific Java 5 annotation\nbeing present on a class. "},
{"api_id": 591, "api_type": 2, "full_declaration": "AnnotationMatchingPointcut", "qualified_name": "org.springframework.aop.support.annotation.AnnotationMatchingPointcut", "short_description": " Simple Pointcut that looks for a specific Java 5 annotation\nbeing present on a  class  or method . "},
{"api_id": 592, "api_type": 2, "full_declaration": "AnnotationMethodMatcher", "qualified_name": "org.springframework.aop.support.annotation.AnnotationMethodMatcher", "short_description": " Simple MethodMatcher that looks for a specific Java 5 annotation\nbeing present on a method (checking both the method on the invoked\ninterface, if any, and the corresponding method on the target class). "},
{"api_id": 593, "api_type": 3, "full_declaration": "PoolingConfig", "qualified_name": "org.springframework.aop.target.PoolingConfig", "short_description": " Config interface for a pooling target source. "},
{"api_id": 594, "api_type": 3, "full_declaration": "ThreadLocalTargetSourceStats", "qualified_name": "org.springframework.aop.target.ThreadLocalTargetSourceStats", "short_description": " Statistics for a ThreadLocal TargetSource. "},
{"api_id": 595, "api_type": 2, "full_declaration": "AbstractBeanFactoryBasedTargetSource", "qualified_name": "org.springframework.aop.target.AbstractBeanFactoryBasedTargetSource", "short_description": " Base class for  TargetSource  implementations\nthat are based on a Spring  BeanFactory ,\ndelegating to Spring-managed bean instances. "},
{"api_id": 596, "api_type": 2, "full_declaration": "AbstractLazyCreationTargetSource", "qualified_name": "org.springframework.aop.target.AbstractLazyCreationTargetSource", "short_description": " TargetSource  implementation that will\nlazily create a user-managed object. "},
{"api_id": 597, "api_type": 2, "full_declaration": "AbstractPoolingTargetSource", "qualified_name": "org.springframework.aop.target.AbstractPoolingTargetSource", "short_description": " Abstract base class for pooling  TargetSource implementations which maintain a pool of target instances, acquiring and\nreleasing a target object from the pool for each method invocation. "},
{"api_id": 598, "api_type": 2, "full_declaration": "AbstractPrototypeBasedTargetSource", "qualified_name": "org.springframework.aop.target.AbstractPrototypeBasedTargetSource", "short_description": " Base class for dynamic  TargetSource  implementations\nthat create new prototype bean instances to support a pooling or\nnew-instance-per-invocation strategy. "},
{"api_id": 599, "api_type": 2, "full_declaration": "CommonsPool2TargetSource", "qualified_name": "org.springframework.aop.target.CommonsPool2TargetSource", "short_description": " TargetSource  implementation that holds\nobjects in a configurable Apache Commons2 Pool. "},
{"api_id": 600, "api_type": 2, "full_declaration": "EmptyTargetSource", "qualified_name": "org.springframework.aop.target.EmptyTargetSource", "short_description": " Canonical  TargetSource  when there is no target\n(or just the target class known), and behavior is supplied\nby interfaces and advisors only. "},
{"api_id": 601, "api_type": 2, "full_declaration": "HotSwappableTargetSource", "qualified_name": "org.springframework.aop.target.HotSwappableTargetSource", "short_description": " TargetSource  implementation that\ncaches a local target object, but allows the target to be swapped\nwhile the application is running. "},
{"api_id": 602, "api_type": 2, "full_declaration": "LazyInitTargetSource", "qualified_name": "org.springframework.aop.target.LazyInitTargetSource", "short_description": " TargetSource  that lazily accesses a\nsingleton bean from a  BeanFactory . "},
{"api_id": 603, "api_type": 2, "full_declaration": "PrototypeTargetSource", "qualified_name": "org.springframework.aop.target.PrototypeTargetSource", "short_description": " TargetSource  implementation that\ncreates a new instance of the target bean for each request,\ndestroying each instance on release (after each request). "},
{"api_id": 604, "api_type": 2, "full_declaration": "SimpleBeanTargetSource", "qualified_name": "org.springframework.aop.target.SimpleBeanTargetSource", "short_description": " Simple  TargetSource  implementation,\nfreshly obtaining the specified target bean from its containing\nSpring  BeanFactory . "},
{"api_id": 605, "api_type": 2, "full_declaration": "SingletonTargetSource", "qualified_name": "org.springframework.aop.target.SingletonTargetSource", "short_description": " Implementation of the  TargetSource  interface\nthat holds a given object. "},
{"api_id": 606, "api_type": 2, "full_declaration": "ThreadLocalTargetSource", "qualified_name": "org.springframework.aop.target.ThreadLocalTargetSource", "short_description": " Alternative to an object pool. "},
{"api_id": 607, "api_type": 3, "full_declaration": "Refreshable", "qualified_name": "org.springframework.aop.target.dynamic.Refreshable", "short_description": " Interface to be implemented by dynamic target objects,\nwhich support reloading and optionally polling for updates. "},
{"api_id": 608, "api_type": 2, "full_declaration": "AbstractRefreshableTargetSource", "qualified_name": "org.springframework.aop.target.dynamic.AbstractRefreshableTargetSource", "short_description": " Abstract  TargetSource  implementation that\nwraps a refreshable target object. "},
{"api_id": 609, "api_type": 2, "full_declaration": "BeanFactoryRefreshableTargetSource", "qualified_name": "org.springframework.aop.target.dynamic.BeanFactoryRefreshableTargetSource", "short_description": " Refreshable TargetSource that fetches fresh target beans from a BeanFactory. "},
{"api_id": 610, "api_type": 3, "full_declaration": "Opcodes", "qualified_name": "org.springframework.asm.Opcodes", "short_description": " The JVM opcodes, access flags and array type codes. "},
{"api_id": 611, "api_type": 2, "full_declaration": "AnnotationVisitor", "qualified_name": "org.springframework.asm.AnnotationVisitor", "short_description": " A visitor to visit a Java annotation. "},
{"api_id": 612, "api_type": 2, "full_declaration": "Attribute", "qualified_name": "org.springframework.asm.Attribute", "short_description": " A non standard class, field, method or Code attribute, as defined in the Java Virtual Machine\nSpecification (JVMS). "},
{"api_id": 613, "api_type": 2, "full_declaration": "ByteVector", "qualified_name": "org.springframework.asm.ByteVector", "short_description": " A dynamically extensible vector of bytes. "},
{"api_id": 614, "api_type": 2, "full_declaration": "ClassReader", "qualified_name": "org.springframework.asm.ClassReader", "short_description": " A parser to make a  ClassVisitor  visit a ClassFile structure, as defined in the Java\nVirtual Machine Specification (JVMS). "},
{"api_id": 615, "api_type": 2, "full_declaration": "ClassVisitor", "qualified_name": "org.springframework.asm.ClassVisitor", "short_description": " A visitor to visit a Java class. "},
{"api_id": 616, "api_type": 2, "full_declaration": "ClassWriter", "qualified_name": "org.springframework.asm.ClassWriter", "short_description": " A  ClassVisitor  that generates a corresponding ClassFile structure, as defined in the Java\nVirtual Machine Specification (JVMS). "},
{"api_id": 617, "api_type": 2, "full_declaration": "ConstantDynamic", "qualified_name": "org.springframework.asm.ConstantDynamic", "short_description": " A constant whose value is computed at runtime, with a bootstrap method. "},
{"api_id": 618, "api_type": 2, "full_declaration": "FieldVisitor", "qualified_name": "org.springframework.asm.FieldVisitor", "short_description": " A visitor to visit a Java field. "},
{"api_id": 619, "api_type": 2, "full_declaration": "Handle", "qualified_name": "org.springframework.asm.Handle", "short_description": " A reference to a field or a method. "},
{"api_id": 620, "api_type": 2, "full_declaration": "Label", "qualified_name": "org.springframework.asm.Label", "short_description": " A position in the bytecode of a method. "},
{"api_id": 621, "api_type": 2, "full_declaration": "MethodVisitor", "qualified_name": "org.springframework.asm.MethodVisitor", "short_description": " A visitor to visit a Java method. "},
{"api_id": 622, "api_type": 2, "full_declaration": "ModuleVisitor", "qualified_name": "org.springframework.asm.ModuleVisitor", "short_description": " A visitor to visit a Java module. "},
{"api_id": 623, "api_type": 2, "full_declaration": "RecordComponentVisitor", "qualified_name": "org.springframework.asm.RecordComponentVisitor", "short_description": " A visitor to visit a record component. "},
{"api_id": 624, "api_type": 2, "full_declaration": "SpringAsmInfo", "qualified_name": "org.springframework.asm.SpringAsmInfo", "short_description": " Utility class exposing constants related to Spring's internal repackaging\nof the ASM bytecode library: currently based on ASM 9.0 plus minor patches. "},
{"api_id": 625, "api_type": 2, "full_declaration": "Type", "qualified_name": "org.springframework.asm.Type", "short_description": " A Java field or method type. "},
{"api_id": 626, "api_type": 2, "full_declaration": "TypePath", "qualified_name": "org.springframework.asm.TypePath", "short_description": " The path to a type argument, wildcard bound, array element type, or static inner type within an\nenclosing type. "},
{"api_id": 627, "api_type": 2, "full_declaration": "TypeReference", "qualified_name": "org.springframework.asm.TypeReference", "short_description": " A reference to a type appearing in a class, field or method declaration, or on an instruction. "},
{"api_id": 628, "api_type": 4, "full_declaration": "ClassTooLargeException", "qualified_name": "org.springframework.asm.ClassTooLargeException", "short_description": " Exception thrown when the constant pool of a class produced by a  ClassWriter  is too\nlarge. "},
{"api_id": 629, "api_type": 4, "full_declaration": "MethodTooLargeException", "qualified_name": "org.springframework.asm.MethodTooLargeException", "short_description": " Exception thrown when the Code attribute of a method produced by a  ClassWriter  is too\nlarge. "},
{"api_id": 630, "api_type": 3, "full_declaration": "BeanInfoFactory", "qualified_name": "org.springframework.beans.BeanInfoFactory", "short_description": " Strategy interface for creating  BeanInfo  instances for Spring beans. "},
{"api_id": 631, "api_type": 3, "full_declaration": "BeanMetadataElement", "qualified_name": "org.springframework.beans.BeanMetadataElement", "short_description": " Interface to be implemented by bean metadata elements\nthat carry a configuration source object. "},
{"api_id": 632, "api_type": 3, "full_declaration": "BeanWrapper", "qualified_name": "org.springframework.beans.BeanWrapper", "short_description": " The central interface of Spring's low-level JavaBeans infrastructure. "},
{"api_id": 633, "api_type": 3, "full_declaration": "ConfigurablePropertyAccessor", "qualified_name": "org.springframework.beans.ConfigurablePropertyAccessor", "short_description": " Interface that encapsulates configuration methods for a PropertyAccessor. "},
{"api_id": 634, "api_type": 3, "full_declaration": "Mergeable", "qualified_name": "org.springframework.beans.Mergeable", "short_description": " Interface representing an object whose value set can be merged with\nthat of a parent object. "},
{"api_id": 635, "api_type": 3, "full_declaration": "PropertyAccessor", "qualified_name": "org.springframework.beans.PropertyAccessor", "short_description": " Common interface for classes that can access named properties\n(such as bean properties of an object or fields in an object)\nServes as base interface for  BeanWrapper . "},
{"api_id": 636, "api_type": 3, "full_declaration": "PropertyEditorRegistrar", "qualified_name": "org.springframework.beans.PropertyEditorRegistrar", "short_description": " Interface for strategies that register custom property editors  with a property editor registry . "},
{"api_id": 637, "api_type": 3, "full_declaration": "PropertyEditorRegistry", "qualified_name": "org.springframework.beans.PropertyEditorRegistry", "short_description": " Encapsulates methods for registering JavaBeans  PropertyEditors . "},
{"api_id": 638, "api_type": 3, "full_declaration": "PropertyValues", "qualified_name": "org.springframework.beans.PropertyValues", "short_description": " Holder containing one or more  PropertyValue  objects,\ntypically comprising one update for a specific target bean. "},
{"api_id": 639, "api_type": 3, "full_declaration": "TypeConverter", "qualified_name": "org.springframework.beans.TypeConverter", "short_description": " Interface that defines type conversion methods. "},
{"api_id": 640, "api_type": 2, "full_declaration": "AbstractNestablePropertyAccessor", "qualified_name": "org.springframework.beans.AbstractNestablePropertyAccessor", "short_description": " A basic  ConfigurablePropertyAccessor  that provides the necessary\ninfrastructure for all typical use cases. "},
{"api_id": 641, "api_type": 2, "full_declaration": "AbstractNestablePropertyAccessor.PropertyHandler", "qualified_name": "org.springframework.beans.AbstractNestablePropertyAccessor.PropertyHandler", "short_description": " A handler for a specific property. "},
{"api_id": 642, "api_type": 2, "full_declaration": "AbstractNestablePropertyAccessor.PropertyTokenHolder", "qualified_name": "org.springframework.beans.AbstractNestablePropertyAccessor.PropertyTokenHolder", "short_description": " Holder class used to store property tokens. "},
{"api_id": 643, "api_type": 2, "full_declaration": "AbstractPropertyAccessor", "qualified_name": "org.springframework.beans.AbstractPropertyAccessor", "short_description": " Abstract implementation of the  PropertyAccessor  interface. "},
{"api_id": 644, "api_type": 2, "full_declaration": "BeanMetadataAttribute", "qualified_name": "org.springframework.beans.BeanMetadataAttribute", "short_description": " Holder for a key-value style attribute that is part of a bean definition. "},
{"api_id": 645, "api_type": 2, "full_declaration": "BeanMetadataAttributeAccessor", "qualified_name": "org.springframework.beans.BeanMetadataAttributeAccessor", "short_description": " Extension of  AttributeAccessorSupport ,\nholding attributes as  BeanMetadataAttribute  objects in order\nto keep track of the definition source. "},
{"api_id": 646, "api_type": 2, "full_declaration": "BeanUtils", "qualified_name": "org.springframework.beans.BeanUtils", "short_description": " Static convenience methods for JavaBeans: for instantiating beans,\nchecking bean property types, copying bean properties, etc. "},
{"api_id": 647, "api_type": 2, "full_declaration": "BeanWrapperImpl", "qualified_name": "org.springframework.beans.BeanWrapperImpl", "short_description": " Default  BeanWrapper  implementation that should be sufficient\nfor all typical use cases. "},
{"api_id": 648, "api_type": 2, "full_declaration": "CachedIntrospectionResults", "qualified_name": "org.springframework.beans.CachedIntrospectionResults", "short_description": " Internal class that caches JavaBeans  PropertyDescriptor information for a Java class. "},
{"api_id": 649, "api_type": 2, "full_declaration": "DirectFieldAccessor", "qualified_name": "org.springframework.beans.DirectFieldAccessor", "short_description": " ConfigurablePropertyAccessor  implementation that directly accesses\ninstance fields. "},
{"api_id": 650, "api_type": 2, "full_declaration": "ExtendedBeanInfoFactory", "qualified_name": "org.springframework.beans.ExtendedBeanInfoFactory", "short_description": " BeanInfoFactory  implementation that evaluates whether bean classes have\n\"non-standard\" JavaBeans setter methods and are thus candidates for introspection\nby Spring's (package-visible)  ExtendedBeanInfo  implementation. "},
{"api_id": 651, "api_type": 2, "full_declaration": "MutablePropertyValues", "qualified_name": "org.springframework.beans.MutablePropertyValues", "short_description": " The default implementation of the  PropertyValues  interface. "},
{"api_id": 652, "api_type": 2, "full_declaration": "PropertyAccessorFactory", "qualified_name": "org.springframework.beans.PropertyAccessorFactory", "short_description": " Simple factory facade for obtaining  PropertyAccessor  instances,\nin particular for  BeanWrapper  instances. "},
{"api_id": 653, "api_type": 2, "full_declaration": "PropertyAccessorUtils", "qualified_name": "org.springframework.beans.PropertyAccessorUtils", "short_description": " Utility methods for classes that perform bean property access\naccording to the  PropertyAccessor  interface. "},
{"api_id": 654, "api_type": 2, "full_declaration": "PropertyEditorRegistrySupport", "qualified_name": "org.springframework.beans.PropertyEditorRegistrySupport", "short_description": " Base implementation of the  PropertyEditorRegistry  interface. "},
{"api_id": 655, "api_type": 2, "full_declaration": "PropertyMatches", "qualified_name": "org.springframework.beans.PropertyMatches", "short_description": " Helper class for calculating property matches, according to a configurable\ndistance. "},
{"api_id": 656, "api_type": 2, "full_declaration": "PropertyValue", "qualified_name": "org.springframework.beans.PropertyValue", "short_description": " Object to hold information and value for an individual bean property. "},
{"api_id": 657, "api_type": 2, "full_declaration": "PropertyValuesEditor", "qualified_name": "org.springframework.beans.PropertyValuesEditor", "short_description": " Editor  for a  PropertyValues  object. "},
{"api_id": 658, "api_type": 2, "full_declaration": "SimpleTypeConverter", "qualified_name": "org.springframework.beans.SimpleTypeConverter", "short_description": " Simple implementation of the  TypeConverter  interface that does not operate on\na specific target object. "},
{"api_id": 659, "api_type": 2, "full_declaration": "TypeConverterSupport", "qualified_name": "org.springframework.beans.TypeConverterSupport", "short_description": " Base implementation of the  TypeConverter  interface, using a package-private delegate. "},
{"api_id": 660, "api_type": 4, "full_declaration": "BeanInstantiationException", "qualified_name": "org.springframework.beans.BeanInstantiationException", "short_description": " Exception thrown when instantiation of a bean failed. "},
{"api_id": 661, "api_type": 4, "full_declaration": "BeansException", "qualified_name": "org.springframework.beans.BeansException", "short_description": " Abstract superclass for all exceptions thrown in the beans package\nand subpackages. "},
{"api_id": 662, "api_type": 4, "full_declaration": "ConversionNotSupportedException", "qualified_name": "org.springframework.beans.ConversionNotSupportedException", "short_description": " Exception thrown when no suitable editor or converter can be found for a bean property. "},
{"api_id": 663, "api_type": 4, "full_declaration": "FatalBeanException", "qualified_name": "org.springframework.beans.FatalBeanException", "short_description": " Thrown on an unrecoverable problem encountered in the\nbeans packages or sub-packages, e.g. "},
{"api_id": 664, "api_type": 4, "full_declaration": "InvalidPropertyException", "qualified_name": "org.springframework.beans.InvalidPropertyException", "short_description": " Exception thrown when referring to an invalid bean property. "},
{"api_id": 665, "api_type": 4, "full_declaration": "MethodInvocationException", "qualified_name": "org.springframework.beans.MethodInvocationException", "short_description": " Thrown when a bean property getter or setter method throws an exception,\nanalogous to an InvocationTargetException. "},
{"api_id": 666, "api_type": 4, "full_declaration": "NotReadablePropertyException", "qualified_name": "org.springframework.beans.NotReadablePropertyException", "short_description": " Exception thrown on an attempt to get the value of a property\nthat isn't readable, because there's no getter method. "},
{"api_id": 667, "api_type": 4, "full_declaration": "NotWritablePropertyException", "qualified_name": "org.springframework.beans.NotWritablePropertyException", "short_description": " Exception thrown on an attempt to set the value of a property that\nis not writable (typically because there is no setter method). "},
{"api_id": 668, "api_type": 4, "full_declaration": "NullValueInNestedPathException", "qualified_name": "org.springframework.beans.NullValueInNestedPathException", "short_description": " Exception thrown when navigation of a valid nested property\npath encounters a NullPointerException. "},
{"api_id": 669, "api_type": 4, "full_declaration": "PropertyAccessException", "qualified_name": "org.springframework.beans.PropertyAccessException", "short_description": " Superclass for exceptions related to a property access,\nsuch as type mismatch or invocation target exception. "},
{"api_id": 670, "api_type": 4, "full_declaration": "PropertyBatchUpdateException", "qualified_name": "org.springframework.beans.PropertyBatchUpdateException", "short_description": " Combined exception, composed of individual PropertyAccessException instances. "},
{"api_id": 671, "api_type": 4, "full_declaration": "TypeMismatchException", "qualified_name": "org.springframework.beans.TypeMismatchException", "short_description": " Exception thrown on a type mismatch when trying to set a bean property. "},
{"api_id": 672, "api_type": 2, "full_declaration": "AnnotationBeanUtils", "qualified_name": "org.springframework.beans.annotation.AnnotationBeanUtils", "short_description": "Deprecated as of 5.2, in favor of custom annotation attribute processing "},
{"api_id": 673, "api_type": 3, "full_declaration": "Aware", "qualified_name": "org.springframework.beans.factory.Aware", "short_description": " A marker superinterface indicating that a bean is eligible to be notified by the\nSpring container of a particular framework object through a callback-style method. "},
{"api_id": 674, "api_type": 3, "full_declaration": "BeanClassLoaderAware", "qualified_name": "org.springframework.beans.factory.BeanClassLoaderAware", "short_description": " Callback that allows a bean to be aware of the bean class loader ; that is, the class loader used by the\npresent bean factory to load bean classes. "},
{"api_id": 675, "api_type": 3, "full_declaration": "BeanFactory", "qualified_name": "org.springframework.beans.factory.BeanFactory", "short_description": " The root interface for accessing a Spring bean container. "},
{"api_id": 676, "api_type": 3, "full_declaration": "BeanFactoryAware", "qualified_name": "org.springframework.beans.factory.BeanFactoryAware", "short_description": " Interface to be implemented by beans that wish to be aware of their\nowning  BeanFactory . "},
{"api_id": 677, "api_type": 3, "full_declaration": "BeanNameAware", "qualified_name": "org.springframework.beans.factory.BeanNameAware", "short_description": " Interface to be implemented by beans that want to be aware of their\nbean name in a bean factory. "},
{"api_id": 678, "api_type": 3, "full_declaration": "DisposableBean", "qualified_name": "org.springframework.beans.factory.DisposableBean", "short_description": " Interface to be implemented by beans that want to release resources on destruction. "},
{"api_id": 679, "api_type": 3, "full_declaration": "FactoryBean", "qualified_name": "org.springframework.beans.factory.FactoryBean", "short_description": " Interface to be implemented by objects used within a  BeanFactory  which\nare themselves factories for individual objects. "},
{"api_id": 680, "api_type": 3, "full_declaration": "HierarchicalBeanFactory", "qualified_name": "org.springframework.beans.factory.HierarchicalBeanFactory", "short_description": " Sub-interface implemented by bean factories that can be part\nof a hierarchy. "},
{"api_id": 681, "api_type": 3, "full_declaration": "InitializingBean", "qualified_name": "org.springframework.beans.factory.InitializingBean", "short_description": " Interface to be implemented by beans that need to react once all their properties\nhave been set by a  BeanFactory : e.g. "},
{"api_id": 682, "api_type": 3, "full_declaration": "ListableBeanFactory", "qualified_name": "org.springframework.beans.factory.ListableBeanFactory", "short_description": " Extension of the  BeanFactory  interface to be implemented by bean factories\nthat can enumerate all their bean instances, rather than attempting bean lookup\nby name one by one as requested by clients. "},
{"api_id": 683, "api_type": 3, "full_declaration": "NamedBean", "qualified_name": "org.springframework.beans.factory.NamedBean", "short_description": " Counterpart of  BeanNameAware . "},
{"api_id": 684, "api_type": 3, "full_declaration": "ObjectFactory", "qualified_name": "org.springframework.beans.factory.ObjectFactory", "short_description": " Defines a factory which can return an Object instance\n(possibly shared or independent) when invoked. "},
{"api_id": 685, "api_type": 3, "full_declaration": "ObjectProvider", "qualified_name": "org.springframework.beans.factory.ObjectProvider", "short_description": " A variant of  ObjectFactory  designed specifically for injection points,\nallowing for programmatic optionality and lenient not-unique handling. "},
{"api_id": 686, "api_type": 3, "full_declaration": "SmartFactoryBean", "qualified_name": "org.springframework.beans.factory.SmartFactoryBean", "short_description": " Extension of the  FactoryBean  interface. "},
{"api_id": 687, "api_type": 3, "full_declaration": "SmartInitializingSingleton", "qualified_name": "org.springframework.beans.factory.SmartInitializingSingleton", "short_description": " Callback interface triggered at the end of the singleton pre-instantiation phase\nduring  BeanFactory  bootstrap. "},
{"api_id": 688, "api_type": 2, "full_declaration": "BeanFactoryUtils", "qualified_name": "org.springframework.beans.factory.BeanFactoryUtils", "short_description": " Convenience methods operating on bean factories, in particular\non the  ListableBeanFactory  interface. "},
{"api_id": 689, "api_type": 2, "full_declaration": "InjectionPoint", "qualified_name": "org.springframework.beans.factory.InjectionPoint", "short_description": " A simple descriptor for an injection point, pointing to a method/constructor\nparameter or a field. "},
{"api_id": 690, "api_type": 4, "full_declaration": "BeanCreationException", "qualified_name": "org.springframework.beans.factory.BeanCreationException", "short_description": " Exception thrown when a BeanFactory encounters an error when\nattempting to create a bean from a bean definition. "},
{"api_id": 691, "api_type": 4, "full_declaration": "BeanCreationNotAllowedException", "qualified_name": "org.springframework.beans.factory.BeanCreationNotAllowedException", "short_description": " Exception thrown in case of a bean being requested despite\nbean creation currently not being allowed (for example, during\nthe shutdown phase of a bean factory). "},
{"api_id": 692, "api_type": 4, "full_declaration": "BeanCurrentlyInCreationException", "qualified_name": "org.springframework.beans.factory.BeanCurrentlyInCreationException", "short_description": " Exception thrown in case of a reference to a bean that's currently in creation. "},
{"api_id": 693, "api_type": 4, "full_declaration": "BeanDefinitionStoreException", "qualified_name": "org.springframework.beans.factory.BeanDefinitionStoreException", "short_description": " Exception thrown when a BeanFactory encounters an invalid bean definition:\ne.g. "},
{"api_id": 694, "api_type": 4, "full_declaration": "BeanExpressionException", "qualified_name": "org.springframework.beans.factory.BeanExpressionException", "short_description": " Exception that indicates an expression evaluation attempt having failed. "},
{"api_id": 695, "api_type": 4, "full_declaration": "BeanInitializationException", "qualified_name": "org.springframework.beans.factory.BeanInitializationException", "short_description": " Exception that a bean implementation is suggested to throw if its own\nfactory-aware initialization code fails. "},
{"api_id": 696, "api_type": 4, "full_declaration": "BeanIsAbstractException", "qualified_name": "org.springframework.beans.factory.BeanIsAbstractException", "short_description": " Exception thrown when a bean instance has been requested for\na bean definition which has been marked as abstract. "},
{"api_id": 697, "api_type": 4, "full_declaration": "BeanIsNotAFactoryException", "qualified_name": "org.springframework.beans.factory.BeanIsNotAFactoryException", "short_description": " Exception thrown when a bean is not a factory, but a user tries to get\nat the factory for the given bean name. "},
{"api_id": 698, "api_type": 4, "full_declaration": "BeanNotOfRequiredTypeException", "qualified_name": "org.springframework.beans.factory.BeanNotOfRequiredTypeException", "short_description": " Thrown when a bean doesn't match the expected type. "},
{"api_id": 699, "api_type": 4, "full_declaration": "CannotLoadBeanClassException", "qualified_name": "org.springframework.beans.factory.CannotLoadBeanClassException", "short_description": " Exception thrown when the BeanFactory cannot load the specified class\nof a given bean. "},
{"api_id": 700, "api_type": 4, "full_declaration": "FactoryBeanNotInitializedException", "qualified_name": "org.springframework.beans.factory.FactoryBeanNotInitializedException", "short_description": " Exception to be thrown from a FactoryBean's  getObject()  method\nif the bean is not fully initialized yet, for example because it is involved\nin a circular reference. "},
{"api_id": 701, "api_type": 4, "full_declaration": "NoSuchBeanDefinitionException", "qualified_name": "org.springframework.beans.factory.NoSuchBeanDefinitionException", "short_description": " Exception thrown when a  BeanFactory  is asked for a bean instance for which it\ncannot find a definition. "},
{"api_id": 702, "api_type": 4, "full_declaration": "NoUniqueBeanDefinitionException", "qualified_name": "org.springframework.beans.factory.NoUniqueBeanDefinitionException", "short_description": " Exception thrown when a  BeanFactory  is asked for a bean instance for which\nmultiple matching candidates have been found when only one matching bean was expected. "},
{"api_id": 703, "api_type": 4, "full_declaration": "UnsatisfiedDependencyException", "qualified_name": "org.springframework.beans.factory.UnsatisfiedDependencyException", "short_description": " Exception thrown when a bean depends on other beans or simple properties\nthat were not specified in the bean factory definition, although\ndependency checking was enabled. "},
{"api_id": 704, "api_type": 3, "full_declaration": "AnnotatedBeanDefinition", "qualified_name": "org.springframework.beans.factory.annotation.AnnotatedBeanDefinition", "short_description": " Extended  BeanDefinition interface that exposes  AnnotationMetadata about its bean class - without requiring the class to be loaded yet. "},
{"api_id": 705, "api_type": 2, "full_declaration": "AnnotatedGenericBeanDefinition", "qualified_name": "org.springframework.beans.factory.annotation.AnnotatedGenericBeanDefinition", "short_description": " Extension of the  GenericBeanDefinition class, adding support for annotation metadata exposed through the AnnotatedBeanDefinition  interface. "},
{"api_id": 706, "api_type": 2, "full_declaration": "AnnotationBeanWiringInfoResolver", "qualified_name": "org.springframework.beans.factory.annotation.AnnotationBeanWiringInfoResolver", "short_description": " BeanWiringInfoResolver  that\nuses the Configurable annotation to identify which classes need autowiring. "},
{"api_id": 707, "api_type": 2, "full_declaration": "AutowiredAnnotationBeanPostProcessor", "qualified_name": "org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor", "short_description": " BeanPostProcessor implementation that autowires annotated fields, setter methods, and arbitrary\nconfig methods. "},
{"api_id": 708, "api_type": 2, "full_declaration": "BeanFactoryAnnotationUtils", "qualified_name": "org.springframework.beans.factory.annotation.BeanFactoryAnnotationUtils", "short_description": " Convenience methods performing bean lookups related to Spring-specific annotations,\nfor example Spring's  @Qualifier  annotation. "},
{"api_id": 709, "api_type": 2, "full_declaration": "CustomAutowireConfigurer", "qualified_name": "org.springframework.beans.factory.annotation.CustomAutowireConfigurer", "short_description": " A  BeanFactoryPostProcessor implementation that allows for convenient registration of custom autowire\nqualifier types. "},
{"api_id": 710, "api_type": 2, "full_declaration": "InitDestroyAnnotationBeanPostProcessor", "qualified_name": "org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor", "short_description": " BeanPostProcessor  implementation\nthat invokes annotated init and destroy methods. "},
{"api_id": 711, "api_type": 2, "full_declaration": "InjectionMetadata", "qualified_name": "org.springframework.beans.factory.annotation.InjectionMetadata", "short_description": " Internal class for managing injection metadata. "},
{"api_id": 712, "api_type": 2, "full_declaration": "InjectionMetadata.InjectedElement", "qualified_name": "org.springframework.beans.factory.annotation.InjectionMetadata.InjectedElement", "short_description": " A single injected element. "},
{"api_id": 713, "api_type": 2, "full_declaration": "ParameterResolutionDelegate", "qualified_name": "org.springframework.beans.factory.annotation.ParameterResolutionDelegate", "short_description": " Public delegate for resolving autowirable parameters on externally managed\nconstructors and methods. "},
{"api_id": 714, "api_type": 2, "full_declaration": "QualifierAnnotationAutowireCandidateResolver", "qualified_name": "org.springframework.beans.factory.annotation.QualifierAnnotationAutowireCandidateResolver", "short_description": " AutowireCandidateResolver  implementation that matches bean definition qualifiers\nagainst  qualifier annotations  on the field or parameter to be autowired. "},
{"api_id": 715, "api_type": 2, "full_declaration": "RequiredAnnotationBeanPostProcessor", "qualified_name": "org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor", "short_description": "Deprecated as of 5.1, in favor of using constructor injection for required settings\n(or a custom  InitializingBean  implementation) "},
{"api_id": 716, "api_type": 8, "full_declaration": "Autowire", "qualified_name": "org.springframework.beans.factory.annotation.Autowire", "short_description": " Enumeration determining autowiring status: that is, whether a bean should\nhave its dependencies automatically injected by the Spring container using\nsetter injection. "},
{"api_id": 717, "api_type": 9, "full_declaration": "Autowired", "qualified_name": "org.springframework.beans.factory.annotation.Autowired", "short_description": " Marks a constructor, field, setter method, or config method as to be autowired by\nSpring's dependency injection facilities. "},
{"api_id": 718, "api_type": 9, "full_declaration": "Configurable", "qualified_name": "org.springframework.beans.factory.annotation.Configurable", "short_description": " Marks a class as being eligible for Spring-driven configuration. "},
{"api_id": 719, "api_type": 9, "full_declaration": "Lookup", "qualified_name": "org.springframework.beans.factory.annotation.Lookup", "short_description": " An annotation that indicates 'lookup' methods, to be overridden by the container\nto redirect them back to the  BeanFactory for a  getBean  call. "},
{"api_id": 720, "api_type": 9, "full_declaration": "Qualifier", "qualified_name": "org.springframework.beans.factory.annotation.Qualifier", "short_description": " This annotation may be used on a field or parameter as a qualifier for\ncandidate beans when autowiring. "},
{"api_id": 721, "api_type": 9, "full_declaration": "Required", "qualified_name": "org.springframework.beans.factory.annotation.Required", "short_description": "Deprecated as of 5.1, in favor of using constructor injection for required settings\n(or a custom  InitializingBean  implementation) "},
{"api_id": 722, "api_type": 9, "full_declaration": "Value", "qualified_name": "org.springframework.beans.factory.annotation.Value", "short_description": " Annotation used at the field or method/constructor parameter level\nthat indicates a default value expression for the annotated element. "},
{"api_id": 723, "api_type": 3, "full_declaration": "ConfigurableObject", "qualified_name": "org.springframework.beans.factory.aspectj.ConfigurableObject", "short_description": " Marker interface for domain object that need DI through aspects. "},
{"api_id": 724, "api_type": 3, "full_declaration": "AutowireCapableBeanFactory", "qualified_name": "org.springframework.beans.factory.config.AutowireCapableBeanFactory", "short_description": " Extension of the  BeanFactory interface to be implemented by bean factories that are capable of\nautowiring, provided that they want to expose this functionality for\nexisting bean instances. "},
{"api_id": 725, "api_type": 3, "full_declaration": "BeanDefinition", "qualified_name": "org.springframework.beans.factory.config.BeanDefinition", "short_description": " A BeanDefinition describes a bean instance, which has property values,\nconstructor argument values, and further information supplied by\nconcrete implementations. "},
{"api_id": 726, "api_type": 3, "full_declaration": "BeanDefinitionCustomizer", "qualified_name": "org.springframework.beans.factory.config.BeanDefinitionCustomizer", "short_description": " Callback for customizing a given bean definition. "},
{"api_id": 727, "api_type": 3, "full_declaration": "BeanExpressionResolver", "qualified_name": "org.springframework.beans.factory.config.BeanExpressionResolver", "short_description": " Strategy interface for resolving a value through evaluating it\nas an expression, if applicable. "},
{"api_id": 728, "api_type": 3, "full_declaration": "BeanFactoryPostProcessor", "qualified_name": "org.springframework.beans.factory.config.BeanFactoryPostProcessor", "short_description": " Factory hook that allows for custom modification of an application context's\nbean definitions, adapting the bean property values of the context's underlying\nbean factory. "},
{"api_id": 729, "api_type": 3, "full_declaration": "BeanPostProcessor", "qualified_name": "org.springframework.beans.factory.config.BeanPostProcessor", "short_description": " Factory hook that allows for custom modification of new bean instances \u2014\nfor example, checking for marker interfaces or wrapping beans with proxies. "},
{"api_id": 730, "api_type": 3, "full_declaration": "BeanReference", "qualified_name": "org.springframework.beans.factory.config.BeanReference", "short_description": " Interface that exposes a reference to a bean name in an abstract fashion. "},
{"api_id": 731, "api_type": 3, "full_declaration": "ConfigurableBeanFactory", "qualified_name": "org.springframework.beans.factory.config.ConfigurableBeanFactory", "short_description": " Configuration interface to be implemented by most bean factories. "},
{"api_id": 732, "api_type": 3, "full_declaration": "ConfigurableListableBeanFactory", "qualified_name": "org.springframework.beans.factory.config.ConfigurableListableBeanFactory", "short_description": " Configuration interface to be implemented by most listable bean factories. "},
{"api_id": 733, "api_type": 3, "full_declaration": "DestructionAwareBeanPostProcessor", "qualified_name": "org.springframework.beans.factory.config.DestructionAwareBeanPostProcessor", "short_description": " Subinterface of  BeanPostProcessor  that adds a before-destruction callback. "},
{"api_id": 734, "api_type": 3, "full_declaration": "InstantiationAwareBeanPostProcessor", "qualified_name": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor", "short_description": " Subinterface of  BeanPostProcessor  that adds a before-instantiation callback,\nand a callback after instantiation but before explicit properties are set or\nautowiring occurs. "},
{"api_id": 735, "api_type": 3, "full_declaration": "Scope", "qualified_name": "org.springframework.beans.factory.config.Scope", "short_description": " Strategy interface used by a  ConfigurableBeanFactory ,\nrepresenting a target scope to hold bean instances in. "},
{"api_id": 736, "api_type": 3, "full_declaration": "SingletonBeanRegistry", "qualified_name": "org.springframework.beans.factory.config.SingletonBeanRegistry", "short_description": " Interface that defines a registry for shared bean instances. "},
{"api_id": 737, "api_type": 3, "full_declaration": "SmartInstantiationAwareBeanPostProcessor", "qualified_name": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor", "short_description": " Extension of the  InstantiationAwareBeanPostProcessor  interface,\nadding a callback for predicting the eventual type of a processed bean. "},
{"api_id": 738, "api_type": 3, "full_declaration": "YamlProcessor.DocumentMatcher", "qualified_name": "org.springframework.beans.factory.config.YamlProcessor.DocumentMatcher", "short_description": " Strategy interface used to test if properties match. "},
{"api_id": 739, "api_type": 3, "full_declaration": "YamlProcessor.MatchCallback", "qualified_name": "org.springframework.beans.factory.config.YamlProcessor.MatchCallback", "short_description": " Callback interface used to process the YAML parsing results. "},
{"api_id": 740, "api_type": 2, "full_declaration": "AbstractFactoryBean", "qualified_name": "org.springframework.beans.factory.config.AbstractFactoryBean", "short_description": " Simple template superclass for  FactoryBean  implementations that\ncreates a singleton or a prototype object, depending on a flag. "},
{"api_id": 741, "api_type": 2, "full_declaration": "AutowiredPropertyMarker", "qualified_name": "org.springframework.beans.factory.config.AutowiredPropertyMarker", "short_description": " Simple marker class for an individually autowired property value, to be added\nto  BeanDefinition.getPropertyValues()  for a specific bean property. "},
{"api_id": 742, "api_type": 2, "full_declaration": "BeanDefinitionHolder", "qualified_name": "org.springframework.beans.factory.config.BeanDefinitionHolder", "short_description": " Holder for a BeanDefinition with name and aliases. "},
{"api_id": 743, "api_type": 2, "full_declaration": "BeanDefinitionVisitor", "qualified_name": "org.springframework.beans.factory.config.BeanDefinitionVisitor", "short_description": " Visitor class for traversing  BeanDefinition  objects, in particular\nthe property values and constructor argument values contained in them,\nresolving bean metadata values. "},
{"api_id": 744, "api_type": 2, "full_declaration": "BeanExpressionContext", "qualified_name": "org.springframework.beans.factory.config.BeanExpressionContext", "short_description": " Context object for evaluating an expression within a bean definition. "},
{"api_id": 745, "api_type": 2, "full_declaration": "ConstructorArgumentValues", "qualified_name": "org.springframework.beans.factory.config.ConstructorArgumentValues", "short_description": " Holder for constructor argument values, typically as part of a bean definition. "},
{"api_id": 746, "api_type": 2, "full_declaration": "ConstructorArgumentValues.ValueHolder", "qualified_name": "org.springframework.beans.factory.config.ConstructorArgumentValues.ValueHolder", "short_description": " Holder for a constructor argument value, with an optional type\nattribute indicating the target type of the actual constructor argument. "},
{"api_id": 747, "api_type": 2, "full_declaration": "CustomEditorConfigurer", "qualified_name": "org.springframework.beans.factory.config.CustomEditorConfigurer", "short_description": " BeanFactoryPostProcessor  implementation that allows for convenient\nregistration of custom  property editors . "},
{"api_id": 748, "api_type": 2, "full_declaration": "CustomScopeConfigurer", "qualified_name": "org.springframework.beans.factory.config.CustomScopeConfigurer", "short_description": " Simple  BeanFactoryPostProcessor  implementation that registers\ncustom  Scope(s)  with the containing  ConfigurableBeanFactory . "},
{"api_id": 749, "api_type": 2, "full_declaration": "DependencyDescriptor", "qualified_name": "org.springframework.beans.factory.config.DependencyDescriptor", "short_description": " Descriptor for a specific dependency that is about to be injected. "},
{"api_id": 750, "api_type": 2, "full_declaration": "DeprecatedBeanWarner", "qualified_name": "org.springframework.beans.factory.config.DeprecatedBeanWarner", "short_description": " Bean factory post processor that logs a warning for  @Deprecated  beans. "},
{"api_id": 751, "api_type": 2, "full_declaration": "EmbeddedValueResolver", "qualified_name": "org.springframework.beans.factory.config.EmbeddedValueResolver", "short_description": " StringValueResolver  adapter for resolving placeholders and\nexpressions against a  ConfigurableBeanFactory . "},
{"api_id": 752, "api_type": 2, "full_declaration": "FieldRetrievingFactoryBean", "qualified_name": "org.springframework.beans.factory.config.FieldRetrievingFactoryBean", "short_description": " FactoryBean  which retrieves a static or non-static field value. "},
{"api_id": 753, "api_type": 2, "full_declaration": "InstantiationAwareBeanPostProcessorAdapter", "qualified_name": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessorAdapter", "short_description": "Deprecated as of 5.3 in favor of implementing  InstantiationAwareBeanPostProcessor or  SmartInstantiationAwareBeanPostProcessor  directly. "},
{"api_id": 754, "api_type": 2, "full_declaration": "ListFactoryBean", "qualified_name": "org.springframework.beans.factory.config.ListFactoryBean", "short_description": " Simple factory for shared List instances. "},
{"api_id": 755, "api_type": 2, "full_declaration": "MapFactoryBean", "qualified_name": "org.springframework.beans.factory.config.MapFactoryBean", "short_description": " Simple factory for shared Map instances. "},
{"api_id": 756, "api_type": 2, "full_declaration": "MethodInvokingBean", "qualified_name": "org.springframework.beans.factory.config.MethodInvokingBean", "short_description": " Simple method invoker bean: just invoking a target method, not expecting a result\nto expose to the container (in contrast to  MethodInvokingFactoryBean ). "},
{"api_id": 757, "api_type": 2, "full_declaration": "MethodInvokingFactoryBean", "qualified_name": "org.springframework.beans.factory.config.MethodInvokingFactoryBean", "short_description": " FactoryBean  which returns a value which is the result of a static or instance\nmethod invocation. "},
{"api_id": 758, "api_type": 2, "full_declaration": "NamedBeanHolder", "qualified_name": "org.springframework.beans.factory.config.NamedBeanHolder", "short_description": " A simple holder for a given bean name plus bean instance. "},
{"api_id": 759, "api_type": 2, "full_declaration": "ObjectFactoryCreatingFactoryBean", "qualified_name": "org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean", "short_description": " A  FactoryBean  implementation that\nreturns a value which is an  ObjectFactory that in turn returns a bean sourced from a  BeanFactory . "},
{"api_id": 760, "api_type": 2, "full_declaration": "PlaceholderConfigurerSupport", "qualified_name": "org.springframework.beans.factory.config.PlaceholderConfigurerSupport", "short_description": " Abstract base class for property resource configurers that resolve placeholders\nin bean definition property values. "},
{"api_id": 761, "api_type": 2, "full_declaration": "PreferencesPlaceholderConfigurer", "qualified_name": "org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer", "short_description": "Deprecated as of 5.2, along with  PropertyPlaceholderConfigurer "},
{"api_id": 762, "api_type": 2, "full_declaration": "PropertiesFactoryBean", "qualified_name": "org.springframework.beans.factory.config.PropertiesFactoryBean", "short_description": " Allows for making a properties file from a classpath location available\nas Properties instance in a bean factory. "},
{"api_id": 763, "api_type": 2, "full_declaration": "PropertyOverrideConfigurer", "qualified_name": "org.springframework.beans.factory.config.PropertyOverrideConfigurer", "short_description": " Property resource configurer that overrides bean property values in an application\ncontext definition. "},
{"api_id": 764, "api_type": 2, "full_declaration": "PropertyPathFactoryBean", "qualified_name": "org.springframework.beans.factory.config.PropertyPathFactoryBean", "short_description": " FactoryBean  that evaluates a property path on a given target object. "},
{"api_id": 765, "api_type": 2, "full_declaration": "PropertyPlaceholderConfigurer", "qualified_name": "org.springframework.beans.factory.config.PropertyPlaceholderConfigurer", "short_description": "Deprecated as of 5.2; use  org.springframework.context.support.PropertySourcesPlaceholderConfigurer instead which is more flexible through taking advantage of the  Environment and  PropertySource  mechanisms. "},
{"api_id": 766, "api_type": 2, "full_declaration": "PropertyResourceConfigurer", "qualified_name": "org.springframework.beans.factory.config.PropertyResourceConfigurer", "short_description": " Allows for configuration of individual bean property values from a property resource,\ni.e. "},
{"api_id": 767, "api_type": 2, "full_declaration": "ProviderCreatingFactoryBean", "qualified_name": "org.springframework.beans.factory.config.ProviderCreatingFactoryBean", "short_description": " A  FactoryBean  implementation that\nreturns a value which is a JSR-330  Provider  that in turn\nreturns a bean sourced from a  BeanFactory . "},
{"api_id": 768, "api_type": 2, "full_declaration": "RuntimeBeanNameReference", "qualified_name": "org.springframework.beans.factory.config.RuntimeBeanNameReference", "short_description": " Immutable placeholder class used for a property value object when it's a\nreference to another bean name in the factory, to be resolved at runtime. "},
{"api_id": 769, "api_type": 2, "full_declaration": "RuntimeBeanReference", "qualified_name": "org.springframework.beans.factory.config.RuntimeBeanReference", "short_description": " Immutable placeholder class used for a property value object when it's\na reference to another bean in the factory, to be resolved at runtime. "},
{"api_id": 770, "api_type": 2, "full_declaration": "ServiceLocatorFactoryBean", "qualified_name": "org.springframework.beans.factory.config.ServiceLocatorFactoryBean", "short_description": " A  FactoryBean  implementation that takes an interface which must have one or more\nmethods with the signatures  MyType xxx()  or  MyType xxx(MyIdType id) (typically,  MyService getService()  or  MyService getService(String id) )\nand creates a dynamic proxy which implements that interface, delegating to an\nunderlying  BeanFactory . "},
{"api_id": 771, "api_type": 2, "full_declaration": "SetFactoryBean", "qualified_name": "org.springframework.beans.factory.config.SetFactoryBean", "short_description": " Simple factory for shared Set instances. "},
{"api_id": 772, "api_type": 2, "full_declaration": "TypedStringValue", "qualified_name": "org.springframework.beans.factory.config.TypedStringValue", "short_description": " Holder for a typed String value. "},
{"api_id": 773, "api_type": 2, "full_declaration": "YamlMapFactoryBean", "qualified_name": "org.springframework.beans.factory.config.YamlMapFactoryBean", "short_description": " Factory for a  Map  that reads from a YAML source, preserving the\nYAML-declared value types and their structure. "},
{"api_id": 774, "api_type": 2, "full_declaration": "YamlProcessor", "qualified_name": "org.springframework.beans.factory.config.YamlProcessor", "short_description": " Base class for YAML factories. "},
{"api_id": 775, "api_type": 2, "full_declaration": "YamlPropertiesFactoryBean", "qualified_name": "org.springframework.beans.factory.config.YamlPropertiesFactoryBean", "short_description": " Factory for  Properties  that reads from a YAML source,\nexposing a flat structure of String property values. "},
{"api_id": 776, "api_type": 8, "full_declaration": "YamlProcessor.MatchStatus", "qualified_name": "org.springframework.beans.factory.config.YamlProcessor.MatchStatus", "short_description": " Status returned from  YamlProcessor.DocumentMatcher.matches(java.util.Properties) . "},
{"api_id": 777, "api_type": 8, "full_declaration": "YamlProcessor.ResolutionMethod", "qualified_name": "org.springframework.beans.factory.config.YamlProcessor.ResolutionMethod", "short_description": " Method to use for resolving resources. "},
{"api_id": 778, "api_type": 2, "full_declaration": "GroovyBeanDefinitionReader", "qualified_name": "org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader", "short_description": " A Groovy-based reader for Spring bean definitions: like a Groovy builder,\nbut more of a DSL for Spring configuration. "},
{"api_id": 779, "api_type": 3, "full_declaration": "ComponentDefinition", "qualified_name": "org.springframework.beans.factory.parsing.ComponentDefinition", "short_description": " Interface that describes the logical view of a set of  BeanDefinitions and  BeanReferences  as presented in some configuration context. "},
{"api_id": 780, "api_type": 3, "full_declaration": "DefaultsDefinition", "qualified_name": "org.springframework.beans.factory.parsing.DefaultsDefinition", "short_description": " Marker interface for a defaults definition,\nextending BeanMetadataElement to inherit source exposure. "},
{"api_id": 781, "api_type": 3, "full_declaration": "ParseState.Entry", "qualified_name": "org.springframework.beans.factory.parsing.ParseState.Entry", "short_description": " Marker interface for entries into the  ParseState . "},
{"api_id": 782, "api_type": 3, "full_declaration": "ProblemReporter", "qualified_name": "org.springframework.beans.factory.parsing.ProblemReporter", "short_description": " SPI interface allowing tools and other external processes to handle errors\nand warnings reported during bean definition parsing. "},
{"api_id": 783, "api_type": 3, "full_declaration": "ReaderEventListener", "qualified_name": "org.springframework.beans.factory.parsing.ReaderEventListener", "short_description": " Interface that receives callbacks for component, alias and import\nregistrations during a bean definition reading process. "},
{"api_id": 784, "api_type": 3, "full_declaration": "SourceExtractor", "qualified_name": "org.springframework.beans.factory.parsing.SourceExtractor", "short_description": " Simple strategy allowing tools to control how source metadata is attached\nto the bean definition metadata. "},
{"api_id": 785, "api_type": 2, "full_declaration": "AbstractComponentDefinition", "qualified_name": "org.springframework.beans.factory.parsing.AbstractComponentDefinition", "short_description": " Base implementation of  ComponentDefinition  that provides a basic implementation of AbstractComponentDefinition.getDescription()  which delegates to  ComponentDefinition.getName() . "},
{"api_id": 786, "api_type": 2, "full_declaration": "AliasDefinition", "qualified_name": "org.springframework.beans.factory.parsing.AliasDefinition", "short_description": " Representation of an alias that has been registered during the parsing process. "},
{"api_id": 787, "api_type": 2, "full_declaration": "BeanComponentDefinition", "qualified_name": "org.springframework.beans.factory.parsing.BeanComponentDefinition", "short_description": " ComponentDefinition based on a standard BeanDefinition, exposing the given bean\ndefinition as well as inner bean definitions and bean references for the given bean. "},
{"api_id": 788, "api_type": 2, "full_declaration": "BeanEntry", "qualified_name": "org.springframework.beans.factory.parsing.BeanEntry", "short_description": " ParseState  entry representing a bean definition. "},
{"api_id": 789, "api_type": 2, "full_declaration": "CompositeComponentDefinition", "qualified_name": "org.springframework.beans.factory.parsing.CompositeComponentDefinition", "short_description": " ComponentDefinition  implementation that holds one or more nested ComponentDefinition  instances, aggregating them into a named group\nof components. "},
{"api_id": 790, "api_type": 2, "full_declaration": "ConstructorArgumentEntry", "qualified_name": "org.springframework.beans.factory.parsing.ConstructorArgumentEntry", "short_description": " ParseState  entry representing a (possibly indexed)\nconstructor argument. "},
{"api_id": 791, "api_type": 2, "full_declaration": "EmptyReaderEventListener", "qualified_name": "org.springframework.beans.factory.parsing.EmptyReaderEventListener", "short_description": " Empty implementation of the  ReaderEventListener  interface,\nproviding no-op implementations of all callback methods. "},
{"api_id": 792, "api_type": 2, "full_declaration": "FailFastProblemReporter", "qualified_name": "org.springframework.beans.factory.parsing.FailFastProblemReporter", "short_description": " Simple  ProblemReporter  implementation that exhibits fail-fast\nbehavior when errors are encountered. "},
{"api_id": 793, "api_type": 2, "full_declaration": "ImportDefinition", "qualified_name": "org.springframework.beans.factory.parsing.ImportDefinition", "short_description": " Representation of an import that has been processed during the parsing process. "},
{"api_id": 794, "api_type": 2, "full_declaration": "Location", "qualified_name": "org.springframework.beans.factory.parsing.Location", "short_description": " Class that models an arbitrary location in a  resource . "},
{"api_id": 795, "api_type": 2, "full_declaration": "NullSourceExtractor", "qualified_name": "org.springframework.beans.factory.parsing.NullSourceExtractor", "short_description": " Simple implementation of  SourceExtractor  that returns  null as the source metadata. "},
{"api_id": 796, "api_type": 2, "full_declaration": "ParseState", "qualified_name": "org.springframework.beans.factory.parsing.ParseState", "short_description": " Simple  ArrayDeque -based structure for tracking the logical position during\na parsing process. "},
{"api_id": 797, "api_type": 2, "full_declaration": "PassThroughSourceExtractor", "qualified_name": "org.springframework.beans.factory.parsing.PassThroughSourceExtractor", "short_description": " Simple  SourceExtractor  implementation that just passes\nthe candidate source metadata object through for attachment. "},
{"api_id": 798, "api_type": 2, "full_declaration": "Problem", "qualified_name": "org.springframework.beans.factory.parsing.Problem", "short_description": " Represents a problem with a bean definition configuration. "},
{"api_id": 799, "api_type": 2, "full_declaration": "PropertyEntry", "qualified_name": "org.springframework.beans.factory.parsing.PropertyEntry", "short_description": " ParseState  entry representing a JavaBean property. "},
{"api_id": 800, "api_type": 2, "full_declaration": "QualifierEntry", "qualified_name": "org.springframework.beans.factory.parsing.QualifierEntry", "short_description": " ParseState  entry representing an autowire candidate qualifier. "},
{"api_id": 801, "api_type": 2, "full_declaration": "ReaderContext", "qualified_name": "org.springframework.beans.factory.parsing.ReaderContext", "short_description": " Context that gets passed along a bean definition reading process,\nencapsulating all relevant configuration as well as state. "},
{"api_id": 802, "api_type": 4, "full_declaration": "BeanDefinitionParsingException", "qualified_name": "org.springframework.beans.factory.parsing.BeanDefinitionParsingException", "short_description": " Exception thrown when a bean definition reader encounters an error\nduring the parsing process. "},
{"api_id": 803, "api_type": 2, "full_declaration": "AbstractServiceLoaderBasedFactoryBean", "qualified_name": "org.springframework.beans.factory.serviceloader.AbstractServiceLoaderBasedFactoryBean", "short_description": " Abstract base class for FactoryBeans operating on the\nJDK 1.6  ServiceLoader  facility. "},
{"api_id": 804, "api_type": 2, "full_declaration": "ServiceFactoryBean", "qualified_name": "org.springframework.beans.factory.serviceloader.ServiceFactoryBean", "short_description": " FactoryBean  that exposes the\n'primary' service for the configured service class, obtained through\nthe JDK 1.6  ServiceLoader  facility. "},
{"api_id": 805, "api_type": 2, "full_declaration": "ServiceListFactoryBean", "qualified_name": "org.springframework.beans.factory.serviceloader.ServiceListFactoryBean", "short_description": " FactoryBean  that exposes  all services for the configured service class, represented as a List of service objects,\nobtained through the JDK 1.6  ServiceLoader  facility. "},
{"api_id": 806, "api_type": 2, "full_declaration": "ServiceLoaderFactoryBean", "qualified_name": "org.springframework.beans.factory.serviceloader.ServiceLoaderFactoryBean", "short_description": " FactoryBean  that exposes the\nJDK 1.6  ServiceLoader  for the configured service class. "},
{"api_id": 807, "api_type": 3, "full_declaration": "AutowireCandidateResolver", "qualified_name": "org.springframework.beans.factory.support.AutowireCandidateResolver", "short_description": " Strategy interface for determining whether a specific bean definition\nqualifies as an autowire candidate for a specific dependency. "},
{"api_id": 808, "api_type": 3, "full_declaration": "BeanDefinitionReader", "qualified_name": "org.springframework.beans.factory.support.BeanDefinitionReader", "short_description": " Simple interface for bean definition readers. "},
{"api_id": 809, "api_type": 3, "full_declaration": "BeanDefinitionRegistry", "qualified_name": "org.springframework.beans.factory.support.BeanDefinitionRegistry", "short_description": " Interface for registries that hold bean definitions, for example RootBeanDefinition\nand ChildBeanDefinition instances. "},
{"api_id": 810, "api_type": 3, "full_declaration": "BeanDefinitionRegistryPostProcessor", "qualified_name": "org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor", "short_description": " Extension to the standard  BeanFactoryPostProcessor  SPI, allowing for\nthe registration of further bean definitions  before  regular\nBeanFactoryPostProcessor detection kicks in. "},
{"api_id": 811, "api_type": 3, "full_declaration": "BeanNameGenerator", "qualified_name": "org.springframework.beans.factory.support.BeanNameGenerator", "short_description": " Strategy interface for generating bean names for bean definitions. "},
{"api_id": 812, "api_type": 3, "full_declaration": "InstantiationStrategy", "qualified_name": "org.springframework.beans.factory.support.InstantiationStrategy", "short_description": " Interface responsible for creating instances corresponding to a root bean definition. "},
{"api_id": 813, "api_type": 3, "full_declaration": "MergedBeanDefinitionPostProcessor", "qualified_name": "org.springframework.beans.factory.support.MergedBeanDefinitionPostProcessor", "short_description": " Post-processor callback interface for  merged  bean definitions at runtime. "},
{"api_id": 814, "api_type": 3, "full_declaration": "MethodReplacer", "qualified_name": "org.springframework.beans.factory.support.MethodReplacer", "short_description": " Interface to be implemented by classes that can reimplement any method\non an IoC-managed object: the  Method Injection  form of\nDependency Injection. "},
{"api_id": 815, "api_type": 3, "full_declaration": "SecurityContextProvider", "qualified_name": "org.springframework.beans.factory.support.SecurityContextProvider", "short_description": " Provider of the security context of the code running inside the bean factory. "},
{"api_id": 816, "api_type": 2, "full_declaration": "AbstractAutowireCapableBeanFactory", "qualified_name": "org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory", "short_description": " Abstract bean factory superclass that implements default bean creation,\nwith the full capabilities specified by the  RootBeanDefinition  class. "},
{"api_id": 817, "api_type": 2, "full_declaration": "AbstractBeanDefinition", "qualified_name": "org.springframework.beans.factory.support.AbstractBeanDefinition", "short_description": " Base class for concrete, full-fledged  BeanDefinition  classes,\nfactoring out common properties of  GenericBeanDefinition , RootBeanDefinition , and  ChildBeanDefinition . "},
{"api_id": 818, "api_type": 2, "full_declaration": "AbstractBeanDefinitionReader", "qualified_name": "org.springframework.beans.factory.support.AbstractBeanDefinitionReader", "short_description": " Abstract base class for bean definition readers which implement\nthe  BeanDefinitionReader  interface. "},
{"api_id": 819, "api_type": 2, "full_declaration": "AbstractBeanFactory", "qualified_name": "org.springframework.beans.factory.support.AbstractBeanFactory", "short_description": " Abstract base class for  BeanFactory implementations, providing the full capabilities of the ConfigurableBeanFactory  SPI. "},
{"api_id": 820, "api_type": 2, "full_declaration": "AutowireCandidateQualifier", "qualified_name": "org.springframework.beans.factory.support.AutowireCandidateQualifier", "short_description": " Qualifier for resolving autowire candidates. "},
{"api_id": 821, "api_type": 2, "full_declaration": "BeanDefinitionBuilder", "qualified_name": "org.springframework.beans.factory.support.BeanDefinitionBuilder", "short_description": " Programmatic means of constructing BeanDefinitions using the builder pattern. "},
{"api_id": 822, "api_type": 2, "full_declaration": "BeanDefinitionDefaults", "qualified_name": "org.springframework.beans.factory.support.BeanDefinitionDefaults", "short_description": " A simple holder for  BeanDefinition  property defaults. "},
{"api_id": 823, "api_type": 2, "full_declaration": "BeanDefinitionReaderUtils", "qualified_name": "org.springframework.beans.factory.support.BeanDefinitionReaderUtils", "short_description": " Utility methods that are useful for bean definition reader implementations. "},
{"api_id": 824, "api_type": 2, "full_declaration": "CglibSubclassingInstantiationStrategy", "qualified_name": "org.springframework.beans.factory.support.CglibSubclassingInstantiationStrategy", "short_description": " Default object instantiation strategy for use in BeanFactories. "},
{"api_id": 825, "api_type": 2, "full_declaration": "ChildBeanDefinition", "qualified_name": "org.springframework.beans.factory.support.ChildBeanDefinition", "short_description": " Bean definition for beans which inherit settings from their parent. "},
{"api_id": 826, "api_type": 2, "full_declaration": "DefaultBeanNameGenerator", "qualified_name": "org.springframework.beans.factory.support.DefaultBeanNameGenerator", "short_description": " Default implementation of the  BeanNameGenerator  interface, delegating to BeanDefinitionReaderUtils.generateBeanName(BeanDefinition, BeanDefinitionRegistry) . "},
{"api_id": 827, "api_type": 2, "full_declaration": "DefaultListableBeanFactory", "qualified_name": "org.springframework.beans.factory.support.DefaultListableBeanFactory", "short_description": " Spring's default implementation of the  ConfigurableListableBeanFactory and  BeanDefinitionRegistry  interfaces: a full-fledged bean factory\nbased on bean definition metadata, extensible through post-processors. "},
{"api_id": 828, "api_type": 2, "full_declaration": "DefaultSingletonBeanRegistry", "qualified_name": "org.springframework.beans.factory.support.DefaultSingletonBeanRegistry", "short_description": " Generic registry for shared bean instances, implementing the SingletonBeanRegistry . "},
{"api_id": 829, "api_type": 2, "full_declaration": "FactoryBeanRegistrySupport", "qualified_name": "org.springframework.beans.factory.support.FactoryBeanRegistrySupport", "short_description": " Support base class for singleton registries which need to handle FactoryBean  instances,\nintegrated with  DefaultSingletonBeanRegistry 's singleton management. "},
{"api_id": 830, "api_type": 2, "full_declaration": "GenericBeanDefinition", "qualified_name": "org.springframework.beans.factory.support.GenericBeanDefinition", "short_description": " GenericBeanDefinition is a one-stop shop for standard bean definition purposes. "},
{"api_id": 831, "api_type": 2, "full_declaration": "GenericTypeAwareAutowireCandidateResolver", "qualified_name": "org.springframework.beans.factory.support.GenericTypeAwareAutowireCandidateResolver", "short_description": " Basic  AutowireCandidateResolver  that performs a full generic type\nmatch with the candidate's type if the dependency is declared as a generic type\n(e.g. "},
{"api_id": 832, "api_type": 2, "full_declaration": "LookupOverride", "qualified_name": "org.springframework.beans.factory.support.LookupOverride", "short_description": " Represents an override of a method that looks up an object in the same IoC context. "},
{"api_id": 833, "api_type": 2, "full_declaration": "ManagedArray", "qualified_name": "org.springframework.beans.factory.support.ManagedArray", "short_description": " Tag collection class used to hold managed array elements, which may\ninclude runtime bean references (to be resolved into bean objects). "},
{"api_id": 834, "api_type": 2, "full_declaration": "ManagedList", "qualified_name": "org.springframework.beans.factory.support.ManagedList", "short_description": " Tag collection class used to hold managed List elements, which may\ninclude runtime bean references (to be resolved into bean objects). "},
{"api_id": 835, "api_type": 2, "full_declaration": "ManagedMap", "qualified_name": "org.springframework.beans.factory.support.ManagedMap", "short_description": " Tag collection class used to hold managed Map values, which may\ninclude runtime bean references (to be resolved into bean objects). "},
{"api_id": 836, "api_type": 2, "full_declaration": "ManagedProperties", "qualified_name": "org.springframework.beans.factory.support.ManagedProperties", "short_description": " Tag class which represents a Spring-managed  Properties  instance\nthat supports merging of parent/child definitions. "},
{"api_id": 837, "api_type": 2, "full_declaration": "ManagedSet", "qualified_name": "org.springframework.beans.factory.support.ManagedSet", "short_description": " Tag collection class used to hold managed Set values, which may\ninclude runtime bean references (to be resolved into bean objects). "},
{"api_id": 838, "api_type": 2, "full_declaration": "MethodOverride", "qualified_name": "org.springframework.beans.factory.support.MethodOverride", "short_description": " Object representing the override of a method on a managed object by the IoC\ncontainer. "},
{"api_id": 839, "api_type": 2, "full_declaration": "MethodOverrides", "qualified_name": "org.springframework.beans.factory.support.MethodOverrides", "short_description": " Set of method overrides, determining which, if any, methods on a\nmanaged object the Spring IoC container will override at runtime. "},
{"api_id": 840, "api_type": 2, "full_declaration": "PropertiesBeanDefinitionReader", "qualified_name": "org.springframework.beans.factory.support.PropertiesBeanDefinitionReader", "short_description": "Deprecated as of 5.3, in favor of Spring's common bean definition formats\nand/or custom reader implementations "},
{"api_id": 841, "api_type": 2, "full_declaration": "ReplaceOverride", "qualified_name": "org.springframework.beans.factory.support.ReplaceOverride", "short_description": " Extension of MethodOverride that represents an arbitrary\noverride of a method by the IoC container. "},
{"api_id": 842, "api_type": 2, "full_declaration": "RootBeanDefinition", "qualified_name": "org.springframework.beans.factory.support.RootBeanDefinition", "short_description": " A root bean definition represents the merged bean definition that backs\na specific bean in a Spring BeanFactory at runtime. "},
{"api_id": 843, "api_type": 2, "full_declaration": "SimpleAutowireCandidateResolver", "qualified_name": "org.springframework.beans.factory.support.SimpleAutowireCandidateResolver", "short_description": " AutowireCandidateResolver  implementation to use when no annotation\nsupport is available. "},
{"api_id": 844, "api_type": 2, "full_declaration": "SimpleBeanDefinitionRegistry", "qualified_name": "org.springframework.beans.factory.support.SimpleBeanDefinitionRegistry", "short_description": " Simple implementation of the  BeanDefinitionRegistry  interface. "},
{"api_id": 845, "api_type": 2, "full_declaration": "SimpleInstantiationStrategy", "qualified_name": "org.springframework.beans.factory.support.SimpleInstantiationStrategy", "short_description": " Simple object instantiation strategy for use in a BeanFactory. "},
{"api_id": 846, "api_type": 2, "full_declaration": "SimpleSecurityContextProvider", "qualified_name": "org.springframework.beans.factory.support.SimpleSecurityContextProvider", "short_description": " Simple  SecurityContextProvider  implementation. "},
{"api_id": 847, "api_type": 2, "full_declaration": "StaticListableBeanFactory", "qualified_name": "org.springframework.beans.factory.support.StaticListableBeanFactory", "short_description": " Static  BeanFactory  implementation\nwhich allows one to register existing singleton instances programmatically. "},
{"api_id": 848, "api_type": 4, "full_declaration": "BeanDefinitionOverrideException", "qualified_name": "org.springframework.beans.factory.support.BeanDefinitionOverrideException", "short_description": " Subclass of  BeanDefinitionStoreException  indicating an invalid override\nattempt: typically registering a new definition for the same bean name while DefaultListableBeanFactory.isAllowBeanDefinitionOverriding()  is  false . "},
{"api_id": 849, "api_type": 4, "full_declaration": "BeanDefinitionValidationException", "qualified_name": "org.springframework.beans.factory.support.BeanDefinitionValidationException", "short_description": " Exception thrown when the validation of a bean definition failed. "},
{"api_id": 850, "api_type": 4, "full_declaration": "ScopeNotActiveException", "qualified_name": "org.springframework.beans.factory.support.ScopeNotActiveException", "short_description": " A subclass of  BeanCreationException  which indicates that the target scope\nis not active, e.g. "},
{"api_id": 851, "api_type": 3, "full_declaration": "BeanWiringInfoResolver", "qualified_name": "org.springframework.beans.factory.wiring.BeanWiringInfoResolver", "short_description": " Strategy interface to be implemented by objects than can resolve bean name\ninformation, given a newly instantiated bean object. "},
{"api_id": 852, "api_type": 2, "full_declaration": "BeanConfigurerSupport", "qualified_name": "org.springframework.beans.factory.wiring.BeanConfigurerSupport", "short_description": " Convenient base class for bean configurers that can perform Dependency Injection\non objects (however they may be created). "},
{"api_id": 853, "api_type": 2, "full_declaration": "BeanWiringInfo", "qualified_name": "org.springframework.beans.factory.wiring.BeanWiringInfo", "short_description": " Holder for bean wiring metadata information about a particular class. "},
{"api_id": 854, "api_type": 2, "full_declaration": "ClassNameBeanWiringInfoResolver", "qualified_name": "org.springframework.beans.factory.wiring.ClassNameBeanWiringInfoResolver", "short_description": " Simple default implementation of the  BeanWiringInfoResolver  interface,\nlooking for a bean with the same name as the fully-qualified class name. "},
{"api_id": 855, "api_type": 3, "full_declaration": "BeanDefinitionDecorator", "qualified_name": "org.springframework.beans.factory.xml.BeanDefinitionDecorator", "short_description": " Interface used by the  DefaultBeanDefinitionDocumentReader to handle custom, nested (directly under a  <bean> ) tags. "},
{"api_id": 856, "api_type": 3, "full_declaration": "BeanDefinitionDocumentReader", "qualified_name": "org.springframework.beans.factory.xml.BeanDefinitionDocumentReader", "short_description": " SPI for parsing an XML document that contains Spring bean definitions. "},
{"api_id": 857, "api_type": 3, "full_declaration": "BeanDefinitionParser", "qualified_name": "org.springframework.beans.factory.xml.BeanDefinitionParser", "short_description": " Interface used by the  DefaultBeanDefinitionDocumentReader  to handle custom,\ntop-level (directly under  <beans/> ) tags. "},
{"api_id": 858, "api_type": 3, "full_declaration": "DocumentLoader", "qualified_name": "org.springframework.beans.factory.xml.DocumentLoader", "short_description": " Strategy interface for loading an XML  Document . "},
{"api_id": 859, "api_type": 3, "full_declaration": "NamespaceHandler", "qualified_name": "org.springframework.beans.factory.xml.NamespaceHandler", "short_description": " Base interface used by the  DefaultBeanDefinitionDocumentReader for handling custom namespaces in a Spring XML configuration file. "},
{"api_id": 860, "api_type": 3, "full_declaration": "NamespaceHandlerResolver", "qualified_name": "org.springframework.beans.factory.xml.NamespaceHandlerResolver", "short_description": " Used by the  DefaultBeanDefinitionDocumentReader  to\nlocate a  NamespaceHandler  implementation for a particular namespace URI. "},
{"api_id": 861, "api_type": 2, "full_declaration": "AbstractBeanDefinitionParser", "qualified_name": "org.springframework.beans.factory.xml.AbstractBeanDefinitionParser", "short_description": " Abstract  BeanDefinitionParser  implementation providing\na number of convenience methods and a template method that subclasses must override to provide the actual parsing logic. "},
{"api_id": 862, "api_type": 2, "full_declaration": "AbstractSimpleBeanDefinitionParser", "qualified_name": "org.springframework.beans.factory.xml.AbstractSimpleBeanDefinitionParser", "short_description": " Convenient base class for when there exists a one-to-one mapping\nbetween attribute names on the element that is to be parsed and\nthe property names on the  Class  being configured. "},
{"api_id": 863, "api_type": 2, "full_declaration": "AbstractSingleBeanDefinitionParser", "qualified_name": "org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser", "short_description": " Base class for those  BeanDefinitionParser  implementations that\nneed to parse and define just a  single   BeanDefinition . "},
{"api_id": 864, "api_type": 2, "full_declaration": "BeanDefinitionParserDelegate", "qualified_name": "org.springframework.beans.factory.xml.BeanDefinitionParserDelegate", "short_description": " Stateful delegate class used to parse XML bean definitions. "},
{"api_id": 865, "api_type": 2, "full_declaration": "BeansDtdResolver", "qualified_name": "org.springframework.beans.factory.xml.BeansDtdResolver", "short_description": " EntityResolver  implementation for the Spring beans DTD,\nto load the DTD from the Spring class path (or JAR file). "},
{"api_id": 866, "api_type": 2, "full_declaration": "DefaultBeanDefinitionDocumentReader", "qualified_name": "org.springframework.beans.factory.xml.DefaultBeanDefinitionDocumentReader", "short_description": " Default implementation of the  BeanDefinitionDocumentReader  interface that\nreads bean definitions according to the \"spring-beans\" DTD and XSD format\n(Spring's default XML bean definition format). "},
{"api_id": 867, "api_type": 2, "full_declaration": "DefaultDocumentLoader", "qualified_name": "org.springframework.beans.factory.xml.DefaultDocumentLoader", "short_description": " Spring's default  DocumentLoader  implementation. "},
{"api_id": 868, "api_type": 2, "full_declaration": "DefaultNamespaceHandlerResolver", "qualified_name": "org.springframework.beans.factory.xml.DefaultNamespaceHandlerResolver", "short_description": " Default implementation of the  NamespaceHandlerResolver  interface. "},
{"api_id": 869, "api_type": 2, "full_declaration": "DelegatingEntityResolver", "qualified_name": "org.springframework.beans.factory.xml.DelegatingEntityResolver", "short_description": " EntityResolver  implementation that delegates to a  BeansDtdResolver and a  PluggableSchemaResolver  for DTDs and XML schemas, respectively. "},
{"api_id": 870, "api_type": 2, "full_declaration": "DocumentDefaultsDefinition", "qualified_name": "org.springframework.beans.factory.xml.DocumentDefaultsDefinition", "short_description": " Simple JavaBean that holds the defaults specified at the  <beans> level in a standard Spring XML bean definition document: default-lazy-init ,  default-autowire , etc. "},
{"api_id": 871, "api_type": 2, "full_declaration": "NamespaceHandlerSupport", "qualified_name": "org.springframework.beans.factory.xml.NamespaceHandlerSupport", "short_description": " Support class for implementing custom  NamespaceHandlers . "},
{"api_id": 872, "api_type": 2, "full_declaration": "ParserContext", "qualified_name": "org.springframework.beans.factory.xml.ParserContext", "short_description": " Context that gets passed along a bean definition parsing process,\nencapsulating all relevant configuration as well as state. "},
{"api_id": 873, "api_type": 2, "full_declaration": "PluggableSchemaResolver", "qualified_name": "org.springframework.beans.factory.xml.PluggableSchemaResolver", "short_description": " EntityResolver  implementation that attempts to resolve schema URLs into\nlocal  classpath resources  using a set of mappings files. "},
{"api_id": 874, "api_type": 2, "full_declaration": "ResourceEntityResolver", "qualified_name": "org.springframework.beans.factory.xml.ResourceEntityResolver", "short_description": " EntityResolver  implementation that tries to resolve entity references\nthrough a  ResourceLoader  (usually,\nrelative to the resource base of an  ApplicationContext ), if applicable. "},
{"api_id": 875, "api_type": 2, "full_declaration": "SimpleConstructorNamespaceHandler", "qualified_name": "org.springframework.beans.factory.xml.SimpleConstructorNamespaceHandler", "short_description": " Simple  NamespaceHandler  implementation that maps custom\nattributes directly through to bean properties. "},
{"api_id": 876, "api_type": 2, "full_declaration": "SimplePropertyNamespaceHandler", "qualified_name": "org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler", "short_description": " Simple  NamespaceHandler  implementation that maps custom attributes\ndirectly through to bean properties. "},
{"api_id": 877, "api_type": 2, "full_declaration": "UtilNamespaceHandler", "qualified_name": "org.springframework.beans.factory.xml.UtilNamespaceHandler", "short_description": " NamespaceHandler  for the  util  namespace. "},
{"api_id": 878, "api_type": 2, "full_declaration": "XmlBeanDefinitionReader", "qualified_name": "org.springframework.beans.factory.xml.XmlBeanDefinitionReader", "short_description": " Bean definition reader for XML bean definitions. "},
{"api_id": 879, "api_type": 2, "full_declaration": "XmlBeanFactory", "qualified_name": "org.springframework.beans.factory.xml.XmlBeanFactory", "short_description": "Deprecated as of Spring 3.1 in favor of  DefaultListableBeanFactory  and XmlBeanDefinitionReader "},
{"api_id": 880, "api_type": 2, "full_declaration": "XmlReaderContext", "qualified_name": "org.springframework.beans.factory.xml.XmlReaderContext", "short_description": " Extension of  ReaderContext ,\nspecific to use with an  XmlBeanDefinitionReader . "},
{"api_id": 881, "api_type": 4, "full_declaration": "XmlBeanDefinitionStoreException", "qualified_name": "org.springframework.beans.factory.xml.XmlBeanDefinitionStoreException", "short_description": " XML-specific BeanDefinitionStoreException subclass that wraps a SAXException , typically a  SAXParseException which contains information about the error location. "},
{"api_id": 882, "api_type": 2, "full_declaration": "ByteArrayPropertyEditor", "qualified_name": "org.springframework.beans.propertyeditors.ByteArrayPropertyEditor", "short_description": " Editor for byte arrays. "},
{"api_id": 883, "api_type": 2, "full_declaration": "CharacterEditor", "qualified_name": "org.springframework.beans.propertyeditors.CharacterEditor", "short_description": " Editor for a  Character , to populate a property\nof type  Character  or  char  from a String value. "},
{"api_id": 884, "api_type": 2, "full_declaration": "CharArrayPropertyEditor", "qualified_name": "org.springframework.beans.propertyeditors.CharArrayPropertyEditor", "short_description": " Editor for char arrays. "},
{"api_id": 885, "api_type": 2, "full_declaration": "CharsetEditor", "qualified_name": "org.springframework.beans.propertyeditors.CharsetEditor", "short_description": " Editor for  java.nio.charset.Charset , translating charset\nString representations into Charset objects and back. "},
{"api_id": 886, "api_type": 2, "full_declaration": "ClassArrayEditor", "qualified_name": "org.springframework.beans.propertyeditors.ClassArrayEditor", "short_description": " Property editor for an array of  Classes , to enable\nthe direct population of a  Class[]  property without having to\nuse a  String  class name property as bridge. "},
{"api_id": 887, "api_type": 2, "full_declaration": "ClassEditor", "qualified_name": "org.springframework.beans.propertyeditors.ClassEditor", "short_description": " Property editor for  java.lang.Class , to enable the direct\npopulation of a  Class  property without recourse to having to use a\nString class name property as bridge. "},
{"api_id": 888, "api_type": 2, "full_declaration": "CurrencyEditor", "qualified_name": "org.springframework.beans.propertyeditors.CurrencyEditor", "short_description": " Editor for  java.util.Currency , translating currency codes into Currency\nobjects. "},
{"api_id": 889, "api_type": 2, "full_declaration": "CustomBooleanEditor", "qualified_name": "org.springframework.beans.propertyeditors.CustomBooleanEditor", "short_description": " Property editor for Boolean/boolean properties. "},
{"api_id": 890, "api_type": 2, "full_declaration": "CustomCollectionEditor", "qualified_name": "org.springframework.beans.propertyeditors.CustomCollectionEditor", "short_description": " Property editor for Collections, converting any source Collection\nto a given target Collection type. "},
{"api_id": 891, "api_type": 2, "full_declaration": "CustomDateEditor", "qualified_name": "org.springframework.beans.propertyeditors.CustomDateEditor", "short_description": " Property editor for  java.util.Date ,\nsupporting a custom  java.text.DateFormat . "},
{"api_id": 892, "api_type": 2, "full_declaration": "CustomMapEditor", "qualified_name": "org.springframework.beans.propertyeditors.CustomMapEditor", "short_description": " Property editor for Maps, converting any source Map\nto a given target Map type. "},
{"api_id": 893, "api_type": 2, "full_declaration": "CustomNumberEditor", "qualified_name": "org.springframework.beans.propertyeditors.CustomNumberEditor", "short_description": " Property editor for any Number subclass such as Short, Integer, Long,\nBigInteger, Float, Double, BigDecimal. "},
{"api_id": 894, "api_type": 2, "full_declaration": "FileEditor", "qualified_name": "org.springframework.beans.propertyeditors.FileEditor", "short_description": " Editor for  java.io.File , to directly populate a File property\nfrom a Spring resource location. "},
{"api_id": 895, "api_type": 2, "full_declaration": "InputSourceEditor", "qualified_name": "org.springframework.beans.propertyeditors.InputSourceEditor", "short_description": " Editor for  org.xml.sax.InputSource , converting from a\nSpring resource location String to a SAX InputSource object. "},
{"api_id": 896, "api_type": 2, "full_declaration": "InputStreamEditor", "qualified_name": "org.springframework.beans.propertyeditors.InputStreamEditor", "short_description": " One-way PropertyEditor which can convert from a text String to a java.io.InputStream , interpreting the given String as a\nSpring resource location (e.g. "},
{"api_id": 897, "api_type": 2, "full_declaration": "LocaleEditor", "qualified_name": "org.springframework.beans.propertyeditors.LocaleEditor", "short_description": " Editor for  java.util.Locale , to directly populate a Locale property. "},
{"api_id": 898, "api_type": 2, "full_declaration": "PathEditor", "qualified_name": "org.springframework.beans.propertyeditors.PathEditor", "short_description": " Editor for  java.nio.file.Path , to directly populate a Path\nproperty instead of using a String property as bridge. "},
{"api_id": 899, "api_type": 2, "full_declaration": "PatternEditor", "qualified_name": "org.springframework.beans.propertyeditors.PatternEditor", "short_description": " Editor for  java.util.regex.Pattern , to directly populate a Pattern property. "},
{"api_id": 900, "api_type": 2, "full_declaration": "PropertiesEditor", "qualified_name": "org.springframework.beans.propertyeditors.PropertiesEditor", "short_description": " Custom  PropertyEditor  for  Properties  objects. "},
{"api_id": 901, "api_type": 2, "full_declaration": "ReaderEditor", "qualified_name": "org.springframework.beans.propertyeditors.ReaderEditor", "short_description": " One-way PropertyEditor which can convert from a text String to a java.io.Reader , interpreting the given String as a Spring\nresource location (e.g. "},
{"api_id": 902, "api_type": 2, "full_declaration": "ResourceBundleEditor", "qualified_name": "org.springframework.beans.propertyeditors.ResourceBundleEditor", "short_description": " PropertyEditor  implementation for standard JDK ResourceBundles . "},
{"api_id": 903, "api_type": 2, "full_declaration": "StringArrayPropertyEditor", "qualified_name": "org.springframework.beans.propertyeditors.StringArrayPropertyEditor", "short_description": " Custom  PropertyEditor  for String arrays. "},
{"api_id": 904, "api_type": 2, "full_declaration": "StringTrimmerEditor", "qualified_name": "org.springframework.beans.propertyeditors.StringTrimmerEditor", "short_description": " Property editor that trims Strings. "},
{"api_id": 905, "api_type": 2, "full_declaration": "TimeZoneEditor", "qualified_name": "org.springframework.beans.propertyeditors.TimeZoneEditor", "short_description": " Editor for  java.util.TimeZone , translating timezone IDs into TimeZone  objects. "},
{"api_id": 906, "api_type": 2, "full_declaration": "URIEditor", "qualified_name": "org.springframework.beans.propertyeditors.URIEditor", "short_description": " Editor for  java.net.URI , to directly populate a URI property\ninstead of using a String property as bridge. "},
{"api_id": 907, "api_type": 2, "full_declaration": "URLEditor", "qualified_name": "org.springframework.beans.propertyeditors.URLEditor", "short_description": " Editor for  java.net.URL , to directly populate a URL property\ninstead of using a String property as bridge. "},
{"api_id": 908, "api_type": 2, "full_declaration": "UUIDEditor", "qualified_name": "org.springframework.beans.propertyeditors.UUIDEditor", "short_description": " Editor for  java.util.UUID , translating UUID\nString representations into UUID objects and back. "},
{"api_id": 909, "api_type": 2, "full_declaration": "ZoneIdEditor", "qualified_name": "org.springframework.beans.propertyeditors.ZoneIdEditor", "short_description": " Editor for  java.time.ZoneId , translating zone ID Strings into  ZoneId objects. "},
{"api_id": 910, "api_type": 3, "full_declaration": "SortDefinition", "qualified_name": "org.springframework.beans.support.SortDefinition", "short_description": " Definition for sorting bean instances by a property. "},
{"api_id": 911, "api_type": 2, "full_declaration": "ArgumentConvertingMethodInvoker", "qualified_name": "org.springframework.beans.support.ArgumentConvertingMethodInvoker", "short_description": " Subclass of  MethodInvoker  that tries to convert the given\narguments for the actual target method via a  TypeConverter . "},
{"api_id": 912, "api_type": 2, "full_declaration": "MutableSortDefinition", "qualified_name": "org.springframework.beans.support.MutableSortDefinition", "short_description": " Mutable implementation of the  SortDefinition  interface. "},
{"api_id": 913, "api_type": 2, "full_declaration": "PagedListHolder", "qualified_name": "org.springframework.beans.support.PagedListHolder", "short_description": " PagedListHolder is a simple state holder for handling lists of objects,\nseparating them into pages. "},
{"api_id": 914, "api_type": 2, "full_declaration": "PropertyComparator", "qualified_name": "org.springframework.beans.support.PropertyComparator", "short_description": " PropertyComparator performs a comparison of two beans,\nevaluating the specified bean property via a BeanWrapper. "},
{"api_id": 915, "api_type": 2, "full_declaration": "ResourceEditorRegistrar", "qualified_name": "org.springframework.beans.support.ResourceEditorRegistrar", "short_description": " PropertyEditorRegistrar implementation that populates a given PropertyEditorRegistry (typically a  BeanWrapper  used for bean\ncreation within an  ApplicationContext )\nwith resource editors. "},
{"api_id": 916, "api_type": 3, "full_declaration": "Cache", "qualified_name": "org.springframework.cache.Cache", "short_description": " Interface that defines common cache operations. "},
{"api_id": 917, "api_type": 3, "full_declaration": "Cache.ValueWrapper", "qualified_name": "org.springframework.cache.Cache.ValueWrapper", "short_description": " A (wrapper) object representing a cache value. "},
{"api_id": 918, "api_type": 3, "full_declaration": "CacheManager", "qualified_name": "org.springframework.cache.CacheManager", "short_description": " Spring's central cache manager SPI. "},
{"api_id": 919, "api_type": 4, "full_declaration": "Cache.ValueRetrievalException", "qualified_name": "org.springframework.cache.Cache.ValueRetrievalException", "short_description": " Wrapper exception to be thrown from  Cache.get(Object, Callable) in case of the value loader callback failing with an exception. "},
{"api_id": 920, "api_type": 3, "full_declaration": "AnnotationCacheOperationSource.CacheOperationProvider", "qualified_name": "org.springframework.cache.annotation.AnnotationCacheOperationSource.CacheOperationProvider", "short_description": " Callback interface providing  CacheOperation  instance(s) based on\na given  CacheAnnotationParser . "},
{"api_id": 921, "api_type": 3, "full_declaration": "CacheAnnotationParser", "qualified_name": "org.springframework.cache.annotation.CacheAnnotationParser", "short_description": " Strategy interface for parsing known caching annotation types. "},
{"api_id": 922, "api_type": 3, "full_declaration": "CachingConfigurer", "qualified_name": "org.springframework.cache.annotation.CachingConfigurer", "short_description": " Interface to be implemented by @ Configuration  classes annotated with @ EnableCaching  that wish or need to\nspecify explicitly how caches are resolved and how keys are generated for annotation-driven\ncache management. "},
{"api_id": 923, "api_type": 2, "full_declaration": "AbstractCachingConfiguration", "qualified_name": "org.springframework.cache.annotation.AbstractCachingConfiguration", "short_description": " Abstract base  @Configuration  class providing common structure\nfor enabling Spring's annotation-driven cache management capability. "},
{"api_id": 924, "api_type": 2, "full_declaration": "AnnotationCacheOperationSource", "qualified_name": "org.springframework.cache.annotation.AnnotationCacheOperationSource", "short_description": " Implementation of the  CacheOperationSource  interface for working with caching metadata in annotation format. "},
{"api_id": 925, "api_type": 2, "full_declaration": "CachingConfigurationSelector", "qualified_name": "org.springframework.cache.annotation.CachingConfigurationSelector", "short_description": " Selects which implementation of  AbstractCachingConfiguration  should\nbe used based on the value of  EnableCaching.mode()  on the importing @Configuration  class. "},
{"api_id": 926, "api_type": 2, "full_declaration": "CachingConfigurerSupport", "qualified_name": "org.springframework.cache.annotation.CachingConfigurerSupport", "short_description": " An implementation of  CachingConfigurer  with empty methods allowing\nsub-classes to override only the methods they're interested in. "},
{"api_id": 927, "api_type": 2, "full_declaration": "ProxyCachingConfiguration", "qualified_name": "org.springframework.cache.annotation.ProxyCachingConfiguration", "short_description": " @Configuration  class that registers the Spring infrastructure beans necessary\nto enable proxy-based annotation-driven cache management. "},
{"api_id": 928, "api_type": 2, "full_declaration": "SpringCacheAnnotationParser", "qualified_name": "org.springframework.cache.annotation.SpringCacheAnnotationParser", "short_description": " Strategy implementation for parsing Spring's  Caching ,  Cacheable , CacheEvict , and  CachePut  annotations. "},
{"api_id": 929, "api_type": 9, "full_declaration": "Cacheable", "qualified_name": "org.springframework.cache.annotation.Cacheable", "short_description": " Annotation indicating that the result of invoking a method (or all methods\nin a class) can be cached. "},
{"api_id": 930, "api_type": 9, "full_declaration": "CacheConfig", "qualified_name": "org.springframework.cache.annotation.CacheConfig", "short_description": " @CacheConfig  provides a mechanism for sharing common cache-related\nsettings at the class level. "},
{"api_id": 931, "api_type": 9, "full_declaration": "CacheEvict", "qualified_name": "org.springframework.cache.annotation.CacheEvict", "short_description": " Annotation indicating that a method (or all methods on a class) triggers a cache evict  operation. "},
{"api_id": 932, "api_type": 9, "full_declaration": "CachePut", "qualified_name": "org.springframework.cache.annotation.CachePut", "short_description": " Annotation indicating that a method (or all methods on a class) triggers a cache put  operation. "},
{"api_id": 933, "api_type": 9, "full_declaration": "Caching", "qualified_name": "org.springframework.cache.annotation.Caching", "short_description": " Group annotation for multiple cache annotations (of different or the same type). "},
{"api_id": 934, "api_type": 9, "full_declaration": "EnableCaching", "qualified_name": "org.springframework.cache.annotation.EnableCaching", "short_description": " Enables Spring's annotation-driven cache management capability, similar to the\nsupport found in Spring's  <cache:*>  XML namespace. "},
{"api_id": 935, "api_type": 2, "full_declaration": "AspectJCachingConfiguration", "qualified_name": "org.springframework.cache.aspectj.AspectJCachingConfiguration", "short_description": " @Configuration  class that registers the Spring infrastructure beans\nnecessary to enable AspectJ-based annotation-driven cache management. "},
{"api_id": 936, "api_type": 2, "full_declaration": "AspectJJCacheConfiguration", "qualified_name": "org.springframework.cache.aspectj.AspectJJCacheConfiguration", "short_description": " @Configuration  class that registers the Spring infrastructure beans necessary\nto enable AspectJ-based annotation-driven cache management for standard JSR-107\nannotations. "},
{"api_id": 937, "api_type": 2, "full_declaration": "CaffeineCache", "qualified_name": "org.springframework.cache.caffeine.CaffeineCache", "short_description": " Spring  Cache  adapter implementation\non top of a Caffeine  Cache  instance. "},
{"api_id": 938, "api_type": 2, "full_declaration": "CaffeineCacheManager", "qualified_name": "org.springframework.cache.caffeine.CaffeineCacheManager", "short_description": " CacheManager  implementation that lazily builds  CaffeineCache instances for each  CaffeineCacheManager.getCache(java.lang.String)  request. "},
{"api_id": 939, "api_type": 2, "full_declaration": "ConcurrentMapCache", "qualified_name": "org.springframework.cache.concurrent.ConcurrentMapCache", "short_description": " Simple  Cache  implementation based on the\ncore JDK  java.util.concurrent  package. "},
{"api_id": 940, "api_type": 2, "full_declaration": "ConcurrentMapCacheFactoryBean", "qualified_name": "org.springframework.cache.concurrent.ConcurrentMapCacheFactoryBean", "short_description": " FactoryBean  for easy configuration of a  ConcurrentMapCache when used within a Spring container. "},
{"api_id": 941, "api_type": 2, "full_declaration": "ConcurrentMapCacheManager", "qualified_name": "org.springframework.cache.concurrent.ConcurrentMapCacheManager", "short_description": " CacheManager  implementation that lazily builds  ConcurrentMapCache instances for each  ConcurrentMapCacheManager.getCache(java.lang.String)  request. "},
{"api_id": 942, "api_type": 2, "full_declaration": "CacheManagementConfigUtils", "qualified_name": "org.springframework.cache.config.CacheManagementConfigUtils", "short_description": " Configuration constants for internal sharing across subpackages. "},
{"api_id": 943, "api_type": 2, "full_declaration": "CacheNamespaceHandler", "qualified_name": "org.springframework.cache.config.CacheNamespaceHandler", "short_description": " NamespaceHandler  allowing for the configuration of declarative\ncache management using either XML or using annotations. "},
{"api_id": 944, "api_type": 2, "full_declaration": "EhCacheCache", "qualified_name": "org.springframework.cache.ehcache.EhCacheCache", "short_description": " Cache  implementation on top of an  Ehcache  instance. "},
{"api_id": 945, "api_type": 2, "full_declaration": "EhCacheCacheManager", "qualified_name": "org.springframework.cache.ehcache.EhCacheCacheManager", "short_description": " CacheManager backed by an EhCache  CacheManager . "},
{"api_id": 946, "api_type": 2, "full_declaration": "EhCacheFactoryBean", "qualified_name": "org.springframework.cache.ehcache.EhCacheFactoryBean", "short_description": " FactoryBean  that creates a named EhCache  Cache  instance\n(or a decorator that implements the  Ehcache  interface),\nrepresenting a cache region within an EhCache  CacheManager . "},
{"api_id": 947, "api_type": 2, "full_declaration": "EhCacheManagerFactoryBean", "qualified_name": "org.springframework.cache.ehcache.EhCacheManagerFactoryBean", "short_description": " FactoryBean  that exposes an EhCache  CacheManager instance (independent or shared), configured from a specified config location. "},
{"api_id": 948, "api_type": 2, "full_declaration": "EhCacheManagerUtils", "qualified_name": "org.springframework.cache.ehcache.EhCacheManagerUtils", "short_description": " Convenient builder methods for EhCache 2.5+  CacheManager  setup,\nproviding easy programmatic bootstrapping from a Spring-provided resource. "},
{"api_id": 949, "api_type": 3, "full_declaration": "BasicOperation", "qualified_name": "org.springframework.cache.interceptor.BasicOperation", "short_description": " The base interface that all cache operations must implement. "},
{"api_id": 950, "api_type": 3, "full_declaration": "CacheErrorHandler", "qualified_name": "org.springframework.cache.interceptor.CacheErrorHandler", "short_description": " A strategy for handling cache-related errors. "},
{"api_id": 951, "api_type": 3, "full_declaration": "CacheOperationInvocationContext", "qualified_name": "org.springframework.cache.interceptor.CacheOperationInvocationContext", "short_description": " Representation of the context of the invocation of a cache operation. "},
{"api_id": 952, "api_type": 3, "full_declaration": "CacheOperationInvoker", "qualified_name": "org.springframework.cache.interceptor.CacheOperationInvoker", "short_description": " Abstract the invocation of a cache operation. "},
{"api_id": 953, "api_type": 3, "full_declaration": "CacheOperationSource", "qualified_name": "org.springframework.cache.interceptor.CacheOperationSource", "short_description": " Interface used by  CacheInterceptor . "},
{"api_id": 954, "api_type": 3, "full_declaration": "CacheResolver", "qualified_name": "org.springframework.cache.interceptor.CacheResolver", "short_description": " Determine the  Cache  instance(s) to use for an intercepted method invocation. "},
{"api_id": 955, "api_type": 3, "full_declaration": "KeyGenerator", "qualified_name": "org.springframework.cache.interceptor.KeyGenerator", "short_description": " Cache key generator. "},
{"api_id": 956, "api_type": 2, "full_declaration": "AbstractCacheInvoker", "qualified_name": "org.springframework.cache.interceptor.AbstractCacheInvoker", "short_description": " A base component for invoking  Cache  operations and using a\nconfigurable  CacheErrorHandler  when an exception occurs. "},
{"api_id": 957, "api_type": 2, "full_declaration": "AbstractCacheResolver", "qualified_name": "org.springframework.cache.interceptor.AbstractCacheResolver", "short_description": " A base  CacheResolver  implementation that requires the concrete\nimplementation to provide the collection of cache name(s) based on the\ninvocation context. "},
{"api_id": 958, "api_type": 2, "full_declaration": "AbstractFallbackCacheOperationSource", "qualified_name": "org.springframework.cache.interceptor.AbstractFallbackCacheOperationSource", "short_description": " Abstract implementation of  CacheOperation  that caches attributes\nfor methods and implements a fallback policy: 1. "},
{"api_id": 959, "api_type": 2, "full_declaration": "BeanFactoryCacheOperationSourceAdvisor", "qualified_name": "org.springframework.cache.interceptor.BeanFactoryCacheOperationSourceAdvisor", "short_description": " Advisor driven by a  CacheOperationSource , used to include a\ncache advice bean for methods that are cacheable. "},
{"api_id": 960, "api_type": 2, "full_declaration": "CacheableOperation", "qualified_name": "org.springframework.cache.interceptor.CacheableOperation", "short_description": " Class describing a cache 'cacheable' operation. "},
{"api_id": 961, "api_type": 2, "full_declaration": "CacheableOperation.Builder", "qualified_name": "org.springframework.cache.interceptor.CacheableOperation.Builder", "short_description": " A builder that can be used to create a  CacheableOperation . "},
{"api_id": 962, "api_type": 2, "full_declaration": "CacheAspectSupport", "qualified_name": "org.springframework.cache.interceptor.CacheAspectSupport", "short_description": " Base class for caching aspects, such as the  CacheInterceptor  or an\nAspectJ aspect. "},
{"api_id": 963, "api_type": 2, "full_declaration": "CacheAspectSupport.CacheOperationMetadata", "qualified_name": "org.springframework.cache.interceptor.CacheAspectSupport.CacheOperationMetadata", "short_description": " Metadata of a cache operation that does not depend on a particular invocation\nwhich makes it a good candidate for caching. "},
{"api_id": 964, "api_type": 2, "full_declaration": "CacheEvictOperation", "qualified_name": "org.springframework.cache.interceptor.CacheEvictOperation", "short_description": " Class describing a cache 'evict' operation. "},
{"api_id": 965, "api_type": 2, "full_declaration": "CacheEvictOperation.Builder", "qualified_name": "org.springframework.cache.interceptor.CacheEvictOperation.Builder", "short_description": " A builder that can be used to create a  CacheEvictOperation . "},
{"api_id": 966, "api_type": 2, "full_declaration": "CacheInterceptor", "qualified_name": "org.springframework.cache.interceptor.CacheInterceptor", "short_description": " AOP Alliance MethodInterceptor for declarative cache\nmanagement using the common Spring caching infrastructure\n( Cache ). "},
{"api_id": 967, "api_type": 2, "full_declaration": "CacheOperation", "qualified_name": "org.springframework.cache.interceptor.CacheOperation", "short_description": " Base class for cache operations. "},
{"api_id": 968, "api_type": 2, "full_declaration": "CacheOperation.Builder", "qualified_name": "org.springframework.cache.interceptor.CacheOperation.Builder", "short_description": " Base class for builders that can be used to create a  CacheOperation . "},
{"api_id": 969, "api_type": 2, "full_declaration": "CacheProxyFactoryBean", "qualified_name": "org.springframework.cache.interceptor.CacheProxyFactoryBean", "short_description": " Proxy factory bean for simplified declarative caching handling. "},
{"api_id": 970, "api_type": 2, "full_declaration": "CachePutOperation", "qualified_name": "org.springframework.cache.interceptor.CachePutOperation", "short_description": " Class describing a cache 'put' operation. "},
{"api_id": 971, "api_type": 2, "full_declaration": "CachePutOperation.Builder", "qualified_name": "org.springframework.cache.interceptor.CachePutOperation.Builder", "short_description": " A builder that can be used to create a  CachePutOperation . "},
{"api_id": 972, "api_type": 2, "full_declaration": "CompositeCacheOperationSource", "qualified_name": "org.springframework.cache.interceptor.CompositeCacheOperationSource", "short_description": " Composite  CacheOperationSource  implementation that iterates\nover a given array of  CacheOperationSource  instances. "},
{"api_id": 973, "api_type": 2, "full_declaration": "NamedCacheResolver", "qualified_name": "org.springframework.cache.interceptor.NamedCacheResolver", "short_description": " A  CacheResolver  that forces the resolution to a configurable\ncollection of name(s) against a given  CacheManager . "},
{"api_id": 974, "api_type": 2, "full_declaration": "NameMatchCacheOperationSource", "qualified_name": "org.springframework.cache.interceptor.NameMatchCacheOperationSource", "short_description": " Simple  CacheOperationSource  implementation that allows attributes to be matched\nby registered name. "},
{"api_id": 975, "api_type": 2, "full_declaration": "SimpleCacheErrorHandler", "qualified_name": "org.springframework.cache.interceptor.SimpleCacheErrorHandler", "short_description": " A simple  CacheErrorHandler  that does not handle the\nexception at all, simply throwing it back at the client. "},
{"api_id": 976, "api_type": 2, "full_declaration": "SimpleCacheResolver", "qualified_name": "org.springframework.cache.interceptor.SimpleCacheResolver", "short_description": " A simple  CacheResolver  that resolves the  Cache  instance(s)\nbased on a configurable  CacheManager  and the name of the\ncache(s) as provided by  getCacheNames() . "},
{"api_id": 977, "api_type": 2, "full_declaration": "SimpleKey", "qualified_name": "org.springframework.cache.interceptor.SimpleKey", "short_description": " A simple key as returned from the  SimpleKeyGenerator . "},
{"api_id": 978, "api_type": 2, "full_declaration": "SimpleKeyGenerator", "qualified_name": "org.springframework.cache.interceptor.SimpleKeyGenerator", "short_description": " Simple key generator. "},
{"api_id": 979, "api_type": 4, "full_declaration": "CacheOperationInvoker.ThrowableWrapper", "qualified_name": "org.springframework.cache.interceptor.CacheOperationInvoker.ThrowableWrapper", "short_description": " Wrap any exception thrown while invoking  CacheOperationInvoker.invoke() . "},
{"api_id": 980, "api_type": 2, "full_declaration": "JCacheCache", "qualified_name": "org.springframework.cache.jcache.JCacheCache", "short_description": " Cache  implementation on top of a javax.cache.Cache  instance. "},
{"api_id": 981, "api_type": 2, "full_declaration": "JCacheCacheManager", "qualified_name": "org.springframework.cache.jcache.JCacheCacheManager", "short_description": " CacheManager  implementation\nbacked by a JCache  javax.cache.CacheManager . "},
{"api_id": 982, "api_type": 2, "full_declaration": "JCacheManagerFactoryBean", "qualified_name": "org.springframework.cache.jcache.JCacheManagerFactoryBean", "short_description": " FactoryBean  for a JCache  javax.cache.CacheManager ,\nobtaining a pre-defined  CacheManager  by name through the standard\nJCache  javax.cache.Caching  class. "},
{"api_id": 983, "api_type": 3, "full_declaration": "JCacheConfigurer", "qualified_name": "org.springframework.cache.jcache.config.JCacheConfigurer", "short_description": " Extension of  CachingConfigurer  for the JSR-107 implementation. "},
{"api_id": 984, "api_type": 2, "full_declaration": "AbstractJCacheConfiguration", "qualified_name": "org.springframework.cache.jcache.config.AbstractJCacheConfiguration", "short_description": " Abstract JSR-107 specific  @Configuration  class providing common\nstructure for enabling JSR-107 annotation-driven cache management capability. "},
{"api_id": 985, "api_type": 2, "full_declaration": "JCacheConfigurerSupport", "qualified_name": "org.springframework.cache.jcache.config.JCacheConfigurerSupport", "short_description": " An extension of  CachingConfigurerSupport  that also implements JCacheConfigurer . "},
{"api_id": 986, "api_type": 2, "full_declaration": "ProxyJCacheConfiguration", "qualified_name": "org.springframework.cache.jcache.config.ProxyJCacheConfiguration", "short_description": " @Configuration  class that registers the Spring infrastructure beans necessary\nto enable proxy-based annotation-driven JSR-107 cache management. "},
{"api_id": 987, "api_type": 3, "full_declaration": "JCacheOperation", "qualified_name": "org.springframework.cache.jcache.interceptor.JCacheOperation", "short_description": " Model the base of JSR-107 cache operation through an interface contract. "},
{"api_id": 988, "api_type": 3, "full_declaration": "JCacheOperationSource", "qualified_name": "org.springframework.cache.jcache.interceptor.JCacheOperationSource", "short_description": " Interface used by  JCacheInterceptor . "},
{"api_id": 989, "api_type": 2, "full_declaration": "AbstractFallbackJCacheOperationSource", "qualified_name": "org.springframework.cache.jcache.interceptor.AbstractFallbackJCacheOperationSource", "short_description": " Abstract implementation of  JCacheOperationSource  that caches attributes\nfor methods and implements a fallback policy: 1. "},
{"api_id": 990, "api_type": 2, "full_declaration": "AnnotationJCacheOperationSource", "qualified_name": "org.springframework.cache.jcache.interceptor.AnnotationJCacheOperationSource", "short_description": " Implementation of the  JCacheOperationSource  interface that reads\nthe JSR-107  CacheResult ,  CachePut ,  CacheRemove  and CacheRemoveAll  annotations. "},
{"api_id": 991, "api_type": 2, "full_declaration": "BeanFactoryJCacheOperationSourceAdvisor", "qualified_name": "org.springframework.cache.jcache.interceptor.BeanFactoryJCacheOperationSourceAdvisor", "short_description": " Advisor driven by a  JCacheOperationSource , used to include a\ncache advice bean for methods that are cacheable. "},
{"api_id": 992, "api_type": 2, "full_declaration": "DefaultJCacheOperationSource", "qualified_name": "org.springframework.cache.jcache.interceptor.DefaultJCacheOperationSource", "short_description": " The default  JCacheOperationSource  implementation delegating\ndefault operations to configurable services with sensible defaults\nwhen not present. "},
{"api_id": 993, "api_type": 2, "full_declaration": "JCacheAspectSupport", "qualified_name": "org.springframework.cache.jcache.interceptor.JCacheAspectSupport", "short_description": " Base class for JSR-107 caching aspects, such as the  JCacheInterceptor or an AspectJ aspect. "},
{"api_id": 994, "api_type": 2, "full_declaration": "JCacheInterceptor", "qualified_name": "org.springframework.cache.jcache.interceptor.JCacheInterceptor", "short_description": " AOP Alliance MethodInterceptor for declarative cache\nmanagement using JSR-107 caching annotations. "},
{"api_id": 995, "api_type": 2, "full_declaration": "JCacheOperationSourcePointcut", "qualified_name": "org.springframework.cache.jcache.interceptor.JCacheOperationSourcePointcut", "short_description": " A Pointcut that matches if the underlying  JCacheOperationSource has an operation for a given method. "},
{"api_id": 996, "api_type": 2, "full_declaration": "SimpleExceptionCacheResolver", "qualified_name": "org.springframework.cache.jcache.interceptor.SimpleExceptionCacheResolver", "short_description": " A simple  CacheResolver  that resolves the exception cache\nbased on a configurable  CacheManager  and the name of the\ncache:  CacheResultOperation.getExceptionCacheName() . "},
{"api_id": 997, "api_type": 2, "full_declaration": "AbstractCacheManager", "qualified_name": "org.springframework.cache.support.AbstractCacheManager", "short_description": " Abstract base class implementing the common  CacheManager  methods. "},
{"api_id": 998, "api_type": 2, "full_declaration": "AbstractValueAdaptingCache", "qualified_name": "org.springframework.cache.support.AbstractValueAdaptingCache", "short_description": " Common base class for  Cache  implementations that need to adapt null  values (and potentially other such special values) before\npassing them on to the underlying store. "},
{"api_id": 999, "api_type": 2, "full_declaration": "CompositeCacheManager", "qualified_name": "org.springframework.cache.support.CompositeCacheManager", "short_description": " Composite  CacheManager  implementation that iterates over\na given collection of delegate  CacheManager  instances. "},
{"api_id": 1000, "api_type": 2, "full_declaration": "NoOpCache", "qualified_name": "org.springframework.cache.support.NoOpCache", "short_description": " A no operation  Cache  implementation suitable for disabling caching. "},
{"api_id": 1001, "api_type": 2, "full_declaration": "NoOpCacheManager", "qualified_name": "org.springframework.cache.support.NoOpCacheManager", "short_description": " A basic, no operation  CacheManager  implementation suitable\nfor disabling caching, typically used for backing cache declarations\nwithout an actual backing store. "},
{"api_id": 1002, "api_type": 2, "full_declaration": "NullValue", "qualified_name": "org.springframework.cache.support.NullValue", "short_description": " Simple serializable class that serves as a  null  replacement\nfor cache stores which otherwise do not support  null  values. "},
{"api_id": 1003, "api_type": 2, "full_declaration": "SimpleCacheManager", "qualified_name": "org.springframework.cache.support.SimpleCacheManager", "short_description": " Simple cache manager working against a given collection of caches. "},
{"api_id": 1004, "api_type": 2, "full_declaration": "SimpleValueWrapper", "qualified_name": "org.springframework.cache.support.SimpleValueWrapper", "short_description": " Straightforward implementation of  Cache.ValueWrapper ,\nsimply holding the value as given at construction and returning it from  SimpleValueWrapper.get() . "},
{"api_id": 1005, "api_type": 2, "full_declaration": "AbstractTransactionSupportingCacheManager", "qualified_name": "org.springframework.cache.transaction.AbstractTransactionSupportingCacheManager", "short_description": " Base class for CacheManager implementations that want to support built-in\nawareness of Spring-managed transactions. "},
{"api_id": 1006, "api_type": 2, "full_declaration": "TransactionAwareCacheDecorator", "qualified_name": "org.springframework.cache.transaction.TransactionAwareCacheDecorator", "short_description": " Cache decorator which synchronizes its  TransactionAwareCacheDecorator.put(java.lang.Object, java.lang.Object) ,  TransactionAwareCacheDecorator.evict(java.lang.Object)  and TransactionAwareCacheDecorator.clear()  operations with Spring-managed transactions (through Spring's TransactionSynchronizationManager , performing the actual cache\nput/evict/clear operation only in the after-commit phase of a successful\ntransaction. "},
{"api_id": 1007, "api_type": 2, "full_declaration": "TransactionAwareCacheManagerProxy", "qualified_name": "org.springframework.cache.transaction.TransactionAwareCacheManagerProxy", "short_description": " Proxy for a target  CacheManager , exposing transaction-aware  Cache  objects\nwhich synchronize their  Cache.put(java.lang.Object, java.lang.Object)  operations with Spring-managed transactions\n(through Spring's  TransactionSynchronizationManager ,\nperforming the actual cache put operation only in the after-commit phase of a successful transaction. "},
{"api_id": 1008, "api_type": 2, "full_declaration": "SpringCglibInfo", "qualified_name": "org.springframework.cglib.SpringCglibInfo", "short_description": " Empty class used to ensure that the  org.springframework.cglib package is processed during javadoc generation. "},
{"api_id": 1009, "api_type": 2, "full_declaration": "AbstractClassGenerator", "qualified_name": "org.springframework.cglib.core.AbstractClassGenerator", "short_description": " Abstract class for all code-generating CGLIB utilities. "},
{"api_id": 1010, "api_type": 2, "full_declaration": "AbstractClassGenerator.ClassLoaderData", "qualified_name": "org.springframework.cglib.core.AbstractClassGenerator.ClassLoaderData", "short_description": "\u00a0"},
{"api_id": 1011, "api_type": 2, "full_declaration": "AbstractClassGenerator.Source", "qualified_name": "org.springframework.cglib.core.AbstractClassGenerator.Source", "short_description": "\u00a0"},
{"api_id": 1012, "api_type": 2, "full_declaration": "ClassLoaderAwareGeneratorStrategy", "qualified_name": "org.springframework.cglib.core.ClassLoaderAwareGeneratorStrategy", "short_description": " CGLIB GeneratorStrategy variant which exposes the application ClassLoader\nas current thread context ClassLoader for the time of class generation. "},
{"api_id": 1013, "api_type": 2, "full_declaration": "KeyFactory", "qualified_name": "org.springframework.cglib.core.KeyFactory", "short_description": " Generates classes to handle multi-valued keys, for use in things such as Maps and Sets. "},
{"api_id": 1014, "api_type": 2, "full_declaration": "KeyFactory.Generator", "qualified_name": "org.springframework.cglib.core.KeyFactory.Generator", "short_description": "\u00a0"},
{"api_id": 1015, "api_type": 2, "full_declaration": "ReflectUtils", "qualified_name": "org.springframework.cglib.core.ReflectUtils", "short_description": "\u00a0"},
{"api_id": 1016, "api_type": 2, "full_declaration": "SpringNamingPolicy", "qualified_name": "org.springframework.cglib.core.SpringNamingPolicy", "short_description": " Custom extension of CGLIB's  DefaultNamingPolicy , modifying\nthe tag in generated class names from \"ByCGLIB\" to \"BySpringCGLIB\". "},
{"api_id": 1017, "api_type": 3, "full_declaration": "Enhancer.EnhancerKey", "qualified_name": "org.springframework.cglib.proxy.Enhancer.EnhancerKey", "short_description": " Internal interface, only public due to ClassLoader issues. "},
{"api_id": 1018, "api_type": 2, "full_declaration": "Enhancer", "qualified_name": "org.springframework.cglib.proxy.Enhancer", "short_description": " Generates dynamic subclasses to enable method interception. "},
{"api_id": 1019, "api_type": 2, "full_declaration": "MethodProxy", "qualified_name": "org.springframework.cglib.proxy.MethodProxy", "short_description": " Classes generated by  Enhancer  pass this object to the\nregistered  MethodInterceptor  objects when an intercepted method is invoked. "},
{"api_id": 1020, "api_type": 3, "full_declaration": "ApplicationContext", "qualified_name": "org.springframework.context.ApplicationContext", "short_description": " Central interface to provide configuration for an application. "},
{"api_id": 1021, "api_type": 3, "full_declaration": "ApplicationContextAware", "qualified_name": "org.springframework.context.ApplicationContextAware", "short_description": " Interface to be implemented by any object that wishes to be notified\nof the  ApplicationContext  that it runs in. "},
{"api_id": 1022, "api_type": 3, "full_declaration": "ApplicationContextInitializer", "qualified_name": "org.springframework.context.ApplicationContextInitializer", "short_description": " Callback interface for initializing a Spring  ConfigurableApplicationContext prior to being  refreshed . "},
{"api_id": 1023, "api_type": 3, "full_declaration": "ApplicationEventPublisher", "qualified_name": "org.springframework.context.ApplicationEventPublisher", "short_description": " Interface that encapsulates event publication functionality. "},
{"api_id": 1024, "api_type": 3, "full_declaration": "ApplicationEventPublisherAware", "qualified_name": "org.springframework.context.ApplicationEventPublisherAware", "short_description": " Interface to be implemented by any object that wishes to be notified\nof the ApplicationEventPublisher (typically the ApplicationContext)\nthat it runs in. "},
{"api_id": 1025, "api_type": 3, "full_declaration": "ApplicationListener", "qualified_name": "org.springframework.context.ApplicationListener", "short_description": " Interface to be implemented by application event listeners. "},
{"api_id": 1026, "api_type": 3, "full_declaration": "ApplicationStartupAware", "qualified_name": "org.springframework.context.ApplicationStartupAware", "short_description": " Interface to be implemented by any object that wishes to be notified\nof the  ApplicationStartup  that it runs with. "},
{"api_id": 1027, "api_type": 3, "full_declaration": "ConfigurableApplicationContext", "qualified_name": "org.springframework.context.ConfigurableApplicationContext", "short_description": " SPI interface to be implemented by most if not all application contexts. "},
{"api_id": 1028, "api_type": 3, "full_declaration": "EmbeddedValueResolverAware", "qualified_name": "org.springframework.context.EmbeddedValueResolverAware", "short_description": " Interface to be implemented by any object that wishes to be notified of a StringValueResolver  for the resolution of embedded definition values. "},
{"api_id": 1029, "api_type": 3, "full_declaration": "EnvironmentAware", "qualified_name": "org.springframework.context.EnvironmentAware", "short_description": " Interface to be implemented by any bean that wishes to be notified\nof the  Environment  that it runs in. "},
{"api_id": 1030, "api_type": 3, "full_declaration": "HierarchicalMessageSource", "qualified_name": "org.springframework.context.HierarchicalMessageSource", "short_description": " Sub-interface of MessageSource to be implemented by objects that\ncan resolve messages hierarchically. "},
{"api_id": 1031, "api_type": 3, "full_declaration": "Lifecycle", "qualified_name": "org.springframework.context.Lifecycle", "short_description": " A common interface defining methods for start/stop lifecycle control. "},
{"api_id": 1032, "api_type": 3, "full_declaration": "LifecycleProcessor", "qualified_name": "org.springframework.context.LifecycleProcessor", "short_description": " Strategy interface for processing Lifecycle beans within the ApplicationContext. "},
{"api_id": 1033, "api_type": 3, "full_declaration": "MessageSource", "qualified_name": "org.springframework.context.MessageSource", "short_description": " Strategy interface for resolving messages, with support for the parameterization\nand internationalization of such messages. "},
{"api_id": 1034, "api_type": 3, "full_declaration": "MessageSourceAware", "qualified_name": "org.springframework.context.MessageSourceAware", "short_description": " Interface to be implemented by any object that wishes to be notified\nof the MessageSource (typically the ApplicationContext) that it runs in. "},
{"api_id": 1035, "api_type": 3, "full_declaration": "MessageSourceResolvable", "qualified_name": "org.springframework.context.MessageSourceResolvable", "short_description": " Interface for objects that are suitable for message resolution in a MessageSource . "},
{"api_id": 1036, "api_type": 3, "full_declaration": "Phased", "qualified_name": "org.springframework.context.Phased", "short_description": " Interface for objects that may participate in a phased\nprocess such as lifecycle management. "},
{"api_id": 1037, "api_type": 3, "full_declaration": "ResourceLoaderAware", "qualified_name": "org.springframework.context.ResourceLoaderAware", "short_description": " Interface to be implemented by any object that wishes to be notified of the ResourceLoader  (typically the ApplicationContext) that it runs in. "},
{"api_id": 1038, "api_type": 3, "full_declaration": "SmartLifecycle", "qualified_name": "org.springframework.context.SmartLifecycle", "short_description": " An extension of the  Lifecycle  interface for those objects that require\nto be started upon  ApplicationContext  refresh and/or shutdown in a\nparticular order. "},
{"api_id": 1039, "api_type": 2, "full_declaration": "ApplicationEvent", "qualified_name": "org.springframework.context.ApplicationEvent", "short_description": " Class to be extended by all application events. "},
{"api_id": 1040, "api_type": 2, "full_declaration": "PayloadApplicationEvent", "qualified_name": "org.springframework.context.PayloadApplicationEvent", "short_description": " An  ApplicationEvent  that carries an arbitrary payload. "},
{"api_id": 1041, "api_type": 4, "full_declaration": "ApplicationContextException", "qualified_name": "org.springframework.context.ApplicationContextException", "short_description": " Exception thrown during application context initialization. "},
{"api_id": 1042, "api_type": 4, "full_declaration": "NoSuchMessageException", "qualified_name": "org.springframework.context.NoSuchMessageException", "short_description": " Exception thrown when a message can't be resolved. "},
{"api_id": 1043, "api_type": 3, "full_declaration": "AnnotationConfigRegistry", "qualified_name": "org.springframework.context.annotation.AnnotationConfigRegistry", "short_description": " Common interface for annotation config application contexts,\ndefining  AnnotationConfigRegistry.register(java.lang.Class<?>...)  and  AnnotationConfigRegistry.scan(java.lang.String...)  methods. "},
{"api_id": 1044, "api_type": 3, "full_declaration": "Condition", "qualified_name": "org.springframework.context.annotation.Condition", "short_description": " A single  condition  that must be  matched  in order\nfor a component to be registered. "},
{"api_id": 1045, "api_type": 3, "full_declaration": "ConditionContext", "qualified_name": "org.springframework.context.annotation.ConditionContext", "short_description": " Context information for use by  Condition  implementations. "},
{"api_id": 1046, "api_type": 3, "full_declaration": "ConfigurationCondition", "qualified_name": "org.springframework.context.annotation.ConfigurationCondition", "short_description": " A  Condition  that offers more fine-grained control when used with @Configuration . "},
{"api_id": 1047, "api_type": 3, "full_declaration": "DeferredImportSelector", "qualified_name": "org.springframework.context.annotation.DeferredImportSelector", "short_description": " A variation of  ImportSelector  that runs after all  @Configuration  beans\nhave been processed. "},
{"api_id": 1048, "api_type": 3, "full_declaration": "DeferredImportSelector.Group", "qualified_name": "org.springframework.context.annotation.DeferredImportSelector.Group", "short_description": " Interface used to group results from different import selectors. "},
{"api_id": 1049, "api_type": 3, "full_declaration": "ImportAware", "qualified_name": "org.springframework.context.annotation.ImportAware", "short_description": " Interface to be implemented by any @ Configuration  class that wishes\nto be injected with the  AnnotationMetadata  of the @ Configuration class that imported it. "},
{"api_id": 1050, "api_type": 3, "full_declaration": "ImportBeanDefinitionRegistrar", "qualified_name": "org.springframework.context.annotation.ImportBeanDefinitionRegistrar", "short_description": " Interface to be implemented by types that register additional bean definitions when\nprocessing @ Configuration  classes. "},
{"api_id": 1051, "api_type": 3, "full_declaration": "ImportSelector", "qualified_name": "org.springframework.context.annotation.ImportSelector", "short_description": " Interface to be implemented by types that determine which @ Configuration class(es) should be imported based on a given selection criteria, usually one or\nmore annotation attributes. "},
{"api_id": 1052, "api_type": 3, "full_declaration": "LoadTimeWeavingConfigurer", "qualified_name": "org.springframework.context.annotation.LoadTimeWeavingConfigurer", "short_description": " Interface to be implemented by @Configuration classes annotated with  @EnableLoadTimeWeaving  that wish to\ncustomize the  LoadTimeWeaver  instance to be used. "},
{"api_id": 1053, "api_type": 3, "full_declaration": "ScopeMetadataResolver", "qualified_name": "org.springframework.context.annotation.ScopeMetadataResolver", "short_description": " Strategy interface for resolving the scope of bean definitions. "},
{"api_id": 1054, "api_type": 2, "full_declaration": "AdviceModeImportSelector", "qualified_name": "org.springframework.context.annotation.AdviceModeImportSelector", "short_description": " Convenient base class for  ImportSelector  implementations that select imports\nbased on an  AdviceMode  value from an annotation (such as the  @Enable* annotations). "},
{"api_id": 1055, "api_type": 2, "full_declaration": "AnnotatedBeanDefinitionReader", "qualified_name": "org.springframework.context.annotation.AnnotatedBeanDefinitionReader", "short_description": " Convenient adapter for programmatic registration of bean classes. "},
{"api_id": 1056, "api_type": 2, "full_declaration": "AnnotationBeanNameGenerator", "qualified_name": "org.springframework.context.annotation.AnnotationBeanNameGenerator", "short_description": " BeanNameGenerator  implementation for bean classes annotated with the @Component  annotation or\nwith another annotation that is itself annotated with  @Component  as a\nmeta-annotation. "},
{"api_id": 1057, "api_type": 2, "full_declaration": "AnnotationConfigApplicationContext", "qualified_name": "org.springframework.context.annotation.AnnotationConfigApplicationContext", "short_description": " Standalone application context, accepting  component classes  as input \u2014\nin particular  @Configuration -annotated classes, but also plain @Component  types and JSR-330 compliant\nclasses using  javax.inject  annotations. "},
{"api_id": 1058, "api_type": 2, "full_declaration": "AnnotationConfigBeanDefinitionParser", "qualified_name": "org.springframework.context.annotation.AnnotationConfigBeanDefinitionParser", "short_description": " Parser for the <context:annotation-config/> element. "},
{"api_id": 1059, "api_type": 2, "full_declaration": "AnnotationConfigUtils", "qualified_name": "org.springframework.context.annotation.AnnotationConfigUtils", "short_description": " Utility class that allows for convenient registration of common BeanPostProcessor  and BeanFactoryPostProcessor definitions for annotation-based configuration. "},
{"api_id": 1060, "api_type": 2, "full_declaration": "AnnotationScopeMetadataResolver", "qualified_name": "org.springframework.context.annotation.AnnotationScopeMetadataResolver", "short_description": " A  ScopeMetadataResolver  implementation that by default checks for\nthe presence of Spring's  @Scope  annotation on the bean class. "},
{"api_id": 1061, "api_type": 2, "full_declaration": "AutoProxyRegistrar", "qualified_name": "org.springframework.context.annotation.AutoProxyRegistrar", "short_description": " Registers an auto proxy creator against the current  BeanDefinitionRegistry as appropriate based on an  @Enable*  annotation having  mode  and proxyTargetClass  attributes set to the correct values. "},
{"api_id": 1062, "api_type": 2, "full_declaration": "ClassPathBeanDefinitionScanner", "qualified_name": "org.springframework.context.annotation.ClassPathBeanDefinitionScanner", "short_description": " A bean definition scanner that detects bean candidates on the classpath,\nregistering corresponding bean definitions with a given registry ( BeanFactory or  ApplicationContext ). "},
{"api_id": 1063, "api_type": 2, "full_declaration": "ClassPathScanningCandidateComponentProvider", "qualified_name": "org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider", "short_description": " A component provider that provides candidate components from a base package. "},
{"api_id": 1064, "api_type": 2, "full_declaration": "CommonAnnotationBeanPostProcessor", "qualified_name": "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor", "short_description": " BeanPostProcessor  implementation\nthat supports common Java annotations out of the box, in particular the JSR-250\nannotations in the  javax.annotation  package. "},
{"api_id": 1065, "api_type": 2, "full_declaration": "CommonAnnotationBeanPostProcessor.LookupElement", "qualified_name": "org.springframework.context.annotation.CommonAnnotationBeanPostProcessor.LookupElement", "short_description": " Class representing generic injection information about an annotated field\nor setter method, supporting @Resource and related annotations. "},
{"api_id": 1066, "api_type": 2, "full_declaration": "ComponentScanBeanDefinitionParser", "qualified_name": "org.springframework.context.annotation.ComponentScanBeanDefinitionParser", "short_description": " Parser for the  <context:component-scan/>  element. "},
{"api_id": 1067, "api_type": 2, "full_declaration": "ConfigurationClassPostProcessor", "qualified_name": "org.springframework.context.annotation.ConfigurationClassPostProcessor", "short_description": " BeanFactoryPostProcessor  used for bootstrapping processing of @Configuration  classes. "},
{"api_id": 1068, "api_type": 2, "full_declaration": "ContextAnnotationAutowireCandidateResolver", "qualified_name": "org.springframework.context.annotation.ContextAnnotationAutowireCandidateResolver", "short_description": " Complete implementation of the AutowireCandidateResolver  strategy\ninterface, providing support for qualifier annotations as well as for lazy resolution\ndriven by the  Lazy  annotation in the  context.annotation  package. "},
{"api_id": 1069, "api_type": 2, "full_declaration": "DeferredImportSelector.Group.Entry", "qualified_name": "org.springframework.context.annotation.DeferredImportSelector.Group.Entry", "short_description": " An entry that holds the  AnnotationMetadata  of the importing Configuration  class and the class name to import. "},
{"api_id": 1070, "api_type": 2, "full_declaration": "FullyQualifiedAnnotationBeanNameGenerator", "qualified_name": "org.springframework.context.annotation.FullyQualifiedAnnotationBeanNameGenerator", "short_description": " An extension of  AnnotationBeanNameGenerator  that uses the fully qualified\nclass name as the default bean name if an explicit bean name is not supplied via\na supported type-level annotation such as  @Component  (see AnnotationBeanNameGenerator  for details on supported annotations). "},
{"api_id": 1071, "api_type": 2, "full_declaration": "Jsr330ScopeMetadataResolver", "qualified_name": "org.springframework.context.annotation.Jsr330ScopeMetadataResolver", "short_description": " Simple  ScopeMetadataResolver  implementation that follows JSR-330 scoping rules:\ndefaulting to prototype scope unless  Singleton  is present. "},
{"api_id": 1072, "api_type": 2, "full_declaration": "LoadTimeWeavingConfiguration", "qualified_name": "org.springframework.context.annotation.LoadTimeWeavingConfiguration", "short_description": " @Configuration  class that registers a  LoadTimeWeaver  bean. "},
{"api_id": 1073, "api_type": 2, "full_declaration": "MBeanExportConfiguration", "qualified_name": "org.springframework.context.annotation.MBeanExportConfiguration", "short_description": " @Configuration  class that registers a  AnnotationMBeanExporter  bean. "},
{"api_id": 1074, "api_type": 2, "full_declaration": "ScannedGenericBeanDefinition", "qualified_name": "org.springframework.context.annotation.ScannedGenericBeanDefinition", "short_description": " Extension of the  GenericBeanDefinition class, based on an ASM ClassReader, with support for annotation metadata exposed\nthrough the  AnnotatedBeanDefinition  interface. "},
{"api_id": 1075, "api_type": 2, "full_declaration": "ScopeMetadata", "qualified_name": "org.springframework.context.annotation.ScopeMetadata", "short_description": " Describes scope characteristics for a Spring-managed bean including the scope\nname and the scoped-proxy behavior. "},
{"api_id": 1076, "api_type": 8, "full_declaration": "AdviceMode", "qualified_name": "org.springframework.context.annotation.AdviceMode", "short_description": " Enumeration used to determine whether JDK proxy-based or\nAspectJ weaving-based advice should be applied. "},
{"api_id": 1077, "api_type": 8, "full_declaration": "ConfigurationCondition.ConfigurationPhase", "qualified_name": "org.springframework.context.annotation.ConfigurationCondition.ConfigurationPhase", "short_description": " The various configuration phases where the condition could be evaluated. "},
{"api_id": 1078, "api_type": 8, "full_declaration": "EnableLoadTimeWeaving.AspectJWeaving", "qualified_name": "org.springframework.context.annotation.EnableLoadTimeWeaving.AspectJWeaving", "short_description": " AspectJ weaving enablement options. "},
{"api_id": 1079, "api_type": 8, "full_declaration": "FilterType", "qualified_name": "org.springframework.context.annotation.FilterType", "short_description": " Enumeration of the type filters that may be used in conjunction with @ComponentScan . "},
{"api_id": 1080, "api_type": 8, "full_declaration": "MBeanExportConfiguration.SpecificPlatform", "qualified_name": "org.springframework.context.annotation.MBeanExportConfiguration.SpecificPlatform", "short_description": " Specific platforms that might need custom MBean handling. "},
{"api_id": 1081, "api_type": 8, "full_declaration": "ScopedProxyMode", "qualified_name": "org.springframework.context.annotation.ScopedProxyMode", "short_description": " Enumerates the various scoped-proxy options. "},
{"api_id": 1082, "api_type": 9, "full_declaration": "Bean", "qualified_name": "org.springframework.context.annotation.Bean", "short_description": " Indicates that a method produces a bean to be managed by the Spring container. "},
{"api_id": 1083, "api_type": 9, "full_declaration": "ComponentScan", "qualified_name": "org.springframework.context.annotation.ComponentScan", "short_description": " Configures component scanning directives for use with @ Configuration  classes. "},
{"api_id": 1084, "api_type": 9, "full_declaration": "ComponentScan.Filter", "qualified_name": "org.springframework.context.annotation.ComponentScan.Filter", "short_description": " Declares the type filter to be used as an  include filter  or  exclude filter . "},
{"api_id": 1085, "api_type": 9, "full_declaration": "ComponentScans", "qualified_name": "org.springframework.context.annotation.ComponentScans", "short_description": " Container annotation that aggregates several  ComponentScan  annotations. "},
{"api_id": 1086, "api_type": 9, "full_declaration": "Conditional", "qualified_name": "org.springframework.context.annotation.Conditional", "short_description": " Indicates that a component is only eligible for registration when all specified conditions  match. "},
{"api_id": 1087, "api_type": 9, "full_declaration": "Configuration", "qualified_name": "org.springframework.context.annotation.Configuration", "short_description": " Indicates that a class declares one or more  @Bean  methods and\nmay be processed by the Spring container to generate bean definitions and\nservice requests for those beans at runtime, for example:  @Configuration\n public class AppConfig {\n\n     @Bean\n     public MyBean myBean() {\n         // instantiate, configure and return bean ... "},
{"api_id": 1088, "api_type": 9, "full_declaration": "DependsOn", "qualified_name": "org.springframework.context.annotation.DependsOn", "short_description": " Beans on which the current bean depends. "},
{"api_id": 1089, "api_type": 9, "full_declaration": "Description", "qualified_name": "org.springframework.context.annotation.Description", "short_description": " Adds a textual description to bean definitions derived from\n  Component  or  Bean . "},
{"api_id": 1090, "api_type": 9, "full_declaration": "EnableAspectJAutoProxy", "qualified_name": "org.springframework.context.annotation.EnableAspectJAutoProxy", "short_description": " Enables support for handling components marked with AspectJ's  @Aspect  annotation,\n similar to functionality found in Spring's  <aop:aspectj-autoproxy>  XML element. "},
{"api_id": 1091, "api_type": 9, "full_declaration": "EnableLoadTimeWeaving", "qualified_name": "org.springframework.context.annotation.EnableLoadTimeWeaving", "short_description": " Activates a Spring  LoadTimeWeaver  for this application context, available as\n a bean with the name \"loadTimeWeaver\", similar to the  <context:load-time-weaver>  element in Spring XML. "},
{"api_id": 1092, "api_type": 9, "full_declaration": "EnableMBeanExport", "qualified_name": "org.springframework.context.annotation.EnableMBeanExport", "short_description": " Enables default exporting of all standard  MBean s from the Spring context, as\n well as well all  @ManagedResource  annotated beans. "},
{"api_id": 1093, "api_type": 9, "full_declaration": "Import", "qualified_name": "org.springframework.context.annotation.Import", "short_description": " Indicates one or more  component classes  to import \u2014 typically\n  @Configuration  classes. "},
{"api_id": 1094, "api_type": 9, "full_declaration": "ImportResource", "qualified_name": "org.springframework.context.annotation.ImportResource", "short_description": " Indicates one or more resources containing bean definitions to import. "},
{"api_id": 1095, "api_type": 9, "full_declaration": "Lazy", "qualified_name": "org.springframework.context.annotation.Lazy", "short_description": " Indicates whether a bean is to be lazily initialized. "},
{"api_id": 1096, "api_type": 9, "full_declaration": "Primary", "qualified_name": "org.springframework.context.annotation.Primary", "short_description": " Indicates that a bean should be given preference when multiple candidates\n are qualified to autowire a single-valued dependency. "},
{"api_id": 1097, "api_type": 9, "full_declaration": "Profile", "qualified_name": "org.springframework.context.annotation.Profile", "short_description": " Indicates that a component is eligible for registration when one or more\n  specified profiles  are active. "},
{"api_id": 1098, "api_type": 9, "full_declaration": "PropertySource", "qualified_name": "org.springframework.context.annotation.PropertySource", "short_description": " Annotation providing a convenient and declarative mechanism for adding a\n  PropertySource  to Spring's\n  Environment . "},
{"api_id": 1099, "api_type": 9, "full_declaration": "PropertySources", "qualified_name": "org.springframework.context.annotation.PropertySources", "short_description": " Container annotation that aggregates several  PropertySource  annotations. "},
{"api_id": 1100, "api_type": 9, "full_declaration": "Role", "qualified_name": "org.springframework.context.annotation.Role", "short_description": " Indicates the 'role' hint for a given bean. "},
{"api_id": 1101, "api_type": 9, "full_declaration": "Scope", "qualified_name": "org.springframework.context.annotation.Scope", "short_description": " When used as a type-level annotation in conjunction with\n  @Component ,\n  @Scope  indicates the name of a scope to use for instances of\n the annotated type. "},
{"api_id": 1102, "api_type": 2, "full_declaration": "SpringConfiguredConfiguration", "qualified_name": "org.springframework.context.annotation.aspectj.SpringConfiguredConfiguration", "short_description": " @Configuration  class that registers an  AnnotationBeanConfigurerAspect capable of performing dependency injection services for non-Spring managed objects\nannotated with @ Configurable . "},
{"api_id": 1103, "api_type": 9, "full_declaration": "EnableSpringConfigured", "qualified_name": "org.springframework.context.annotation.aspectj.EnableSpringConfigured", "short_description": " Signals the current application context to apply dependency injection to\nnon-managed classes that are instantiated outside of the Spring bean factory\n(typically classes annotated with the @Configurable annotation). "},
{"api_id": 1104, "api_type": 2, "full_declaration": "ContextNamespaceHandler", "qualified_name": "org.springframework.context.config.ContextNamespaceHandler", "short_description": " NamespaceHandler for the ' context ' namespace. "},
{"api_id": 1105, "api_type": 3, "full_declaration": "ApplicationEventMulticaster", "qualified_name": "org.springframework.context.event.ApplicationEventMulticaster", "short_description": " Interface to be implemented by objects that can manage a number of ApplicationListener  objects and publish events to them. "},
{"api_id": 1106, "api_type": 3, "full_declaration": "EventListenerFactory", "qualified_name": "org.springframework.context.event.EventListenerFactory", "short_description": " Strategy interface for creating  ApplicationListener  for methods\nannotated with  EventListener . "},
{"api_id": 1107, "api_type": 3, "full_declaration": "GenericApplicationListener", "qualified_name": "org.springframework.context.event.GenericApplicationListener", "short_description": " Extended variant of the standard  ApplicationListener  interface,\nexposing further metadata such as the supported event and source type. "},
{"api_id": 1108, "api_type": 3, "full_declaration": "SmartApplicationListener", "qualified_name": "org.springframework.context.event.SmartApplicationListener", "short_description": " Extended variant of the standard  ApplicationListener  interface,\nexposing further metadata such as the supported event and source type. "},
{"api_id": 1109, "api_type": 2, "full_declaration": "AbstractApplicationEventMulticaster", "qualified_name": "org.springframework.context.event.AbstractApplicationEventMulticaster", "short_description": " Abstract implementation of the  ApplicationEventMulticaster  interface,\nproviding the basic listener registration facility. "},
{"api_id": 1110, "api_type": 2, "full_declaration": "ApplicationContextEvent", "qualified_name": "org.springframework.context.event.ApplicationContextEvent", "short_description": " Base class for events raised for an  ApplicationContext . "},
{"api_id": 1111, "api_type": 2, "full_declaration": "ApplicationListenerMethodAdapter", "qualified_name": "org.springframework.context.event.ApplicationListenerMethodAdapter", "short_description": " GenericApplicationListener  adapter that delegates the processing of\nan event to an  EventListener  annotated method. "},
{"api_id": 1112, "api_type": 2, "full_declaration": "ContextClosedEvent", "qualified_name": "org.springframework.context.event.ContextClosedEvent", "short_description": " Event raised when an  ApplicationContext  gets closed. "},
{"api_id": 1113, "api_type": 2, "full_declaration": "ContextRefreshedEvent", "qualified_name": "org.springframework.context.event.ContextRefreshedEvent", "short_description": " Event raised when an  ApplicationContext  gets initialized or refreshed. "},
{"api_id": 1114, "api_type": 2, "full_declaration": "ContextStartedEvent", "qualified_name": "org.springframework.context.event.ContextStartedEvent", "short_description": " Event raised when an  ApplicationContext  gets started. "},
{"api_id": 1115, "api_type": 2, "full_declaration": "ContextStoppedEvent", "qualified_name": "org.springframework.context.event.ContextStoppedEvent", "short_description": " Event raised when an  ApplicationContext  gets stopped. "},
{"api_id": 1116, "api_type": 2, "full_declaration": "DefaultEventListenerFactory", "qualified_name": "org.springframework.context.event.DefaultEventListenerFactory", "short_description": " Default  EventListenerFactory  implementation that supports the\nregular  EventListener  annotation. "},
{"api_id": 1117, "api_type": 2, "full_declaration": "EventListenerMethodProcessor", "qualified_name": "org.springframework.context.event.EventListenerMethodProcessor", "short_description": " Registers  EventListener  methods as individual  ApplicationListener  instances. "},
{"api_id": 1118, "api_type": 2, "full_declaration": "EventPublicationInterceptor", "qualified_name": "org.springframework.context.event.EventPublicationInterceptor", "short_description": " Interceptor  that publishes an ApplicationEvent  to all  ApplicationListeners registered with an  ApplicationEventPublisher  after each successful  method invocation. "},
{"api_id": 1119, "api_type": 2, "full_declaration": "GenericApplicationListenerAdapter", "qualified_name": "org.springframework.context.event.GenericApplicationListenerAdapter", "short_description": " GenericApplicationListener  adapter that determines supported event types\nthrough introspecting the generically declared type of the target listener. "},
{"api_id": 1120, "api_type": 2, "full_declaration": "SimpleApplicationEventMulticaster", "qualified_name": "org.springframework.context.event.SimpleApplicationEventMulticaster", "short_description": " Simple implementation of the  ApplicationEventMulticaster  interface. "},
{"api_id": 1121, "api_type": 2, "full_declaration": "SourceFilteringListener", "qualified_name": "org.springframework.context.event.SourceFilteringListener", "short_description": " ApplicationListener  decorator that filters\nevents from a specified event source, invoking its delegate listener for\nmatching  ApplicationEvent  objects only. "},
{"api_id": 1122, "api_type": 9, "full_declaration": "EventListener", "qualified_name": "org.springframework.context.event.EventListener", "short_description": " Annotation that marks a method as a listener for application events. "},
{"api_id": 1123, "api_type": 2, "full_declaration": "AnnotatedElementKey", "qualified_name": "org.springframework.context.expression.AnnotatedElementKey", "short_description": " Represent an  AnnotatedElement  on a particular  Class and is suitable as a key. "},
{"api_id": 1124, "api_type": 2, "full_declaration": "BeanExpressionContextAccessor", "qualified_name": "org.springframework.context.expression.BeanExpressionContextAccessor", "short_description": " EL property accessor that knows how to traverse the beans and contextual objects\nof a Spring  BeanExpressionContext . "},
{"api_id": 1125, "api_type": 2, "full_declaration": "BeanFactoryAccessor", "qualified_name": "org.springframework.context.expression.BeanFactoryAccessor", "short_description": " EL property accessor that knows how to traverse the beans of a\nSpring  BeanFactory . "},
{"api_id": 1126, "api_type": 2, "full_declaration": "BeanFactoryResolver", "qualified_name": "org.springframework.context.expression.BeanFactoryResolver", "short_description": " EL bean resolver that operates against a Spring BeanFactory . "},
{"api_id": 1127, "api_type": 2, "full_declaration": "CachedExpressionEvaluator", "qualified_name": "org.springframework.context.expression.CachedExpressionEvaluator", "short_description": " Shared utility class used to evaluate and cache SpEL expressions that\nare defined on  AnnotatedElement . "},
{"api_id": 1128, "api_type": 2, "full_declaration": "CachedExpressionEvaluator.ExpressionKey", "qualified_name": "org.springframework.context.expression.CachedExpressionEvaluator.ExpressionKey", "short_description": " An expression key. "},
{"api_id": 1129, "api_type": 2, "full_declaration": "EnvironmentAccessor", "qualified_name": "org.springframework.context.expression.EnvironmentAccessor", "short_description": " Read-only EL property accessor that knows how to retrieve keys\nof a Spring  Environment  instance. "},
{"api_id": 1130, "api_type": 2, "full_declaration": "MapAccessor", "qualified_name": "org.springframework.context.expression.MapAccessor", "short_description": " EL property accessor that knows how to traverse the keys\nof a standard  Map . "},
{"api_id": 1131, "api_type": 2, "full_declaration": "MethodBasedEvaluationContext", "qualified_name": "org.springframework.context.expression.MethodBasedEvaluationContext", "short_description": " A method-based  EvaluationContext  that\nprovides explicit support for method-based invocations. "},
{"api_id": 1132, "api_type": 2, "full_declaration": "StandardBeanExpressionResolver", "qualified_name": "org.springframework.context.expression.StandardBeanExpressionResolver", "short_description": " Standard implementation of the BeanExpressionResolver interface, parsing and evaluating Spring EL using Spring's expression module. "},
{"api_id": 1133, "api_type": 3, "full_declaration": "LocaleContext", "qualified_name": "org.springframework.context.i18n.LocaleContext", "short_description": " Strategy interface for determining the current Locale. "},
{"api_id": 1134, "api_type": 3, "full_declaration": "TimeZoneAwareLocaleContext", "qualified_name": "org.springframework.context.i18n.TimeZoneAwareLocaleContext", "short_description": " Extension of  LocaleContext , adding awareness of the current time zone. "},
{"api_id": 1135, "api_type": 2, "full_declaration": "LocaleContextHolder", "qualified_name": "org.springframework.context.i18n.LocaleContextHolder", "short_description": " Simple holder class that associates a LocaleContext instance\nwith the current thread. "},
{"api_id": 1136, "api_type": 2, "full_declaration": "SimpleLocaleContext", "qualified_name": "org.springframework.context.i18n.SimpleLocaleContext", "short_description": " Simple implementation of the  LocaleContext  interface,\nalways returning a specified  Locale . "},
{"api_id": 1137, "api_type": 2, "full_declaration": "SimpleTimeZoneAwareLocaleContext", "qualified_name": "org.springframework.context.i18n.SimpleTimeZoneAwareLocaleContext", "short_description": " Simple implementation of the  TimeZoneAwareLocaleContext  interface,\nalways returning a specified  Locale  and  TimeZone . "},
{"api_id": 1138, "api_type": 2, "full_declaration": "CandidateComponentsIndex", "qualified_name": "org.springframework.context.index.CandidateComponentsIndex", "short_description": " Provide access to the candidates that are defined in  META-INF/spring.components . "},
{"api_id": 1139, "api_type": 2, "full_declaration": "CandidateComponentsIndexLoader", "qualified_name": "org.springframework.context.index.CandidateComponentsIndexLoader", "short_description": " Candidate components index loading mechanism for internal use within the framework. "},
{"api_id": 1140, "api_type": 2, "full_declaration": "CandidateComponentsIndexer", "qualified_name": "org.springframework.context.index.processor.CandidateComponentsIndexer", "short_description": " Annotation  Processor  that writes  CandidateComponentsMetadata file for spring components. "},
{"api_id": 1141, "api_type": 3, "full_declaration": "LiveBeansViewMBean", "qualified_name": "org.springframework.context.support.LiveBeansViewMBean", "short_description": "Deprecated as of 5.3, in favor of using Spring Boot actuators for such needs "},
{"api_id": 1142, "api_type": 2, "full_declaration": "AbstractApplicationContext", "qualified_name": "org.springframework.context.support.AbstractApplicationContext", "short_description": " Abstract implementation of the  ApplicationContext interface. "},
{"api_id": 1143, "api_type": 2, "full_declaration": "AbstractMessageSource", "qualified_name": "org.springframework.context.support.AbstractMessageSource", "short_description": " Abstract implementation of the  HierarchicalMessageSource  interface,\nimplementing common handling of message variants, making it easy\nto implement a specific strategy for a concrete MessageSource. "},
{"api_id": 1144, "api_type": 2, "full_declaration": "AbstractRefreshableApplicationContext", "qualified_name": "org.springframework.context.support.AbstractRefreshableApplicationContext", "short_description": " Base class for  ApplicationContext implementations which are supposed to support multiple calls to  AbstractApplicationContext.refresh() ,\ncreating a new internal bean factory instance every time. "},
{"api_id": 1145, "api_type": 2, "full_declaration": "AbstractRefreshableConfigApplicationContext", "qualified_name": "org.springframework.context.support.AbstractRefreshableConfigApplicationContext", "short_description": " AbstractRefreshableApplicationContext  subclass that adds common handling\nof specified config locations. "},
{"api_id": 1146, "api_type": 2, "full_declaration": "AbstractResourceBasedMessageSource", "qualified_name": "org.springframework.context.support.AbstractResourceBasedMessageSource", "short_description": " Abstract base class for  MessageSource  implementations based on\nresource bundle conventions, such as  ResourceBundleMessageSource and  ReloadableResourceBundleMessageSource . "},
{"api_id": 1147, "api_type": 2, "full_declaration": "AbstractXmlApplicationContext", "qualified_name": "org.springframework.context.support.AbstractXmlApplicationContext", "short_description": " Convenient base class for  ApplicationContext implementations, drawing configuration from XML documents containing bean definitions\nunderstood by an  XmlBeanDefinitionReader . "},
{"api_id": 1148, "api_type": 2, "full_declaration": "ApplicationObjectSupport", "qualified_name": "org.springframework.context.support.ApplicationObjectSupport", "short_description": " Convenient superclass for application objects that want to be aware of\nthe application context, e.g. "},
{"api_id": 1149, "api_type": 2, "full_declaration": "ClassPathXmlApplicationContext", "qualified_name": "org.springframework.context.support.ClassPathXmlApplicationContext", "short_description": " Standalone XML application context, taking the context definition files\nfrom the class path, interpreting plain paths as class path resource names\nthat include the package path (e.g. "},
{"api_id": 1150, "api_type": 2, "full_declaration": "ConversionServiceFactoryBean", "qualified_name": "org.springframework.context.support.ConversionServiceFactoryBean", "short_description": " A factory providing convenient access to a ConversionService configured with\nconverters appropriate for most environments. "},
{"api_id": 1151, "api_type": 2, "full_declaration": "DefaultLifecycleProcessor", "qualified_name": "org.springframework.context.support.DefaultLifecycleProcessor", "short_description": " Default implementation of the  LifecycleProcessor  strategy. "},
{"api_id": 1152, "api_type": 2, "full_declaration": "DefaultMessageSourceResolvable", "qualified_name": "org.springframework.context.support.DefaultMessageSourceResolvable", "short_description": " Spring's default implementation of the  MessageSourceResolvable  interface. "},
{"api_id": 1153, "api_type": 2, "full_declaration": "DelegatingMessageSource", "qualified_name": "org.springframework.context.support.DelegatingMessageSource", "short_description": " Empty  MessageSource  that delegates all calls to the parent MessageSource. "},
{"api_id": 1154, "api_type": 2, "full_declaration": "EmbeddedValueResolutionSupport", "qualified_name": "org.springframework.context.support.EmbeddedValueResolutionSupport", "short_description": " Convenient base class for components with a need for embedded value resolution\n(i.e. "},
{"api_id": 1155, "api_type": 2, "full_declaration": "FileSystemXmlApplicationContext", "qualified_name": "org.springframework.context.support.FileSystemXmlApplicationContext", "short_description": " Standalone XML application context, taking the context definition files\nfrom the file system or from URLs, interpreting plain paths as relative\nfile system locations (e.g. "},
{"api_id": 1156, "api_type": 2, "full_declaration": "GenericApplicationContext", "qualified_name": "org.springframework.context.support.GenericApplicationContext", "short_description": " Generic ApplicationContext implementation that holds a single internal DefaultListableBeanFactory instance and does not assume a specific bean definition format. "},
{"api_id": 1157, "api_type": 2, "full_declaration": "GenericGroovyApplicationContext", "qualified_name": "org.springframework.context.support.GenericGroovyApplicationContext", "short_description": " An  ApplicationContext  implementation that extends GenericApplicationContext  and implements  GroovyObject  such that beans\ncan be retrieved with the dot de-reference syntax instead of using  AbstractApplicationContext.getBean(java.lang.String) . "},
{"api_id": 1158, "api_type": 2, "full_declaration": "GenericXmlApplicationContext", "qualified_name": "org.springframework.context.support.GenericXmlApplicationContext", "short_description": " Convenient application context with built-in XML support. "},
{"api_id": 1159, "api_type": 2, "full_declaration": "LiveBeansView", "qualified_name": "org.springframework.context.support.LiveBeansView", "short_description": "Deprecated as of 5.3, in favor of using Spring Boot actuators for such needs "},
{"api_id": 1160, "api_type": 2, "full_declaration": "MessageSourceAccessor", "qualified_name": "org.springframework.context.support.MessageSourceAccessor", "short_description": " Helper class for easy access to messages from a MessageSource,\nproviding various overloaded getMessage methods. "},
{"api_id": 1161, "api_type": 2, "full_declaration": "MessageSourceResourceBundle", "qualified_name": "org.springframework.context.support.MessageSourceResourceBundle", "short_description": " Helper class that allows for accessing a Spring MessageSource  as a  ResourceBundle . "},
{"api_id": 1162, "api_type": 2, "full_declaration": "MessageSourceSupport", "qualified_name": "org.springframework.context.support.MessageSourceSupport", "short_description": " Base class for message source implementations, providing support infrastructure\nsuch as  MessageFormat  handling but not implementing concrete\nmethods defined in the  MessageSource . "},
{"api_id": 1163, "api_type": 2, "full_declaration": "PropertySourcesPlaceholderConfigurer", "qualified_name": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer", "short_description": " Specialization of  PlaceholderConfigurerSupport  that resolves ${...} placeholders\nwithin bean definition property values and  @Value  annotations against the current\nSpring  Environment  and its set of  PropertySources . "},
{"api_id": 1164, "api_type": 2, "full_declaration": "ReloadableResourceBundleMessageSource", "qualified_name": "org.springframework.context.support.ReloadableResourceBundleMessageSource", "short_description": " Spring-specific  MessageSource  implementation\nthat accesses resource bundles using specified basenames, participating in the\nSpring  ApplicationContext 's resource loading. "},
{"api_id": 1165, "api_type": 2, "full_declaration": "ResourceBundleMessageSource", "qualified_name": "org.springframework.context.support.ResourceBundleMessageSource", "short_description": " MessageSource  implementation that\naccesses resource bundles using specified basenames. "},
{"api_id": 1166, "api_type": 2, "full_declaration": "SimpleThreadScope", "qualified_name": "org.springframework.context.support.SimpleThreadScope", "short_description": " A simple thread-backed  Scope  implementation. "},
{"api_id": 1167, "api_type": 2, "full_declaration": "StaticApplicationContext", "qualified_name": "org.springframework.context.support.StaticApplicationContext", "short_description": " ApplicationContext  implementation\nwhich supports programmatic registration of beans and messages,\nrather than reading bean definitions from external configuration sources. "},
{"api_id": 1168, "api_type": 2, "full_declaration": "StaticMessageSource", "qualified_name": "org.springframework.context.support.StaticMessageSource", "short_description": " Simple implementation of  MessageSource which allows messages to be registered programmatically. "},
{"api_id": 1169, "api_type": 3, "full_declaration": "LoadTimeWeaverAware", "qualified_name": "org.springframework.context.weaving.LoadTimeWeaverAware", "short_description": " Interface to be implemented by any object that wishes to be notified\nof the application context's default  LoadTimeWeaver . "},
{"api_id": 1170, "api_type": 2, "full_declaration": "AspectJWeavingEnabler", "qualified_name": "org.springframework.context.weaving.AspectJWeavingEnabler", "short_description": " Post-processor that registers AspectJ's ClassPreProcessorAgentAdapter with the Spring application context's default LoadTimeWeaver . "},
{"api_id": 1171, "api_type": 2, "full_declaration": "DefaultContextLoadTimeWeaver", "qualified_name": "org.springframework.context.weaving.DefaultContextLoadTimeWeaver", "short_description": " Default  LoadTimeWeaver  bean for use in an application context,\ndecorating an automatically detected internal  LoadTimeWeaver . "},
{"api_id": 1172, "api_type": 2, "full_declaration": "LoadTimeWeaverAwareProcessor", "qualified_name": "org.springframework.context.weaving.LoadTimeWeaverAwareProcessor", "short_description": " BeanPostProcessor implementation that passes the context's default  LoadTimeWeaver to beans that implement the  LoadTimeWeaverAware  interface. "},
{"api_id": 1173, "api_type": 3, "full_declaration": "AliasRegistry", "qualified_name": "org.springframework.core.AliasRegistry", "short_description": " Common interface for managing aliases. "},
{"api_id": 1174, "api_type": 3, "full_declaration": "AttributeAccessor", "qualified_name": "org.springframework.core.AttributeAccessor", "short_description": " Interface defining a generic contract for attaching and accessing metadata\nto/from arbitrary objects. "},
{"api_id": 1175, "api_type": 3, "full_declaration": "DecoratingProxy", "qualified_name": "org.springframework.core.DecoratingProxy", "short_description": " Interface to be implemented by decorating proxies, in particular Spring AOP\nproxies but potentially also custom proxies with decorator semantics. "},
{"api_id": 1176, "api_type": 3, "full_declaration": "InfrastructureProxy", "qualified_name": "org.springframework.core.InfrastructureProxy", "short_description": " Interface to be implemented by transparent resource proxies that need to be\nconsidered as equal to the underlying resource, for example for consistent\nlookup key comparisons. "},
{"api_id": 1177, "api_type": 3, "full_declaration": "MethodIntrospector.MetadataLookup", "qualified_name": "org.springframework.core.MethodIntrospector.MetadataLookup", "short_description": " A callback interface for metadata lookup on a given method. "},
{"api_id": 1178, "api_type": 3, "full_declaration": "OrderComparator.OrderSourceProvider", "qualified_name": "org.springframework.core.OrderComparator.OrderSourceProvider", "short_description": " Strategy interface to provide an order source for a given object. "},
{"api_id": 1179, "api_type": 3, "full_declaration": "Ordered", "qualified_name": "org.springframework.core.Ordered", "short_description": " Ordered  is an interface that can be implemented by objects that\nshould be  orderable , for example in a  Collection . "},
{"api_id": 1180, "api_type": 3, "full_declaration": "ParameterNameDiscoverer", "qualified_name": "org.springframework.core.ParameterNameDiscoverer", "short_description": " Interface to discover parameter names for methods and constructors. "},
{"api_id": 1181, "api_type": 3, "full_declaration": "PriorityOrdered", "qualified_name": "org.springframework.core.PriorityOrdered", "short_description": " Extension of the  Ordered  interface, expressing a  priority ordering:  PriorityOrdered  objects are always applied before plain   Ordered  objects regardless of their order values. "},
{"api_id": 1182, "api_type": 3, "full_declaration": "ResolvableTypeProvider", "qualified_name": "org.springframework.core.ResolvableTypeProvider", "short_description": " Any object can implement this interface to provide its actual  ResolvableType . "},
{"api_id": 1183, "api_type": 3, "full_declaration": "SmartClassLoader", "qualified_name": "org.springframework.core.SmartClassLoader", "short_description": " Interface to be implemented by a reloading-aware ClassLoader\n(e.g. "},
{"api_id": 1184, "api_type": 2, "full_declaration": "AttributeAccessorSupport", "qualified_name": "org.springframework.core.AttributeAccessorSupport", "short_description": " Support class for  AttributeAccessors , providing\na base implementation of all methods. "},
{"api_id": 1185, "api_type": 2, "full_declaration": "BridgeMethodResolver", "qualified_name": "org.springframework.core.BridgeMethodResolver", "short_description": " Helper for resolving synthetic  bridge Methods  to the Method  being bridged. "},
{"api_id": 1186, "api_type": 2, "full_declaration": "CollectionFactory", "qualified_name": "org.springframework.core.CollectionFactory", "short_description": " Factory for collections that is aware of common Java and Spring collection types. "},
{"api_id": 1187, "api_type": 2, "full_declaration": "ConfigurableObjectInputStream", "qualified_name": "org.springframework.core.ConfigurableObjectInputStream", "short_description": " Special ObjectInputStream subclass that resolves class names\nagainst a specific ClassLoader. "},
{"api_id": 1188, "api_type": 2, "full_declaration": "Constants", "qualified_name": "org.springframework.core.Constants", "short_description": " This class can be used to parse other classes containing constant definitions\nin public static final members. "},
{"api_id": 1189, "api_type": 2, "full_declaration": "Conventions", "qualified_name": "org.springframework.core.Conventions", "short_description": " Provides methods to support various naming and other conventions used\nthroughout the framework. "},
{"api_id": 1190, "api_type": 2, "full_declaration": "DecoratingClassLoader", "qualified_name": "org.springframework.core.DecoratingClassLoader", "short_description": " Base class for decorating ClassLoaders such as  OverridingClassLoader and  ShadowingClassLoader ,\nproviding common handling of excluded packages and classes. "},
{"api_id": 1191, "api_type": 2, "full_declaration": "DefaultParameterNameDiscoverer", "qualified_name": "org.springframework.core.DefaultParameterNameDiscoverer", "short_description": " Default implementation of the  ParameterNameDiscoverer  strategy interface,\nusing the Java 8 standard reflection mechanism (if available), and falling back\nto the ASM-based  LocalVariableTableParameterNameDiscoverer  for checking\ndebug information in the class file. "},
{"api_id": 1192, "api_type": 2, "full_declaration": "ExceptionDepthComparator", "qualified_name": "org.springframework.core.ExceptionDepthComparator", "short_description": " Comparator capable of sorting exceptions based on their depth from the thrown exception type. "},
{"api_id": 1193, "api_type": 2, "full_declaration": "GenericTypeResolver", "qualified_name": "org.springframework.core.GenericTypeResolver", "short_description": " Helper class for resolving generic types against type variables. "},
{"api_id": 1194, "api_type": 2, "full_declaration": "KotlinDetector", "qualified_name": "org.springframework.core.KotlinDetector", "short_description": " A common delegate for detecting Kotlin's presence and for identifying Kotlin types. "},
{"api_id": 1195, "api_type": 2, "full_declaration": "KotlinReflectionParameterNameDiscoverer", "qualified_name": "org.springframework.core.KotlinReflectionParameterNameDiscoverer", "short_description": " ParameterNameDiscoverer  implementation which uses Kotlin's reflection facilities\nfor introspecting parameter names. "},
{"api_id": 1196, "api_type": 2, "full_declaration": "LocalVariableTableParameterNameDiscoverer", "qualified_name": "org.springframework.core.LocalVariableTableParameterNameDiscoverer", "short_description": " Implementation of  ParameterNameDiscoverer  that uses the LocalVariableTable\ninformation in the method attributes to discover parameter names. "},
{"api_id": 1197, "api_type": 2, "full_declaration": "MethodClassKey", "qualified_name": "org.springframework.core.MethodClassKey", "short_description": " A common key class for a method against a specific target class,\nincluding  MethodClassKey.toString()  representation and  Comparable support (as suggested for custom  HashMap  keys as of Java 8). "},
{"api_id": 1198, "api_type": 2, "full_declaration": "MethodIntrospector", "qualified_name": "org.springframework.core.MethodIntrospector", "short_description": " Defines the algorithm for searching for metadata-associated methods exhaustively\nincluding interfaces and parent classes while also dealing with parameterized methods\nas well as common scenarios encountered with interface and class-based proxies. "},
{"api_id": 1199, "api_type": 2, "full_declaration": "MethodParameter", "qualified_name": "org.springframework.core.MethodParameter", "short_description": " Helper class that encapsulates the specification of a method parameter, i.e. "},
{"api_id": 1200, "api_type": 2, "full_declaration": "NamedInheritableThreadLocal", "qualified_name": "org.springframework.core.NamedInheritableThreadLocal", "short_description": " InheritableThreadLocal  subclass that exposes a specified name\nas  NamedInheritableThreadLocal.toString()  result (allowing for introspection). "},
{"api_id": 1201, "api_type": 2, "full_declaration": "NamedThreadLocal", "qualified_name": "org.springframework.core.NamedThreadLocal", "short_description": " ThreadLocal  subclass that exposes a specified name\nas  NamedThreadLocal.toString()  result (allowing for introspection). "},
{"api_id": 1202, "api_type": 2, "full_declaration": "NestedExceptionUtils", "qualified_name": "org.springframework.core.NestedExceptionUtils", "short_description": " Helper class for implementing exception classes which are capable of\nholding nested exceptions. "},
{"api_id": 1203, "api_type": 2, "full_declaration": "OrderComparator", "qualified_name": "org.springframework.core.OrderComparator", "short_description": " Comparator  implementation for  Ordered  objects, sorting\nby order value ascending, respectively by priority descending. "},
{"api_id": 1204, "api_type": 2, "full_declaration": "OverridingClassLoader", "qualified_name": "org.springframework.core.OverridingClassLoader", "short_description": " ClassLoader  that does  not  always delegate to the parent loader\nas normal class loaders do. "},
{"api_id": 1205, "api_type": 2, "full_declaration": "ParameterizedTypeReference", "qualified_name": "org.springframework.core.ParameterizedTypeReference", "short_description": " The purpose of this class is to enable capturing and passing a generic Type . "},
{"api_id": 1206, "api_type": 2, "full_declaration": "PrioritizedParameterNameDiscoverer", "qualified_name": "org.springframework.core.PrioritizedParameterNameDiscoverer", "short_description": " ParameterNameDiscoverer  implementation that tries several discoverer\ndelegates in succession. "},
{"api_id": 1207, "api_type": 2, "full_declaration": "ReactiveAdapter", "qualified_name": "org.springframework.core.ReactiveAdapter", "short_description": " Adapter for a Reactive Streams  Publisher  to and from an async/reactive\ntype such as  CompletableFuture , RxJava  Observable , and others. "},
{"api_id": 1208, "api_type": 2, "full_declaration": "ReactiveAdapterRegistry", "qualified_name": "org.springframework.core.ReactiveAdapterRegistry", "short_description": " A registry of adapters to adapt Reactive Streams  Publisher  to/from\nvarious async/reactive types such as  CompletableFuture , RxJava Observable , and others. "},
{"api_id": 1209, "api_type": 2, "full_declaration": "ReactiveAdapterRegistry.SpringCoreBlockHoundIntegration", "qualified_name": "org.springframework.core.ReactiveAdapterRegistry.SpringCoreBlockHoundIntegration", "short_description": " BlockHoundIntegration  for spring-core classes. "},
{"api_id": 1210, "api_type": 2, "full_declaration": "ReactiveTypeDescriptor", "qualified_name": "org.springframework.core.ReactiveTypeDescriptor", "short_description": " Describes the semantics of a reactive type including boolean checks for ReactiveTypeDescriptor.isMultiValue() ,  ReactiveTypeDescriptor.isNoValue() , and  ReactiveTypeDescriptor.supportsEmpty() . "},
{"api_id": 1211, "api_type": 2, "full_declaration": "ResolvableType", "qualified_name": "org.springframework.core.ResolvableType", "short_description": " Encapsulates a Java  Type , providing access to supertypes ,  interfaces , and generic parameters  along with the ability to ultimately resolve  to a  Class . "},
{"api_id": 1212, "api_type": 2, "full_declaration": "SimpleAliasRegistry", "qualified_name": "org.springframework.core.SimpleAliasRegistry", "short_description": " Simple implementation of the  AliasRegistry  interface. "},
{"api_id": 1213, "api_type": 2, "full_declaration": "SpringProperties", "qualified_name": "org.springframework.core.SpringProperties", "short_description": " Static holder for local Spring properties, i.e. "},
{"api_id": 1214, "api_type": 2, "full_declaration": "SpringVersion", "qualified_name": "org.springframework.core.SpringVersion", "short_description": " Class that exposes the Spring version. "},
{"api_id": 1215, "api_type": 2, "full_declaration": "StandardReflectionParameterNameDiscoverer", "qualified_name": "org.springframework.core.StandardReflectionParameterNameDiscoverer", "short_description": " ParameterNameDiscoverer  implementation which uses JDK 8's reflection facilities\nfor introspecting parameter names (based on the \"-parameters\" compiler flag). "},
{"api_id": 1216, "api_type": 4, "full_declaration": "Constants.ConstantException", "qualified_name": "org.springframework.core.Constants.ConstantException", "short_description": " Exception thrown when the  Constants  class is asked for\nan invalid constant name. "},
{"api_id": 1217, "api_type": 4, "full_declaration": "NestedCheckedException", "qualified_name": "org.springframework.core.NestedCheckedException", "short_description": " Handy class for wrapping checked  Exceptions  with a root cause. "},
{"api_id": 1218, "api_type": 4, "full_declaration": "NestedIOException", "qualified_name": "org.springframework.core.NestedIOException", "short_description": " Subclass of  IOException  that properly handles a root cause,\nexposing the root cause just like NestedChecked/RuntimeException does. "},
{"api_id": 1219, "api_type": 4, "full_declaration": "NestedRuntimeException", "qualified_name": "org.springframework.core.NestedRuntimeException", "short_description": " Handy class for wrapping runtime  Exceptions  with a root cause. "},
{"api_id": 1220, "api_type": 3, "full_declaration": "AnnotationFilter", "qualified_name": "org.springframework.core.annotation.AnnotationFilter", "short_description": " Callback interface that can be used to filter specific annotation types. "},
{"api_id": 1221, "api_type": 3, "full_declaration": "MergedAnnotation", "qualified_name": "org.springframework.core.annotation.MergedAnnotation", "short_description": " A single merged annotation returned from a  MergedAnnotations collection. "},
{"api_id": 1222, "api_type": 3, "full_declaration": "MergedAnnotations", "qualified_name": "org.springframework.core.annotation.MergedAnnotations", "short_description": " Provides access to a collection of merged annotations, usually obtained\nfrom a source such as a  Class  or  Method . "},
{"api_id": 1223, "api_type": 3, "full_declaration": "MergedAnnotationSelector", "qualified_name": "org.springframework.core.annotation.MergedAnnotationSelector", "short_description": " Strategy interface used to select between two  MergedAnnotation instances. "},
{"api_id": 1224, "api_type": 3, "full_declaration": "SynthesizedAnnotation", "qualified_name": "org.springframework.core.annotation.SynthesizedAnnotation", "short_description": " Marker interface implemented by synthesized annotation proxies. "},
{"api_id": 1225, "api_type": 2, "full_declaration": "AnnotatedElementUtils", "qualified_name": "org.springframework.core.annotation.AnnotatedElementUtils", "short_description": " General utility methods for finding annotations, meta-annotations, and\nrepeatable annotations on  AnnotatedElements . "},
{"api_id": 1226, "api_type": 2, "full_declaration": "AnnotationAttributes", "qualified_name": "org.springframework.core.annotation.AnnotationAttributes", "short_description": " LinkedHashMap  subclass representing annotation attribute key-value  pairs as read by  AnnotationUtils , AnnotatedElementUtils , and Spring's reflection- and ASM-based AnnotationMetadata  implementations. "},
{"api_id": 1227, "api_type": 2, "full_declaration": "AnnotationAwareOrderComparator", "qualified_name": "org.springframework.core.annotation.AnnotationAwareOrderComparator", "short_description": " AnnotationAwareOrderComparator  is an extension of OrderComparator  that supports Spring's Ordered  interface as well as the @Order  and  @Priority annotations, with an order value provided by an  Ordered instance overriding a statically defined annotation value (if any). "},
{"api_id": 1228, "api_type": 2, "full_declaration": "AnnotationUtils", "qualified_name": "org.springframework.core.annotation.AnnotationUtils", "short_description": " General utility methods for working with annotations, handling meta-annotations,\nbridge methods (which the compiler generates for generic declarations) as well\nas super methods (for optional  annotation inheritance ). "},
{"api_id": 1229, "api_type": 2, "full_declaration": "MergedAnnotationCollectors", "qualified_name": "org.springframework.core.annotation.MergedAnnotationCollectors", "short_description": " Collector  implementations that provide various reduction operations for MergedAnnotation  instances. "},
{"api_id": 1230, "api_type": 2, "full_declaration": "MergedAnnotationPredicates", "qualified_name": "org.springframework.core.annotation.MergedAnnotationPredicates", "short_description": " Predicate implementations that provide various test operations for MergedAnnotations . "},
{"api_id": 1231, "api_type": 2, "full_declaration": "MergedAnnotationSelectors", "qualified_name": "org.springframework.core.annotation.MergedAnnotationSelectors", "short_description": " MergedAnnotationSelector  implementations that provide various options\nfor  MergedAnnotation  instances. "},
{"api_id": 1232, "api_type": 2, "full_declaration": "OrderUtils", "qualified_name": "org.springframework.core.annotation.OrderUtils", "short_description": " General utility for determining the order of an object based on its type declaration. "},
{"api_id": 1233, "api_type": 2, "full_declaration": "RepeatableContainers", "qualified_name": "org.springframework.core.annotation.RepeatableContainers", "short_description": " Strategy used to determine annotations that act as containers for other\nannotations. "},
{"api_id": 1234, "api_type": 2, "full_declaration": "SynthesizingMethodParameter", "qualified_name": "org.springframework.core.annotation.SynthesizingMethodParameter", "short_description": " A  MethodParameter  variant which synthesizes annotations that\ndeclare attribute aliases via  @AliasFor . "},
{"api_id": 1235, "api_type": 8, "full_declaration": "MergedAnnotation.Adapt", "qualified_name": "org.springframework.core.annotation.MergedAnnotation.Adapt", "short_description": " Adaptations that can be applied to attribute values when creating Maps  or AnnotationAttributes . "},
{"api_id": 1236, "api_type": 8, "full_declaration": "MergedAnnotations.SearchStrategy", "qualified_name": "org.springframework.core.annotation.MergedAnnotations.SearchStrategy", "short_description": " Search strategies supported by MergedAnnotations.from(AnnotatedElement, SearchStrategy) . "},
{"api_id": 1237, "api_type": 4, "full_declaration": "AnnotationConfigurationException", "qualified_name": "org.springframework.core.annotation.AnnotationConfigurationException", "short_description": " Thrown by  AnnotationUtils  and  synthesized annotations if an annotation is improperly configured. "},
{"api_id": 1238, "api_type": 9, "full_declaration": "AliasFor", "qualified_name": "org.springframework.core.annotation.AliasFor", "short_description": " @AliasFor  is an annotation that is used to declare aliases for\nannotation attributes. "},
{"api_id": 1239, "api_type": 9, "full_declaration": "Order", "qualified_name": "org.springframework.core.annotation.Order", "short_description": " @Order  defines the sort order for an annotated component. "},
{"api_id": 1240, "api_type": 3, "full_declaration": "Decoder", "qualified_name": "org.springframework.core.codec.Decoder", "short_description": " Strategy for decoding a  DataBuffer  input stream into an output stream\nof elements of type  <T> . "},
{"api_id": 1241, "api_type": 3, "full_declaration": "Encoder", "qualified_name": "org.springframework.core.codec.Encoder", "short_description": " Strategy to encode a stream of Objects of type  <T>  into an output\nstream of bytes. "},
{"api_id": 1242, "api_type": 2, "full_declaration": "AbstractDataBufferDecoder", "qualified_name": "org.springframework.core.codec.AbstractDataBufferDecoder", "short_description": " Abstract base class for  Decoder  implementations that can decode\na  DataBuffer  directly to the target element type. "},
{"api_id": 1243, "api_type": 2, "full_declaration": "AbstractDecoder", "qualified_name": "org.springframework.core.codec.AbstractDecoder", "short_description": " Abstract base class for  Decoder  implementations. "},
{"api_id": 1244, "api_type": 2, "full_declaration": "AbstractEncoder", "qualified_name": "org.springframework.core.codec.AbstractEncoder", "short_description": " Abstract base class for  Decoder  implementations. "},
{"api_id": 1245, "api_type": 2, "full_declaration": "AbstractSingleValueEncoder", "qualified_name": "org.springframework.core.codec.AbstractSingleValueEncoder", "short_description": " Abstract base class for  Encoder classes that can only deal with a single value. "},
{"api_id": 1246, "api_type": 2, "full_declaration": "ByteArrayDecoder", "qualified_name": "org.springframework.core.codec.ByteArrayDecoder", "short_description": " Decoder for  byte  arrays. "},
{"api_id": 1247, "api_type": 2, "full_declaration": "ByteArrayEncoder", "qualified_name": "org.springframework.core.codec.ByteArrayEncoder", "short_description": " Encoder for  byte  arrays. "},
{"api_id": 1248, "api_type": 2, "full_declaration": "ByteBufferDecoder", "qualified_name": "org.springframework.core.codec.ByteBufferDecoder", "short_description": " Decoder for  ByteBuffers . "},
{"api_id": 1249, "api_type": 2, "full_declaration": "ByteBufferEncoder", "qualified_name": "org.springframework.core.codec.ByteBufferEncoder", "short_description": " Encoder for  ByteBuffers . "},
{"api_id": 1250, "api_type": 2, "full_declaration": "CharSequenceEncoder", "qualified_name": "org.springframework.core.codec.CharSequenceEncoder", "short_description": " Encode from a  CharSequence  stream to a bytes stream. "},
{"api_id": 1251, "api_type": 2, "full_declaration": "DataBufferDecoder", "qualified_name": "org.springframework.core.codec.DataBufferDecoder", "short_description": " Simple pass-through decoder for  DataBuffers . "},
{"api_id": 1252, "api_type": 2, "full_declaration": "DataBufferEncoder", "qualified_name": "org.springframework.core.codec.DataBufferEncoder", "short_description": " Simple pass-through encoder for  DataBuffers . "},
{"api_id": 1253, "api_type": 2, "full_declaration": "Hints", "qualified_name": "org.springframework.core.codec.Hints", "short_description": " Constants and convenience methods for working with hints. "},
{"api_id": 1254, "api_type": 2, "full_declaration": "NettyByteBufDecoder", "qualified_name": "org.springframework.core.codec.NettyByteBufDecoder", "short_description": " Decoder for  ByteBufs . "},
{"api_id": 1255, "api_type": 2, "full_declaration": "NettyByteBufEncoder", "qualified_name": "org.springframework.core.codec.NettyByteBufEncoder", "short_description": " Encoder for  ByteBufs . "},
{"api_id": 1256, "api_type": 2, "full_declaration": "ResourceDecoder", "qualified_name": "org.springframework.core.codec.ResourceDecoder", "short_description": " Decoder for  Resources . "},
{"api_id": 1257, "api_type": 2, "full_declaration": "ResourceEncoder", "qualified_name": "org.springframework.core.codec.ResourceEncoder", "short_description": " Encoder for  Resources . "},
{"api_id": 1258, "api_type": 2, "full_declaration": "ResourceRegionEncoder", "qualified_name": "org.springframework.core.codec.ResourceRegionEncoder", "short_description": " Encoder for  ResourceRegions . "},
{"api_id": 1259, "api_type": 2, "full_declaration": "StringDecoder", "qualified_name": "org.springframework.core.codec.StringDecoder", "short_description": " Decode from a data buffer stream to a  String  stream, either splitting\nor aggregating incoming data chunks to realign along newlines delimiters\nand produce a stream of strings. "},
{"api_id": 1260, "api_type": 4, "full_declaration": "CodecException", "qualified_name": "org.springframework.core.codec.CodecException", "short_description": " General error that indicates a problem while encoding and decoding to and\nfrom an Object stream. "},
{"api_id": 1261, "api_type": 4, "full_declaration": "DecodingException", "qualified_name": "org.springframework.core.codec.DecodingException", "short_description": " Indicates an issue with decoding the input stream with a focus on content\nrelated issues such as a parse failure. "},
{"api_id": 1262, "api_type": 4, "full_declaration": "EncodingException", "qualified_name": "org.springframework.core.codec.EncodingException", "short_description": " Indicates an issue with encoding the input Object stream with a focus on\nnot being able to encode Objects. "},
{"api_id": 1263, "api_type": 3, "full_declaration": "ConversionService", "qualified_name": "org.springframework.core.convert.ConversionService", "short_description": " A service interface for type conversion. "},
{"api_id": 1264, "api_type": 2, "full_declaration": "Property", "qualified_name": "org.springframework.core.convert.Property", "short_description": " A description of a JavaBeans Property that allows us to avoid a dependency on java.beans.PropertyDescriptor . "},
{"api_id": 1265, "api_type": 2, "full_declaration": "TypeDescriptor", "qualified_name": "org.springframework.core.convert.TypeDescriptor", "short_description": " Contextual descriptor about a type to convert from or to. "},
{"api_id": 1266, "api_type": 4, "full_declaration": "ConversionException", "qualified_name": "org.springframework.core.convert.ConversionException", "short_description": " Base class for exceptions thrown by the conversion system. "},
{"api_id": 1267, "api_type": 4, "full_declaration": "ConversionFailedException", "qualified_name": "org.springframework.core.convert.ConversionFailedException", "short_description": " Exception to be thrown when an actual type conversion attempt fails. "},
{"api_id": 1268, "api_type": 4, "full_declaration": "ConverterNotFoundException", "qualified_name": "org.springframework.core.convert.ConverterNotFoundException", "short_description": " Exception to be thrown when a suitable converter could not be found\nin a given conversion service. "},
{"api_id": 1269, "api_type": 3, "full_declaration": "ConditionalConverter", "qualified_name": "org.springframework.core.convert.converter.ConditionalConverter", "short_description": " Allows a  Converter ,  GenericConverter  or  ConverterFactory  to\nconditionally execute based on attributes of the  source  and  target  TypeDescriptor . "},
{"api_id": 1270, "api_type": 3, "full_declaration": "ConditionalGenericConverter", "qualified_name": "org.springframework.core.convert.converter.ConditionalGenericConverter", "short_description": " A  GenericConverter  that may conditionally execute based on attributes\nof the  source  and  target   TypeDescriptor . "},
{"api_id": 1271, "api_type": 3, "full_declaration": "Converter", "qualified_name": "org.springframework.core.convert.converter.Converter", "short_description": " A converter converts a source object of type  S  to a target of type  T . "},
{"api_id": 1272, "api_type": 3, "full_declaration": "ConverterFactory", "qualified_name": "org.springframework.core.convert.converter.ConverterFactory", "short_description": " A factory for \"ranged\" converters that can convert objects from S to subtypes of R. "},
{"api_id": 1273, "api_type": 3, "full_declaration": "ConverterRegistry", "qualified_name": "org.springframework.core.convert.converter.ConverterRegistry", "short_description": " For registering converters with a type conversion system. "},
{"api_id": 1274, "api_type": 3, "full_declaration": "GenericConverter", "qualified_name": "org.springframework.core.convert.converter.GenericConverter", "short_description": " Generic converter interface for converting between two or more types. "},
{"api_id": 1275, "api_type": 2, "full_declaration": "ConvertingComparator", "qualified_name": "org.springframework.core.convert.converter.ConvertingComparator", "short_description": " A  Comparator  that converts values before they are compared. "},
{"api_id": 1276, "api_type": 2, "full_declaration": "GenericConverter.ConvertiblePair", "qualified_name": "org.springframework.core.convert.converter.GenericConverter.ConvertiblePair", "short_description": " Holder for a source-to-target class pair. "},
{"api_id": 1277, "api_type": 3, "full_declaration": "ConfigurableConversionService", "qualified_name": "org.springframework.core.convert.support.ConfigurableConversionService", "short_description": " Configuration interface to be implemented by most if not all  ConversionService types. "},
{"api_id": 1278, "api_type": 2, "full_declaration": "ConversionServiceFactory", "qualified_name": "org.springframework.core.convert.support.ConversionServiceFactory", "short_description": " A factory for common  ConversionService configurations. "},
{"api_id": 1279, "api_type": 2, "full_declaration": "ConvertingPropertyEditorAdapter", "qualified_name": "org.springframework.core.convert.support.ConvertingPropertyEditorAdapter", "short_description": " Adapter that exposes a  PropertyEditor  for any given ConversionService  and specific target type. "},
{"api_id": 1280, "api_type": 2, "full_declaration": "DefaultConversionService", "qualified_name": "org.springframework.core.convert.support.DefaultConversionService", "short_description": " A specialization of  GenericConversionService  configured by default\nwith converters appropriate for most environments. "},
{"api_id": 1281, "api_type": 2, "full_declaration": "GenericConversionService", "qualified_name": "org.springframework.core.convert.support.GenericConversionService", "short_description": " Base  ConversionService  implementation suitable for use in most environments. "},
{"api_id": 1282, "api_type": 3, "full_declaration": "ConfigurableEnvironment", "qualified_name": "org.springframework.core.env.ConfigurableEnvironment", "short_description": " Configuration interface to be implemented by most if not all  Environment  types. "},
{"api_id": 1283, "api_type": 3, "full_declaration": "ConfigurablePropertyResolver", "qualified_name": "org.springframework.core.env.ConfigurablePropertyResolver", "short_description": " Configuration interface to be implemented by most if not all  PropertyResolver types. "},
{"api_id": 1284, "api_type": 3, "full_declaration": "Environment", "qualified_name": "org.springframework.core.env.Environment", "short_description": " Interface representing the environment in which the current application is running. "},
{"api_id": 1285, "api_type": 3, "full_declaration": "EnvironmentCapable", "qualified_name": "org.springframework.core.env.EnvironmentCapable", "short_description": " Interface indicating a component that contains and exposes an  Environment  reference. "},
{"api_id": 1286, "api_type": 3, "full_declaration": "Profiles", "qualified_name": "org.springframework.core.env.Profiles", "short_description": " Profile predicate that may be  accepted  by an  Environment . "},
{"api_id": 1287, "api_type": 3, "full_declaration": "PropertyResolver", "qualified_name": "org.springframework.core.env.PropertyResolver", "short_description": " Interface for resolving properties against any underlying source. "},
{"api_id": 1288, "api_type": 3, "full_declaration": "PropertySources", "qualified_name": "org.springframework.core.env.PropertySources", "short_description": " Holder containing one or more  PropertySource  objects. "},
{"api_id": 1289, "api_type": 2, "full_declaration": "AbstractEnvironment", "qualified_name": "org.springframework.core.env.AbstractEnvironment", "short_description": " Abstract base class for  Environment  implementations. "},
{"api_id": 1290, "api_type": 2, "full_declaration": "AbstractPropertyResolver", "qualified_name": "org.springframework.core.env.AbstractPropertyResolver", "short_description": " Abstract base class for resolving properties against any underlying source. "},
{"api_id": 1291, "api_type": 2, "full_declaration": "CommandLinePropertySource", "qualified_name": "org.springframework.core.env.CommandLinePropertySource", "short_description": " Abstract base class for  PropertySource  implementations backed by command line\narguments. "},
{"api_id": 1292, "api_type": 2, "full_declaration": "CompositePropertySource", "qualified_name": "org.springframework.core.env.CompositePropertySource", "short_description": " Composite  PropertySource  implementation that iterates over a set of PropertySource  instances. "},
{"api_id": 1293, "api_type": 2, "full_declaration": "EnumerablePropertySource", "qualified_name": "org.springframework.core.env.EnumerablePropertySource", "short_description": " A  PropertySource  implementation capable of interrogating its\nunderlying source object to enumerate all possible property name/value\npairs. "},
{"api_id": 1294, "api_type": 2, "full_declaration": "JOptCommandLinePropertySource", "qualified_name": "org.springframework.core.env.JOptCommandLinePropertySource", "short_description": " CommandLinePropertySource  implementation backed by a JOpt  OptionSet . "},
{"api_id": 1295, "api_type": 2, "full_declaration": "MapPropertySource", "qualified_name": "org.springframework.core.env.MapPropertySource", "short_description": " PropertySource  that reads keys and values from a  Map  object. "},
{"api_id": 1296, "api_type": 2, "full_declaration": "MutablePropertySources", "qualified_name": "org.springframework.core.env.MutablePropertySources", "short_description": " The default implementation of the  PropertySources  interface. "},
{"api_id": 1297, "api_type": 2, "full_declaration": "PropertiesPropertySource", "qualified_name": "org.springframework.core.env.PropertiesPropertySource", "short_description": " PropertySource  implementation that extracts properties from a Properties  object. "},
{"api_id": 1298, "api_type": 2, "full_declaration": "PropertySource", "qualified_name": "org.springframework.core.env.PropertySource", "short_description": " Abstract base class representing a source of name/value property pairs. "},
{"api_id": 1299, "api_type": 2, "full_declaration": "PropertySource.StubPropertySource", "qualified_name": "org.springframework.core.env.PropertySource.StubPropertySource", "short_description": " PropertySource  to be used as a placeholder in cases where an actual\nproperty source cannot be eagerly initialized at application context\ncreation time. "},
{"api_id": 1300, "api_type": 2, "full_declaration": "PropertySourcesPropertyResolver", "qualified_name": "org.springframework.core.env.PropertySourcesPropertyResolver", "short_description": " PropertyResolver  implementation that resolves property values against\nan underlying set of  PropertySources . "},
{"api_id": 1301, "api_type": 2, "full_declaration": "SimpleCommandLinePropertySource", "qualified_name": "org.springframework.core.env.SimpleCommandLinePropertySource", "short_description": " CommandLinePropertySource  implementation backed by a simple String array. "},
{"api_id": 1302, "api_type": 2, "full_declaration": "StandardEnvironment", "qualified_name": "org.springframework.core.env.StandardEnvironment", "short_description": " Environment  implementation suitable for use in 'standard' (i.e. "},
{"api_id": 1303, "api_type": 2, "full_declaration": "SystemEnvironmentPropertySource", "qualified_name": "org.springframework.core.env.SystemEnvironmentPropertySource", "short_description": " Specialization of  MapPropertySource  designed for use with system environment variables . "},
{"api_id": 1304, "api_type": 4, "full_declaration": "MissingRequiredPropertiesException", "qualified_name": "org.springframework.core.env.MissingRequiredPropertiesException", "short_description": " Exception thrown when required properties are not found. "},
{"api_id": 1305, "api_type": 3, "full_declaration": "ContextResource", "qualified_name": "org.springframework.core.io.ContextResource", "short_description": " Extended interface for a resource that is loaded from an enclosing\n'context', e.g. "},
{"api_id": 1306, "api_type": 3, "full_declaration": "InputStreamSource", "qualified_name": "org.springframework.core.io.InputStreamSource", "short_description": " Simple interface for objects that are sources for an  InputStream . "},
{"api_id": 1307, "api_type": 3, "full_declaration": "ProtocolResolver", "qualified_name": "org.springframework.core.io.ProtocolResolver", "short_description": " A resolution strategy for protocol-specific resource handles. "},
{"api_id": 1308, "api_type": 3, "full_declaration": "Resource", "qualified_name": "org.springframework.core.io.Resource", "short_description": " Interface for a resource descriptor that abstracts from the actual\ntype of underlying resource, such as a file or class path resource. "},
{"api_id": 1309, "api_type": 3, "full_declaration": "ResourceLoader", "qualified_name": "org.springframework.core.io.ResourceLoader", "short_description": " Strategy interface for loading resources (e.. "},
{"api_id": 1310, "api_type": 3, "full_declaration": "WritableResource", "qualified_name": "org.springframework.core.io.WritableResource", "short_description": " Extended interface for a resource that supports writing to it. "},
{"api_id": 1311, "api_type": 2, "full_declaration": "AbstractFileResolvingResource", "qualified_name": "org.springframework.core.io.AbstractFileResolvingResource", "short_description": " Abstract base class for resources which resolve URLs into File references,\nsuch as  UrlResource  or  ClassPathResource . "},
{"api_id": 1312, "api_type": 2, "full_declaration": "AbstractResource", "qualified_name": "org.springframework.core.io.AbstractResource", "short_description": " Convenience base class for  Resource  implementations,\npre-implementing typical behavior. "},
{"api_id": 1313, "api_type": 2, "full_declaration": "ByteArrayResource", "qualified_name": "org.springframework.core.io.ByteArrayResource", "short_description": " Resource  implementation for a given byte array. "},
{"api_id": 1314, "api_type": 2, "full_declaration": "ClassPathResource", "qualified_name": "org.springframework.core.io.ClassPathResource", "short_description": " Resource  implementation for class path resources. "},
{"api_id": 1315, "api_type": 2, "full_declaration": "ClassRelativeResourceLoader", "qualified_name": "org.springframework.core.io.ClassRelativeResourceLoader", "short_description": " ResourceLoader  implementation that interprets plain resource paths\nas relative to a given  java.lang.Class . "},
{"api_id": 1316, "api_type": 2, "full_declaration": "DefaultResourceLoader", "qualified_name": "org.springframework.core.io.DefaultResourceLoader", "short_description": " Default implementation of the  ResourceLoader  interface. "},
{"api_id": 1317, "api_type": 2, "full_declaration": "DefaultResourceLoader.ClassPathContextResource", "qualified_name": "org.springframework.core.io.DefaultResourceLoader.ClassPathContextResource", "short_description": " ClassPathResource that explicitly expresses a context-relative path\nthrough implementing the ContextResource interface. "},
{"api_id": 1318, "api_type": 2, "full_declaration": "DescriptiveResource", "qualified_name": "org.springframework.core.io.DescriptiveResource", "short_description": " Simple  Resource  implementation that holds a resource description\nbut does not point to an actually readable resource. "},
{"api_id": 1319, "api_type": 2, "full_declaration": "FileSystemResource", "qualified_name": "org.springframework.core.io.FileSystemResource", "short_description": " Resource  implementation for  java.io.File  and java.nio.file.Path  handles with a file system target. "},
{"api_id": 1320, "api_type": 2, "full_declaration": "FileSystemResourceLoader", "qualified_name": "org.springframework.core.io.FileSystemResourceLoader", "short_description": " ResourceLoader  implementation that resolves plain paths as\nfile system resources rather than as class path resources\n(the latter is  DefaultResourceLoader 's default strategy). "},
{"api_id": 1321, "api_type": 2, "full_declaration": "FileUrlResource", "qualified_name": "org.springframework.core.io.FileUrlResource", "short_description": " Subclass of  UrlResource  which assumes file resolution, to the degree\nof implementing the  WritableResource  interface for it. "},
{"api_id": 1322, "api_type": 2, "full_declaration": "InputStreamResource", "qualified_name": "org.springframework.core.io.InputStreamResource", "short_description": " Resource  implementation for a given  InputStream . "},
{"api_id": 1323, "api_type": 2, "full_declaration": "PathResource", "qualified_name": "org.springframework.core.io.PathResource", "short_description": " Resource  implementation for  Path  handles,\nperforming all operations and transformations via the  Path  API. "},
{"api_id": 1324, "api_type": 2, "full_declaration": "ResourceEditor", "qualified_name": "org.springframework.core.io.ResourceEditor", "short_description": " Editor  for  Resource descriptors, to automatically convert  String  locations\ne.g. "},
{"api_id": 1325, "api_type": 2, "full_declaration": "UrlResource", "qualified_name": "org.springframework.core.io.UrlResource", "short_description": " Resource  implementation for  java.net.URL  locators. "},
{"api_id": 1326, "api_type": 2, "full_declaration": "VfsResource", "qualified_name": "org.springframework.core.io.VfsResource", "short_description": " JBoss VFS based  Resource  implementation. "},
{"api_id": 1327, "api_type": 2, "full_declaration": "VfsUtils", "qualified_name": "org.springframework.core.io.VfsUtils", "short_description": " Utility for detecting and accessing JBoss VFS in the classpath. "},
{"api_id": 1328, "api_type": 3, "full_declaration": "DataBuffer", "qualified_name": "org.springframework.core.io.buffer.DataBuffer", "short_description": " Basic abstraction over byte buffers. "},
{"api_id": 1329, "api_type": 3, "full_declaration": "DataBufferFactory", "qualified_name": "org.springframework.core.io.buffer.DataBufferFactory", "short_description": " A factory for  DataBuffers , allowing for allocation and\nwrapping of data buffers. "},
{"api_id": 1330, "api_type": 3, "full_declaration": "DataBufferUtils.Matcher", "qualified_name": "org.springframework.core.io.buffer.DataBufferUtils.Matcher", "short_description": " Contract to find delimiter(s) against one or more data buffers that can\nbe passed one at a time to the  DataBufferUtils.Matcher.match(DataBuffer)  method. "},
{"api_id": 1331, "api_type": 3, "full_declaration": "PooledDataBuffer", "qualified_name": "org.springframework.core.io.buffer.PooledDataBuffer", "short_description": " Extension of  DataBuffer  that allows for buffer that share\na memory pool. "},
{"api_id": 1332, "api_type": 2, "full_declaration": "DataBufferUtils", "qualified_name": "org.springframework.core.io.buffer.DataBufferUtils", "short_description": " Utility class for working with  DataBuffers . "},
{"api_id": 1333, "api_type": 2, "full_declaration": "DataBufferWrapper", "qualified_name": "org.springframework.core.io.buffer.DataBufferWrapper", "short_description": " Provides a convenient implementation of the  DataBuffer  interface\nthat can be overridden to adapt the delegate. "},
{"api_id": 1334, "api_type": 2, "full_declaration": "DefaultDataBuffer", "qualified_name": "org.springframework.core.io.buffer.DefaultDataBuffer", "short_description": " Default implementation of the  DataBuffer  interface that uses a ByteBuffer  internally. "},
{"api_id": 1335, "api_type": 2, "full_declaration": "DefaultDataBufferFactory", "qualified_name": "org.springframework.core.io.buffer.DefaultDataBufferFactory", "short_description": " Default implementation of the  DataBufferFactory  interface. "},
{"api_id": 1336, "api_type": 2, "full_declaration": "LimitedDataBufferList", "qualified_name": "org.springframework.core.io.buffer.LimitedDataBufferList", "short_description": " Custom  List  to collect data buffers with and enforce a\nlimit on the total number of bytes buffered. "},
{"api_id": 1337, "api_type": 2, "full_declaration": "NettyDataBuffer", "qualified_name": "org.springframework.core.io.buffer.NettyDataBuffer", "short_description": " Implementation of the  DataBuffer  interface that wraps a Netty ByteBuf . "},
{"api_id": 1338, "api_type": 2, "full_declaration": "NettyDataBufferFactory", "qualified_name": "org.springframework.core.io.buffer.NettyDataBufferFactory", "short_description": " Implementation of the  DataBufferFactory  interface based on a\nNetty  ByteBufAllocator . "},
{"api_id": 1339, "api_type": 4, "full_declaration": "DataBufferLimitException", "qualified_name": "org.springframework.core.io.buffer.DataBufferLimitException", "short_description": " Exception that indicates the cumulative number of bytes consumed from a\nstream of  DataBuffer 's exceeded some pre-configured limit. "},
{"api_id": 1340, "api_type": 3, "full_declaration": "PropertySourceFactory", "qualified_name": "org.springframework.core.io.support.PropertySourceFactory", "short_description": " Strategy interface for creating resource-based  PropertySource  wrappers. "},
{"api_id": 1341, "api_type": 3, "full_declaration": "ResourcePatternResolver", "qualified_name": "org.springframework.core.io.support.ResourcePatternResolver", "short_description": " Strategy interface for resolving a location pattern (for example,\nan Ant-style path pattern) into Resource objects. "},
{"api_id": 1342, "api_type": 2, "full_declaration": "DefaultPropertySourceFactory", "qualified_name": "org.springframework.core.io.support.DefaultPropertySourceFactory", "short_description": " The default implementation for  PropertySourceFactory ,\nwrapping every resource in a  ResourcePropertySource . "},
{"api_id": 1343, "api_type": 2, "full_declaration": "EncodedResource", "qualified_name": "org.springframework.core.io.support.EncodedResource", "short_description": " Holder that combines a  Resource  descriptor with a specific encoding\nor  Charset  to be used for reading from the resource. "},
{"api_id": 1344, "api_type": 2, "full_declaration": "LocalizedResourceHelper", "qualified_name": "org.springframework.core.io.support.LocalizedResourceHelper", "short_description": " Helper class for loading a localized resource,\nspecified through name, extension and current locale. "},
{"api_id": 1345, "api_type": 2, "full_declaration": "PathMatchingResourcePatternResolver", "qualified_name": "org.springframework.core.io.support.PathMatchingResourcePatternResolver", "short_description": " A  ResourcePatternResolver  implementation that is able to resolve a\nspecified resource location path into one or more matching Resources. "},
{"api_id": 1346, "api_type": 2, "full_declaration": "PropertiesLoaderSupport", "qualified_name": "org.springframework.core.io.support.PropertiesLoaderSupport", "short_description": " Base class for JavaBean-style components that need to load properties\nfrom one or more resources. "},
{"api_id": 1347, "api_type": 2, "full_declaration": "PropertiesLoaderUtils", "qualified_name": "org.springframework.core.io.support.PropertiesLoaderUtils", "short_description": " Convenient utility methods for loading of  java.util.Properties ,\nperforming standard handling of input streams. "},
{"api_id": 1348, "api_type": 2, "full_declaration": "ResourceArrayPropertyEditor", "qualified_name": "org.springframework.core.io.support.ResourceArrayPropertyEditor", "short_description": " Editor for  Resource  arrays, to\nautomatically convert  String  location patterns\n(e.g. "},
{"api_id": 1349, "api_type": 2, "full_declaration": "ResourcePatternUtils", "qualified_name": "org.springframework.core.io.support.ResourcePatternUtils", "short_description": " Utility class for determining whether a given URL is a resource\nlocation that can be loaded via a  ResourcePatternResolver . "},
{"api_id": 1350, "api_type": 2, "full_declaration": "ResourcePropertiesPersister", "qualified_name": "org.springframework.core.io.support.ResourcePropertiesPersister", "short_description": " Spring-aware subclass of the plain  DefaultPropertiesPersister ,\nadding a conditional check for disabled XML support through the shared\n\"spring.xml.ignore\" property. "},
{"api_id": 1351, "api_type": 2, "full_declaration": "ResourcePropertySource", "qualified_name": "org.springframework.core.io.support.ResourcePropertySource", "short_description": " Subclass of  PropertiesPropertySource  that loads a  Properties  object\nfrom a given  Resource  or resource location such as \"classpath:/com/myco/foo.properties\"  or  \"file:/path/to/file.xml\" . "},
{"api_id": 1352, "api_type": 2, "full_declaration": "ResourceRegion", "qualified_name": "org.springframework.core.io.support.ResourceRegion", "short_description": " Region of a  Resource  implementation, materialized by a  position within the  Resource  and a byte  count  for the length of that region. "},
{"api_id": 1353, "api_type": 2, "full_declaration": "SpringFactoriesLoader", "qualified_name": "org.springframework.core.io.support.SpringFactoriesLoader", "short_description": " General purpose factory loading mechanism for internal use within the framework. "},
{"api_id": 1354, "api_type": 2, "full_declaration": "LogAccessor", "qualified_name": "org.springframework.core.log.LogAccessor", "short_description": " A convenient accessor for Commons Logging, providing not only CharSequence  based log methods but also  Supplier based variants for use with Java 8 lambda expressions. "},
{"api_id": 1355, "api_type": 2, "full_declaration": "LogDelegateFactory", "qualified_name": "org.springframework.core.log.LogDelegateFactory", "short_description": " Factory for common  Log  delegates with Spring's logging conventions. "},
{"api_id": 1356, "api_type": 2, "full_declaration": "LogFormatUtils", "qualified_name": "org.springframework.core.log.LogFormatUtils", "short_description": " Utility methods for formatting and logging messages. "},
{"api_id": 1357, "api_type": 2, "full_declaration": "LogMessage", "qualified_name": "org.springframework.core.log.LogMessage", "short_description": " A simple log message type for use with Commons Logging, allowing\nfor convenient lazy resolution of a given  Supplier  instance\n(typically bound to a Java 8 lambda expression) or a printf-style\nformat string ( String.format(java.lang.String, java.lang.Object...) ) in its  LogMessage.toString() . "},
{"api_id": 1358, "api_type": 3, "full_declaration": "ApplicationStartup", "qualified_name": "org.springframework.core.metrics.ApplicationStartup", "short_description": " Instruments the application startup phase using  steps . "},
{"api_id": 1359, "api_type": 3, "full_declaration": "StartupStep", "qualified_name": "org.springframework.core.metrics.StartupStep", "short_description": " Step recording metrics about a particular phase or action happening during the  ApplicationStartup . "},
{"api_id": 1360, "api_type": 3, "full_declaration": "StartupStep.Tag", "qualified_name": "org.springframework.core.metrics.StartupStep.Tag", "short_description": " Simple key/value association for storing step metadata. "},
{"api_id": 1361, "api_type": 3, "full_declaration": "StartupStep.Tags", "qualified_name": "org.springframework.core.metrics.StartupStep.Tags", "short_description": " Immutable collection of  StartupStep.Tag . "},
{"api_id": 1362, "api_type": 2, "full_declaration": "FlightRecorderApplicationStartup", "qualified_name": "org.springframework.core.metrics.jfr.FlightRecorderApplicationStartup", "short_description": " ApplicationStartup  implementation for the Java Flight Recorder. "},
{"api_id": 1363, "api_type": 3, "full_declaration": "Deserializer", "qualified_name": "org.springframework.core.serializer.Deserializer", "short_description": " A strategy interface for converting from data in an InputStream to an Object. "},
{"api_id": 1364, "api_type": 3, "full_declaration": "Serializer", "qualified_name": "org.springframework.core.serializer.Serializer", "short_description": " A strategy interface for streaming an object to an OutputStream. "},
{"api_id": 1365, "api_type": 2, "full_declaration": "DefaultDeserializer", "qualified_name": "org.springframework.core.serializer.DefaultDeserializer", "short_description": " A default  Deserializer  implementation that reads an input stream\nusing Java serialization. "},
{"api_id": 1366, "api_type": 2, "full_declaration": "DefaultSerializer", "qualified_name": "org.springframework.core.serializer.DefaultSerializer", "short_description": " A  Serializer  implementation that writes an object to an output stream\nusing Java serialization. "},
{"api_id": 1367, "api_type": 2, "full_declaration": "DeserializingConverter", "qualified_name": "org.springframework.core.serializer.support.DeserializingConverter", "short_description": " A  Converter  that delegates to a Deserializer to convert data in a byte array to an object. "},
{"api_id": 1368, "api_type": 2, "full_declaration": "SerializationDelegate", "qualified_name": "org.springframework.core.serializer.support.SerializationDelegate", "short_description": " A convenient delegate with pre-arranged configuration state for common\nserialization needs. "},
{"api_id": 1369, "api_type": 2, "full_declaration": "SerializingConverter", "qualified_name": "org.springframework.core.serializer.support.SerializingConverter", "short_description": " A  Converter  that delegates to a Serializer to convert an object to a byte array. "},
{"api_id": 1370, "api_type": 4, "full_declaration": "SerializationFailedException", "qualified_name": "org.springframework.core.serializer.support.SerializationFailedException", "short_description": " Wrapper for the native IOException (or similar) when a Serializer  or Deserializer  failed. "},
{"api_id": 1371, "api_type": 3, "full_declaration": "ToStringStyler", "qualified_name": "org.springframework.core.style.ToStringStyler", "short_description": " A strategy interface for pretty-printing  toString()  methods. "},
{"api_id": 1372, "api_type": 3, "full_declaration": "ValueStyler", "qualified_name": "org.springframework.core.style.ValueStyler", "short_description": " Strategy that encapsulates value String styling algorithms\naccording to Spring conventions. "},
{"api_id": 1373, "api_type": 2, "full_declaration": "DefaultToStringStyler", "qualified_name": "org.springframework.core.style.DefaultToStringStyler", "short_description": " Spring's default  toString()  styler. "},
{"api_id": 1374, "api_type": 2, "full_declaration": "DefaultValueStyler", "qualified_name": "org.springframework.core.style.DefaultValueStyler", "short_description": " Converts objects to String form, generally for debugging purposes,\nusing Spring's  toString  styling conventions. "},
{"api_id": 1375, "api_type": 2, "full_declaration": "StylerUtils", "qualified_name": "org.springframework.core.style.StylerUtils", "short_description": " Simple utility class to allow for convenient access to value\nstyling logic, mainly to support descriptive logging messages. "},
{"api_id": 1376, "api_type": 2, "full_declaration": "ToStringCreator", "qualified_name": "org.springframework.core.style.ToStringCreator", "short_description": " Utility class that builds pretty-printing  toString()  methods\nwith pluggable styling conventions. "},
{"api_id": 1377, "api_type": 3, "full_declaration": "AsyncListenableTaskExecutor", "qualified_name": "org.springframework.core.task.AsyncListenableTaskExecutor", "short_description": " Extension of the  AsyncTaskExecutor  interface, adding the capability to submit\ntasks for  ListenableFutures . "},
{"api_id": 1378, "api_type": 3, "full_declaration": "AsyncTaskExecutor", "qualified_name": "org.springframework.core.task.AsyncTaskExecutor", "short_description": " Extended interface for asynchronous  TaskExecutor  implementations,\noffering an overloaded  AsyncTaskExecutor.execute(Runnable, long)  variant with a start\ntimeout parameter as well support for  Callable . "},
{"api_id": 1379, "api_type": 3, "full_declaration": "TaskDecorator", "qualified_name": "org.springframework.core.task.TaskDecorator", "short_description": " A callback interface for a decorator to be applied to any  Runnable about to be executed. "},
{"api_id": 1380, "api_type": 3, "full_declaration": "TaskExecutor", "qualified_name": "org.springframework.core.task.TaskExecutor", "short_description": " Simple task executor interface that abstracts the execution\nof a  Runnable . "},
{"api_id": 1381, "api_type": 2, "full_declaration": "SimpleAsyncTaskExecutor", "qualified_name": "org.springframework.core.task.SimpleAsyncTaskExecutor", "short_description": " TaskExecutor  implementation that fires up a new Thread for each task,\nexecuting it asynchronously. "},
{"api_id": 1382, "api_type": 2, "full_declaration": "SyncTaskExecutor", "qualified_name": "org.springframework.core.task.SyncTaskExecutor", "short_description": " TaskExecutor  implementation that executes each task  synchronously in the calling thread. "},
{"api_id": 1383, "api_type": 4, "full_declaration": "TaskRejectedException", "qualified_name": "org.springframework.core.task.TaskRejectedException", "short_description": " Exception thrown when a  TaskExecutor  rejects to accept\na given task for execution. "},
{"api_id": 1384, "api_type": 4, "full_declaration": "TaskTimeoutException", "qualified_name": "org.springframework.core.task.TaskTimeoutException", "short_description": " Exception thrown when a  AsyncTaskExecutor  rejects to accept\na given task for execution because of the specified timeout. "},
{"api_id": 1385, "api_type": 2, "full_declaration": "ConcurrentExecutorAdapter", "qualified_name": "org.springframework.core.task.support.ConcurrentExecutorAdapter", "short_description": " Adapter that exposes the  Executor  interface\nfor any Spring  TaskExecutor . "},
{"api_id": 1386, "api_type": 2, "full_declaration": "ExecutorServiceAdapter", "qualified_name": "org.springframework.core.task.support.ExecutorServiceAdapter", "short_description": " Adapter that takes a Spring  TaskExecutor and exposes a full  java.util.concurrent.ExecutorService  for it. "},
{"api_id": 1387, "api_type": 2, "full_declaration": "TaskExecutorAdapter", "qualified_name": "org.springframework.core.task.support.TaskExecutorAdapter", "short_description": " Adapter that takes a JDK  java.util.concurrent.Executor  and\nexposes a Spring  TaskExecutor  for it. "},
{"api_id": 1388, "api_type": 3, "full_declaration": "AnnotatedTypeMetadata", "qualified_name": "org.springframework.core.type.AnnotatedTypeMetadata", "short_description": " Defines access to the annotations of a specific type ( class or  method ), in a form that does not necessarily require the\nclass-loading. "},
{"api_id": 1389, "api_type": 3, "full_declaration": "AnnotationMetadata", "qualified_name": "org.springframework.core.type.AnnotationMetadata", "short_description": " Interface that defines abstract access to the annotations of a specific\nclass, in a form that does not require that class to be loaded yet. "},
{"api_id": 1390, "api_type": 3, "full_declaration": "ClassMetadata", "qualified_name": "org.springframework.core.type.ClassMetadata", "short_description": " Interface that defines abstract metadata of a specific class,\nin a form that does not require that class to be loaded yet. "},
{"api_id": 1391, "api_type": 3, "full_declaration": "MethodMetadata", "qualified_name": "org.springframework.core.type.MethodMetadata", "short_description": " Interface that defines abstract access to the annotations of a specific\nclass, in a form that does not require that class to be loaded yet. "},
{"api_id": 1392, "api_type": 2, "full_declaration": "StandardAnnotationMetadata", "qualified_name": "org.springframework.core.type.StandardAnnotationMetadata", "short_description": " AnnotationMetadata  implementation that uses standard reflection\nto introspect a given  Class . "},
{"api_id": 1393, "api_type": 2, "full_declaration": "StandardClassMetadata", "qualified_name": "org.springframework.core.type.StandardClassMetadata", "short_description": " ClassMetadata  implementation that uses standard reflection\nto introspect a given  Class . "},
{"api_id": 1394, "api_type": 2, "full_declaration": "StandardMethodMetadata", "qualified_name": "org.springframework.core.type.StandardMethodMetadata", "short_description": " MethodMetadata  implementation that uses standard reflection\nto introspect a given  Method . "},
{"api_id": 1395, "api_type": 3, "full_declaration": "MetadataReader", "qualified_name": "org.springframework.core.type.classreading.MetadataReader", "short_description": " Simple facade for accessing class metadata,\nas read by an ASM  ClassReader . "},
{"api_id": 1396, "api_type": 3, "full_declaration": "MetadataReaderFactory", "qualified_name": "org.springframework.core.type.classreading.MetadataReaderFactory", "short_description": " Factory interface for  MetadataReader  instances. "},
{"api_id": 1397, "api_type": 2, "full_declaration": "AnnotationMetadataReadingVisitor", "qualified_name": "org.springframework.core.type.classreading.AnnotationMetadataReadingVisitor", "short_description": "Deprecated As of Spring Framework 5.2, this class has been replaced by SimpleAnnotationMetadataReadingVisitor  for internal use within the\nframework, but there is no public replacement for AnnotationMetadataReadingVisitor . "},
{"api_id": 1398, "api_type": 2, "full_declaration": "CachingMetadataReaderFactory", "qualified_name": "org.springframework.core.type.classreading.CachingMetadataReaderFactory", "short_description": " Caching implementation of the  MetadataReaderFactory  interface,\ncaching a  MetadataReader  instance per Spring  Resource  handle\n(i.e. "},
{"api_id": 1399, "api_type": 2, "full_declaration": "MethodMetadataReadingVisitor", "qualified_name": "org.springframework.core.type.classreading.MethodMetadataReadingVisitor", "short_description": "Deprecated As of Spring Framework 5.2, this class and related classes in this\npackage have been replaced by  SimpleAnnotationMetadataReadingVisitor and related classes for internal use within the framework. "},
{"api_id": 1400, "api_type": 2, "full_declaration": "SimpleMetadataReaderFactory", "qualified_name": "org.springframework.core.type.classreading.SimpleMetadataReaderFactory", "short_description": " Simple implementation of the  MetadataReaderFactory  interface,\ncreating a new ASM  ClassReader  for every request. "},
{"api_id": 1401, "api_type": 3, "full_declaration": "TypeFilter", "qualified_name": "org.springframework.core.type.filter.TypeFilter", "short_description": " Base interface for type filters using a MetadataReader . "},
{"api_id": 1402, "api_type": 2, "full_declaration": "AbstractClassTestingTypeFilter", "qualified_name": "org.springframework.core.type.filter.AbstractClassTestingTypeFilter", "short_description": " Type filter that exposes a ClassMetadata  object\nto subclasses, for class testing purposes. "},
{"api_id": 1403, "api_type": 2, "full_declaration": "AbstractTypeHierarchyTraversingFilter", "qualified_name": "org.springframework.core.type.filter.AbstractTypeHierarchyTraversingFilter", "short_description": " Type filter that is aware of traversing over hierarchy. "},
{"api_id": 1404, "api_type": 2, "full_declaration": "AnnotationTypeFilter", "qualified_name": "org.springframework.core.type.filter.AnnotationTypeFilter", "short_description": " A simple  TypeFilter  which matches classes with a given annotation,\nchecking inherited annotations as well. "},
{"api_id": 1405, "api_type": 2, "full_declaration": "AspectJTypeFilter", "qualified_name": "org.springframework.core.type.filter.AspectJTypeFilter", "short_description": " Type filter that uses AspectJ type pattern for matching. "},
{"api_id": 1406, "api_type": 2, "full_declaration": "AssignableTypeFilter", "qualified_name": "org.springframework.core.type.filter.AssignableTypeFilter", "short_description": " A simple filter which matches classes that are assignable to a given type. "},
{"api_id": 1407, "api_type": 2, "full_declaration": "RegexPatternTypeFilter", "qualified_name": "org.springframework.core.type.filter.RegexPatternTypeFilter", "short_description": " A simple filter for matching a fully-qualified class name with a regex  Pattern . "},
{"api_id": 1408, "api_type": 4, "full_declaration": "CannotAcquireLockException", "qualified_name": "org.springframework.dao.CannotAcquireLockException", "short_description": " Exception thrown on failure to acquire a lock during an update,\nfor example during a \"select for update\" statement. "},
{"api_id": 1409, "api_type": 4, "full_declaration": "CannotSerializeTransactionException", "qualified_name": "org.springframework.dao.CannotSerializeTransactionException", "short_description": " Exception thrown on failure to complete a transaction in serialized mode\ndue to update conflicts. "},
{"api_id": 1410, "api_type": 4, "full_declaration": "CleanupFailureDataAccessException", "qualified_name": "org.springframework.dao.CleanupFailureDataAccessException", "short_description": " Exception thrown when we couldn't cleanup after a data access operation,\nbut the actual operation went OK. "},
{"api_id": 1411, "api_type": 4, "full_declaration": "ConcurrencyFailureException", "qualified_name": "org.springframework.dao.ConcurrencyFailureException", "short_description": " Exception thrown on concurrency failure. "},
{"api_id": 1412, "api_type": 4, "full_declaration": "DataAccessException", "qualified_name": "org.springframework.dao.DataAccessException", "short_description": " Root of the hierarchy of data access exceptions discussed in Expert One-On-One J2EE Design and Development . "},
{"api_id": 1413, "api_type": 4, "full_declaration": "DataAccessResourceFailureException", "qualified_name": "org.springframework.dao.DataAccessResourceFailureException", "short_description": " Data access exception thrown when a resource fails completely:\nfor example, if we can't connect to a database using JDBC. "},
{"api_id": 1414, "api_type": 4, "full_declaration": "DataIntegrityViolationException", "qualified_name": "org.springframework.dao.DataIntegrityViolationException", "short_description": " Exception thrown when an attempt to insert or update data\nresults in violation of an integrity constraint. "},
{"api_id": 1415, "api_type": 4, "full_declaration": "DataRetrievalFailureException", "qualified_name": "org.springframework.dao.DataRetrievalFailureException", "short_description": " Exception thrown if certain expected data could not be retrieved, e.g. "},
{"api_id": 1416, "api_type": 4, "full_declaration": "DeadlockLoserDataAccessException", "qualified_name": "org.springframework.dao.DeadlockLoserDataAccessException", "short_description": " Generic exception thrown when the current process was\na deadlock loser, and its transaction rolled back. "},
{"api_id": 1417, "api_type": 4, "full_declaration": "DuplicateKeyException", "qualified_name": "org.springframework.dao.DuplicateKeyException", "short_description": " Exception thrown when an attempt to insert or update data\nresults in violation of an primary key or unique constraint. "},
{"api_id": 1418, "api_type": 4, "full_declaration": "EmptyResultDataAccessException", "qualified_name": "org.springframework.dao.EmptyResultDataAccessException", "short_description": " Data access exception thrown when a result was expected to have at least\none row (or element) but zero rows (or elements) were actually returned. "},
{"api_id": 1419, "api_type": 4, "full_declaration": "IncorrectResultSizeDataAccessException", "qualified_name": "org.springframework.dao.IncorrectResultSizeDataAccessException", "short_description": " Data access exception thrown when a result was not of the expected size,\nfor example when expecting a single row but getting 0 or more than 1 rows. "},
{"api_id": 1420, "api_type": 4, "full_declaration": "IncorrectUpdateSemanticsDataAccessException", "qualified_name": "org.springframework.dao.IncorrectUpdateSemanticsDataAccessException", "short_description": " Data access exception thrown when something unintended appears to have\nhappened with an update, but the transaction hasn't already been rolled back. "},
{"api_id": 1421, "api_type": 4, "full_declaration": "InvalidDataAccessApiUsageException", "qualified_name": "org.springframework.dao.InvalidDataAccessApiUsageException", "short_description": " Exception thrown on incorrect usage of the API, such as failing to\n\"compile\" a query object that needed compilation before execution. "},
{"api_id": 1422, "api_type": 4, "full_declaration": "InvalidDataAccessResourceUsageException", "qualified_name": "org.springframework.dao.InvalidDataAccessResourceUsageException", "short_description": " Root for exceptions thrown when we use a data access resource incorrectly. "},
{"api_id": 1423, "api_type": 4, "full_declaration": "NonTransientDataAccessException", "qualified_name": "org.springframework.dao.NonTransientDataAccessException", "short_description": " Root of the hierarchy of data access exceptions that are considered non-transient -\nwhere a retry of the same operation would fail unless the cause of the Exception\nis corrected. "},
{"api_id": 1424, "api_type": 4, "full_declaration": "NonTransientDataAccessResourceException", "qualified_name": "org.springframework.dao.NonTransientDataAccessResourceException", "short_description": " Data access exception thrown when a resource fails completely and the failure is permanent. "},
{"api_id": 1425, "api_type": 4, "full_declaration": "OptimisticLockingFailureException", "qualified_name": "org.springframework.dao.OptimisticLockingFailureException", "short_description": " Exception thrown on an optimistic locking violation. "},
{"api_id": 1426, "api_type": 4, "full_declaration": "PermissionDeniedDataAccessException", "qualified_name": "org.springframework.dao.PermissionDeniedDataAccessException", "short_description": " Exception thrown when the underlying resource denied a permission\nto access a specific element, such as a specific database table. "},
{"api_id": 1427, "api_type": 4, "full_declaration": "PessimisticLockingFailureException", "qualified_name": "org.springframework.dao.PessimisticLockingFailureException", "short_description": " Exception thrown on a pessimistic locking violation. "},
{"api_id": 1428, "api_type": 4, "full_declaration": "QueryTimeoutException", "qualified_name": "org.springframework.dao.QueryTimeoutException", "short_description": " Exception to be thrown on a query timeout. "},
{"api_id": 1429, "api_type": 4, "full_declaration": "RecoverableDataAccessException", "qualified_name": "org.springframework.dao.RecoverableDataAccessException", "short_description": " Data access exception thrown when a previously failed operation might be able\nto succeed if the application performs some recovery steps and retries the entire\ntransaction or in the case of a distributed transaction, the transaction branch. "},
{"api_id": 1430, "api_type": 4, "full_declaration": "TransientDataAccessException", "qualified_name": "org.springframework.dao.TransientDataAccessException", "short_description": " Root of the hierarchy of data access exceptions that are considered transient -\nwhere a previously failed operation might be able to succeed when the operation\nis retried without any intervention by application-level functionality. "},
{"api_id": 1431, "api_type": 4, "full_declaration": "TransientDataAccessResourceException", "qualified_name": "org.springframework.dao.TransientDataAccessResourceException", "short_description": " Data access exception thrown when a resource fails temporarily\nand the operation can be retried. "},
{"api_id": 1432, "api_type": 4, "full_declaration": "TypeMismatchDataAccessException", "qualified_name": "org.springframework.dao.TypeMismatchDataAccessException", "short_description": " Exception thrown on mismatch between Java type and database type:\nfor example on an attempt to set an object of the wrong type\nin an RDBMS column. "},
{"api_id": 1433, "api_type": 4, "full_declaration": "UncategorizedDataAccessException", "qualified_name": "org.springframework.dao.UncategorizedDataAccessException", "short_description": " Normal superclass when we can't distinguish anything more specific\nthan \"something went wrong with the underlying resource\": for example,\nan SQLException from JDBC we can't pinpoint more precisely. "},
{"api_id": 1434, "api_type": 2, "full_declaration": "PersistenceExceptionTranslationAdvisor", "qualified_name": "org.springframework.dao.annotation.PersistenceExceptionTranslationAdvisor", "short_description": " Spring AOP exception translation aspect for use at Repository or DAO layer level. "},
{"api_id": 1435, "api_type": 2, "full_declaration": "PersistenceExceptionTranslationPostProcessor", "qualified_name": "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor", "short_description": " Bean post-processor that automatically applies persistence exception translation to any\nbean marked with Spring's @ Repository annotation, adding a corresponding  PersistenceExceptionTranslationAdvisor  to\nthe exposed proxy (either an existing AOP proxy or a newly generated proxy that\nimplements all of the target's interfaces). "},
{"api_id": 1436, "api_type": 3, "full_declaration": "PersistenceExceptionTranslator", "qualified_name": "org.springframework.dao.support.PersistenceExceptionTranslator", "short_description": " Interface implemented by Spring integrations with data access technologies\nthat throw runtime exceptions, such as JPA and Hibernate. "},
{"api_id": 1437, "api_type": 2, "full_declaration": "ChainedPersistenceExceptionTranslator", "qualified_name": "org.springframework.dao.support.ChainedPersistenceExceptionTranslator", "short_description": " Implementation of  PersistenceExceptionTranslator  that supports chaining,\nallowing the addition of PersistenceExceptionTranslator instances in order. "},
{"api_id": 1438, "api_type": 2, "full_declaration": "DaoSupport", "qualified_name": "org.springframework.dao.support.DaoSupport", "short_description": " Generic base class for DAOs, defining template methods for DAO initialization. "},
{"api_id": 1439, "api_type": 2, "full_declaration": "DataAccessUtils", "qualified_name": "org.springframework.dao.support.DataAccessUtils", "short_description": " Miscellaneous utility methods for DAO implementations. "},
{"api_id": 1440, "api_type": 2, "full_declaration": "PersistenceExceptionTranslationInterceptor", "qualified_name": "org.springframework.dao.support.PersistenceExceptionTranslationInterceptor", "short_description": " AOP Alliance MethodInterceptor that provides persistence exception translation\nbased on a given PersistenceExceptionTranslator. "},
{"api_id": 1441, "api_type": 2, "full_declaration": "AbstractRemoteSlsbInvokerInterceptor", "qualified_name": "org.springframework.ejb.access.AbstractRemoteSlsbInvokerInterceptor", "short_description": " Base class for interceptors proxying remote Stateless Session Beans. "},
{"api_id": 1442, "api_type": 2, "full_declaration": "AbstractSlsbInvokerInterceptor", "qualified_name": "org.springframework.ejb.access.AbstractSlsbInvokerInterceptor", "short_description": " Base class for AOP interceptors invoking local or remote Stateless Session Beans. "},
{"api_id": 1443, "api_type": 2, "full_declaration": "LocalSlsbInvokerInterceptor", "qualified_name": "org.springframework.ejb.access.LocalSlsbInvokerInterceptor", "short_description": " Invoker for a local Stateless Session Bean. "},
{"api_id": 1444, "api_type": 2, "full_declaration": "LocalStatelessSessionProxyFactoryBean", "qualified_name": "org.springframework.ejb.access.LocalStatelessSessionProxyFactoryBean", "short_description": " Convenient  FactoryBean  for local Stateless Session Bean (SLSB) proxies. "},
{"api_id": 1445, "api_type": 2, "full_declaration": "SimpleRemoteSlsbInvokerInterceptor", "qualified_name": "org.springframework.ejb.access.SimpleRemoteSlsbInvokerInterceptor", "short_description": " Basic invoker for a remote Stateless Session Bean. "},
{"api_id": 1446, "api_type": 2, "full_declaration": "SimpleRemoteStatelessSessionProxyFactoryBean", "qualified_name": "org.springframework.ejb.access.SimpleRemoteStatelessSessionProxyFactoryBean", "short_description": " Convenient  FactoryBean  for remote SLSB proxies. "},
{"api_id": 1447, "api_type": 4, "full_declaration": "EjbAccessException", "qualified_name": "org.springframework.ejb.access.EjbAccessException", "short_description": " Exception that gets thrown when an EJB stub cannot be accessed properly. "},
{"api_id": 1448, "api_type": 2, "full_declaration": "JeeNamespaceHandler", "qualified_name": "org.springframework.ejb.config.JeeNamespaceHandler", "short_description": " NamespaceHandler for the ' jee ' namespace. "},
{"api_id": 1449, "api_type": 3, "full_declaration": "BeanResolver", "qualified_name": "org.springframework.expression.BeanResolver", "short_description": " A bean resolver can be registered with the evaluation context and will kick in\nfor bean references:  @myBeanName  and  &myBeanName  expressions. "},
{"api_id": 1450, "api_type": 3, "full_declaration": "ConstructorExecutor", "qualified_name": "org.springframework.expression.ConstructorExecutor", "short_description": " Executors are built by resolvers and can be cached by the infrastructure to repeat an\noperation quickly without going back to the resolvers. "},
{"api_id": 1451, "api_type": 3, "full_declaration": "ConstructorResolver", "qualified_name": "org.springframework.expression.ConstructorResolver", "short_description": " A constructor resolver attempts locate a constructor and returns a ConstructorExecutor\nthat can be used to invoke that constructor. "},
{"api_id": 1452, "api_type": 3, "full_declaration": "EvaluationContext", "qualified_name": "org.springframework.expression.EvaluationContext", "short_description": " Expressions are executed in an evaluation context. "},
{"api_id": 1453, "api_type": 3, "full_declaration": "Expression", "qualified_name": "org.springframework.expression.Expression", "short_description": " An expression capable of evaluating itself against context objects. "},
{"api_id": 1454, "api_type": 3, "full_declaration": "ExpressionParser", "qualified_name": "org.springframework.expression.ExpressionParser", "short_description": " Parses expression strings into compiled expressions that can be evaluated. "},
{"api_id": 1455, "api_type": 3, "full_declaration": "MethodExecutor", "qualified_name": "org.springframework.expression.MethodExecutor", "short_description": " MethodExecutors are built by the resolvers and can be cached by the infrastructure to\nrepeat an operation quickly without going back to the resolvers. "},
{"api_id": 1456, "api_type": 3, "full_declaration": "MethodFilter", "qualified_name": "org.springframework.expression.MethodFilter", "short_description": " MethodFilter instances allow SpEL users to fine tune the behaviour of the method\nresolution process. "},
{"api_id": 1457, "api_type": 3, "full_declaration": "MethodResolver", "qualified_name": "org.springframework.expression.MethodResolver", "short_description": " A method resolver attempts locate a method and returns a command executor that can be\nused to invoke that method. "},
{"api_id": 1458, "api_type": 3, "full_declaration": "OperatorOverloader", "qualified_name": "org.springframework.expression.OperatorOverloader", "short_description": " By default the mathematical operators  Operation  support simple types\nlike numbers. "},
{"api_id": 1459, "api_type": 3, "full_declaration": "ParserContext", "qualified_name": "org.springframework.expression.ParserContext", "short_description": " Input provided to an expression parser that can influence an expression\nparsing/compilation routine. "},
{"api_id": 1460, "api_type": 3, "full_declaration": "PropertyAccessor", "qualified_name": "org.springframework.expression.PropertyAccessor", "short_description": " A property accessor is able to read from (and possibly write to) an object's properties. "},
{"api_id": 1461, "api_type": 3, "full_declaration": "TypeComparator", "qualified_name": "org.springframework.expression.TypeComparator", "short_description": " Instances of a type comparator should be able to compare pairs of objects for equality. "},
{"api_id": 1462, "api_type": 3, "full_declaration": "TypeConverter", "qualified_name": "org.springframework.expression.TypeConverter", "short_description": " A type converter can convert values between different types encountered during\nexpression evaluation. "},
{"api_id": 1463, "api_type": 3, "full_declaration": "TypeLocator", "qualified_name": "org.springframework.expression.TypeLocator", "short_description": " Implementers of this interface are expected to be able to locate types. "},
{"api_id": 1464, "api_type": 2, "full_declaration": "TypedValue", "qualified_name": "org.springframework.expression.TypedValue", "short_description": " Encapsulates an object and a  TypeDescriptor  that describes it. "},
{"api_id": 1465, "api_type": 8, "full_declaration": "Operation", "qualified_name": "org.springframework.expression.Operation", "short_description": " Supported operations that an  OperatorOverloader  can implement for any pair of\noperands. "},
{"api_id": 1466, "api_type": 4, "full_declaration": "AccessException", "qualified_name": "org.springframework.expression.AccessException", "short_description": " An AccessException is thrown by an accessor if it has an unexpected problem. "},
{"api_id": 1467, "api_type": 4, "full_declaration": "EvaluationException", "qualified_name": "org.springframework.expression.EvaluationException", "short_description": " Represent an exception that occurs during expression evaluation. "},
{"api_id": 1468, "api_type": 4, "full_declaration": "ExpressionException", "qualified_name": "org.springframework.expression.ExpressionException", "short_description": " Super class for exceptions that can occur whilst processing expressions. "},
{"api_id": 1469, "api_type": 4, "full_declaration": "ExpressionInvocationTargetException", "qualified_name": "org.springframework.expression.ExpressionInvocationTargetException", "short_description": " This exception wraps (as cause) a checked exception thrown by some method that SpEL\ninvokes. "},
{"api_id": 1470, "api_type": 4, "full_declaration": "ParseException", "qualified_name": "org.springframework.expression.ParseException", "short_description": " Represent an exception that occurs during expression parsing. "},
{"api_id": 1471, "api_type": 2, "full_declaration": "CompositeStringExpression", "qualified_name": "org.springframework.expression.common.CompositeStringExpression", "short_description": " Represents a template expression broken into pieces. "},
{"api_id": 1472, "api_type": 2, "full_declaration": "ExpressionUtils", "qualified_name": "org.springframework.expression.common.ExpressionUtils", "short_description": " Common utility functions that may be used by any Expression Language provider. "},
{"api_id": 1473, "api_type": 2, "full_declaration": "LiteralExpression", "qualified_name": "org.springframework.expression.common.LiteralExpression", "short_description": " A very simple hardcoded implementation of the Expression interface that represents a\nstring literal. "},
{"api_id": 1474, "api_type": 2, "full_declaration": "TemplateAwareExpressionParser", "qualified_name": "org.springframework.expression.common.TemplateAwareExpressionParser", "short_description": " An expression parser that understands templates. "},
{"api_id": 1475, "api_type": 2, "full_declaration": "TemplateParserContext", "qualified_name": "org.springframework.expression.common.TemplateParserContext", "short_description": " Configurable  ParserContext  implementation for template parsing. "},
{"api_id": 1476, "api_type": 3, "full_declaration": "CodeFlow.ClinitAdder", "qualified_name": "org.springframework.expression.spel.CodeFlow.ClinitAdder", "short_description": " Interface used to generate  clinit  static initializer blocks. "},
{"api_id": 1477, "api_type": 3, "full_declaration": "CodeFlow.FieldAdder", "qualified_name": "org.springframework.expression.spel.CodeFlow.FieldAdder", "short_description": " Interface used to generate fields. "},
{"api_id": 1478, "api_type": 3, "full_declaration": "CompilablePropertyAccessor", "qualified_name": "org.springframework.expression.spel.CompilablePropertyAccessor", "short_description": " A compilable property accessor is able to generate bytecode that represents\nthe access operation, facilitating compilation to bytecode of expressions\nthat use the accessor. "},
{"api_id": 1479, "api_type": 3, "full_declaration": "SpelNode", "qualified_name": "org.springframework.expression.spel.SpelNode", "short_description": " Represents a node in the AST for a parsed expression. "},
{"api_id": 1480, "api_type": 2, "full_declaration": "CodeFlow", "qualified_name": "org.springframework.expression.spel.CodeFlow", "short_description": " Manages the class being generated by the compilation process. "},
{"api_id": 1481, "api_type": 2, "full_declaration": "CompiledExpression", "qualified_name": "org.springframework.expression.spel.CompiledExpression", "short_description": " Base superclass for compiled expressions. "},
{"api_id": 1482, "api_type": 2, "full_declaration": "ExpressionState", "qualified_name": "org.springframework.expression.spel.ExpressionState", "short_description": " An ExpressionState is for maintaining per-expression-evaluation state, any changes to\nit are not seen by other expressions but it gives a place to hold local variables and\nfor component expressions in a compound expression to communicate state. "},
{"api_id": 1483, "api_type": 2, "full_declaration": "SpelParserConfiguration", "qualified_name": "org.springframework.expression.spel.SpelParserConfiguration", "short_description": " Configuration object for the SpEL expression parser. "},
{"api_id": 1484, "api_type": 8, "full_declaration": "SpelCompilerMode", "qualified_name": "org.springframework.expression.spel.SpelCompilerMode", "short_description": " Captures the possible configuration settings for a compiler that can be\nused when evaluating expressions. "},
{"api_id": 1485, "api_type": 8, "full_declaration": "SpelMessage", "qualified_name": "org.springframework.expression.spel.SpelMessage", "short_description": " Contains all the messages that can be produced by the Spring Expression Language. "},
{"api_id": 1486, "api_type": 8, "full_declaration": "SpelMessage.Kind", "qualified_name": "org.springframework.expression.spel.SpelMessage.Kind", "short_description": " Message kinds. "},
{"api_id": 1487, "api_type": 4, "full_declaration": "InternalParseException", "qualified_name": "org.springframework.expression.spel.InternalParseException", "short_description": " Wraps a real parse exception. "},
{"api_id": 1488, "api_type": 4, "full_declaration": "SpelEvaluationException", "qualified_name": "org.springframework.expression.spel.SpelEvaluationException", "short_description": " Root exception for Spring EL related exceptions. "},
{"api_id": 1489, "api_type": 4, "full_declaration": "SpelParseException", "qualified_name": "org.springframework.expression.spel.SpelParseException", "short_description": " Root exception for Spring EL related exceptions. "},
{"api_id": 1490, "api_type": 3, "full_declaration": "ValueRef", "qualified_name": "org.springframework.expression.spel.ast.ValueRef", "short_description": " Represents a reference to a value. "},
{"api_id": 1491, "api_type": 2, "full_declaration": "Assign", "qualified_name": "org.springframework.expression.spel.ast.Assign", "short_description": " Represents assignment. "},
{"api_id": 1492, "api_type": 2, "full_declaration": "AstUtils", "qualified_name": "org.springframework.expression.spel.ast.AstUtils", "short_description": " Utilities methods for use in the Ast classes. "},
{"api_id": 1493, "api_type": 2, "full_declaration": "BeanReference", "qualified_name": "org.springframework.expression.spel.ast.BeanReference", "short_description": " Represents a bean reference to a type, for example  @foo  or  @'foo.bar' . "},
{"api_id": 1494, "api_type": 2, "full_declaration": "BooleanLiteral", "qualified_name": "org.springframework.expression.spel.ast.BooleanLiteral", "short_description": " Represents the literal values  TRUE  and  FALSE . "},
{"api_id": 1495, "api_type": 2, "full_declaration": "CompoundExpression", "qualified_name": "org.springframework.expression.spel.ast.CompoundExpression", "short_description": " Represents a DOT separated expression sequence, such as 'property1.property2.methodOne()' . "},
{"api_id": 1496, "api_type": 2, "full_declaration": "ConstructorReference", "qualified_name": "org.springframework.expression.spel.ast.ConstructorReference", "short_description": " Represents the invocation of a constructor. "},
{"api_id": 1497, "api_type": 2, "full_declaration": "Elvis", "qualified_name": "org.springframework.expression.spel.ast.Elvis", "short_description": " Represents the elvis operator ?:. "},
{"api_id": 1498, "api_type": 2, "full_declaration": "FloatLiteral", "qualified_name": "org.springframework.expression.spel.ast.FloatLiteral", "short_description": " Expression language AST node that represents a float literal. "},
{"api_id": 1499, "api_type": 2, "full_declaration": "FunctionReference", "qualified_name": "org.springframework.expression.spel.ast.FunctionReference", "short_description": " A function reference is of the form \"#someFunction(a,b,c)\". "},
{"api_id": 1500, "api_type": 2, "full_declaration": "Identifier", "qualified_name": "org.springframework.expression.spel.ast.Identifier", "short_description": " An 'identifier'  SpelNode . "},
{"api_id": 1501, "api_type": 2, "full_declaration": "Indexer", "qualified_name": "org.springframework.expression.spel.ast.Indexer", "short_description": " An Indexer can index into some proceeding structure to access a particular piece of it. "},
{"api_id": 1502, "api_type": 2, "full_declaration": "InlineList", "qualified_name": "org.springframework.expression.spel.ast.InlineList", "short_description": " Represent a list in an expression, e.g. "},
{"api_id": 1503, "api_type": 2, "full_declaration": "InlineMap", "qualified_name": "org.springframework.expression.spel.ast.InlineMap", "short_description": " Represent a map in an expression, e.g. "},
{"api_id": 1504, "api_type": 2, "full_declaration": "IntLiteral", "qualified_name": "org.springframework.expression.spel.ast.IntLiteral", "short_description": " Expression language AST node that represents an integer literal. "},
{"api_id": 1505, "api_type": 2, "full_declaration": "Literal", "qualified_name": "org.springframework.expression.spel.ast.Literal", "short_description": " Common superclass for nodes representing literals (boolean, string, number, etc). "},
{"api_id": 1506, "api_type": 2, "full_declaration": "LongLiteral", "qualified_name": "org.springframework.expression.spel.ast.LongLiteral", "short_description": " Expression language AST node that represents a long integer literal. "},
{"api_id": 1507, "api_type": 2, "full_declaration": "MethodReference", "qualified_name": "org.springframework.expression.spel.ast.MethodReference", "short_description": " Expression language AST node that represents a method reference. "},
{"api_id": 1508, "api_type": 2, "full_declaration": "NullLiteral", "qualified_name": "org.springframework.expression.spel.ast.NullLiteral", "short_description": " Expression language AST node that represents null. "},
{"api_id": 1509, "api_type": 2, "full_declaration": "OpAnd", "qualified_name": "org.springframework.expression.spel.ast.OpAnd", "short_description": " Represents the boolean AND operation. "},
{"api_id": 1510, "api_type": 2, "full_declaration": "OpDec", "qualified_name": "org.springframework.expression.spel.ast.OpDec", "short_description": " Decrement operator. "},
{"api_id": 1511, "api_type": 2, "full_declaration": "OpDivide", "qualified_name": "org.springframework.expression.spel.ast.OpDivide", "short_description": " Implements division operator. "},
{"api_id": 1512, "api_type": 2, "full_declaration": "OpEQ", "qualified_name": "org.springframework.expression.spel.ast.OpEQ", "short_description": " Implements the equality operator. "},
{"api_id": 1513, "api_type": 2, "full_declaration": "Operator", "qualified_name": "org.springframework.expression.spel.ast.Operator", "short_description": " Common supertype for operators that operate on either one or two operands. "},
{"api_id": 1514, "api_type": 2, "full_declaration": "Operator.DescriptorComparison", "qualified_name": "org.springframework.expression.spel.ast.Operator.DescriptorComparison", "short_description": " A descriptor comparison encapsulates the result of comparing descriptor\nfor two operands and describes at what level they are compatible. "},
{"api_id": 1515, "api_type": 2, "full_declaration": "OperatorBetween", "qualified_name": "org.springframework.expression.spel.ast.OperatorBetween", "short_description": " Represents the between operator. "},
{"api_id": 1516, "api_type": 2, "full_declaration": "OperatorInstanceof", "qualified_name": "org.springframework.expression.spel.ast.OperatorInstanceof", "short_description": " The operator 'instanceof' checks if an object is of the class specified in the right\nhand operand, in the same way that  instanceof  does in Java. "},
{"api_id": 1517, "api_type": 2, "full_declaration": "OperatorMatches", "qualified_name": "org.springframework.expression.spel.ast.OperatorMatches", "short_description": " Implements the matches operator. "},
{"api_id": 1518, "api_type": 2, "full_declaration": "OperatorNot", "qualified_name": "org.springframework.expression.spel.ast.OperatorNot", "short_description": " Represents a NOT operation. "},
{"api_id": 1519, "api_type": 2, "full_declaration": "OperatorPower", "qualified_name": "org.springframework.expression.spel.ast.OperatorPower", "short_description": " The power operator. "},
{"api_id": 1520, "api_type": 2, "full_declaration": "OpGE", "qualified_name": "org.springframework.expression.spel.ast.OpGE", "short_description": " Implements greater-than-or-equal operator. "},
{"api_id": 1521, "api_type": 2, "full_declaration": "OpGT", "qualified_name": "org.springframework.expression.spel.ast.OpGT", "short_description": " Implements the greater-than operator. "},
{"api_id": 1522, "api_type": 2, "full_declaration": "OpInc", "qualified_name": "org.springframework.expression.spel.ast.OpInc", "short_description": " Increment operator. "},
{"api_id": 1523, "api_type": 2, "full_declaration": "OpLE", "qualified_name": "org.springframework.expression.spel.ast.OpLE", "short_description": " Implements the less-than-or-equal operator. "},
{"api_id": 1524, "api_type": 2, "full_declaration": "OpLT", "qualified_name": "org.springframework.expression.spel.ast.OpLT", "short_description": " Implements the less-than operator. "},
{"api_id": 1525, "api_type": 2, "full_declaration": "OpMinus", "qualified_name": "org.springframework.expression.spel.ast.OpMinus", "short_description": " The minus operator supports:\nsubtraction of numbers\nsubtraction of an int from a string of one character\n(effectively decreasing that character), so 'd'-3='a' "},
{"api_id": 1526, "api_type": 2, "full_declaration": "OpModulus", "qualified_name": "org.springframework.expression.spel.ast.OpModulus", "short_description": " Implements the modulus operator. "},
{"api_id": 1527, "api_type": 2, "full_declaration": "OpMultiply", "qualified_name": "org.springframework.expression.spel.ast.OpMultiply", "short_description": " Implements the  multiply  operator. "},
{"api_id": 1528, "api_type": 2, "full_declaration": "OpNE", "qualified_name": "org.springframework.expression.spel.ast.OpNE", "short_description": " Implements the not-equal operator. "},
{"api_id": 1529, "api_type": 2, "full_declaration": "OpOr", "qualified_name": "org.springframework.expression.spel.ast.OpOr", "short_description": " Represents the boolean OR operation. "},
{"api_id": 1530, "api_type": 2, "full_declaration": "OpPlus", "qualified_name": "org.springframework.expression.spel.ast.OpPlus", "short_description": " The plus operator will:\nadd numbers\nconcatenate strings "},
{"api_id": 1531, "api_type": 2, "full_declaration": "Projection", "qualified_name": "org.springframework.expression.spel.ast.Projection", "short_description": " Represents projection, where a given operation is performed on all elements in some\ninput sequence, returning a new sequence of the same size. "},
{"api_id": 1532, "api_type": 2, "full_declaration": "PropertyOrFieldReference", "qualified_name": "org.springframework.expression.spel.ast.PropertyOrFieldReference", "short_description": " Represents a simple property or field reference. "},
{"api_id": 1533, "api_type": 2, "full_declaration": "QualifiedIdentifier", "qualified_name": "org.springframework.expression.spel.ast.QualifiedIdentifier", "short_description": " Represents a dot separated sequence of strings that indicate a package qualified type\nreference. "},
{"api_id": 1534, "api_type": 2, "full_declaration": "RealLiteral", "qualified_name": "org.springframework.expression.spel.ast.RealLiteral", "short_description": " Expression language AST node that represents a real literal. "},
{"api_id": 1535, "api_type": 2, "full_declaration": "Selection", "qualified_name": "org.springframework.expression.spel.ast.Selection", "short_description": " Represents selection over a map or collection. "},
{"api_id": 1536, "api_type": 2, "full_declaration": "SpelNodeImpl", "qualified_name": "org.springframework.expression.spel.ast.SpelNodeImpl", "short_description": " The common supertype of all AST nodes in a parsed Spring Expression Language\nformat expression. "},
{"api_id": 1537, "api_type": 2, "full_declaration": "StringLiteral", "qualified_name": "org.springframework.expression.spel.ast.StringLiteral", "short_description": " Expression language AST node that represents a string literal. "},
{"api_id": 1538, "api_type": 2, "full_declaration": "Ternary", "qualified_name": "org.springframework.expression.spel.ast.Ternary", "short_description": " Represents a ternary expression, for example: \"someCheck()?true:false\". "},
{"api_id": 1539, "api_type": 2, "full_declaration": "TypeReference", "qualified_name": "org.springframework.expression.spel.ast.TypeReference", "short_description": " Represents a reference to a type, for example \"T(String)\" or \"T(com.somewhere.Foo)\" . "},
{"api_id": 1540, "api_type": 2, "full_declaration": "ValueRef.NullValueRef", "qualified_name": "org.springframework.expression.spel.ast.ValueRef.NullValueRef", "short_description": " A ValueRef for the null value. "},
{"api_id": 1541, "api_type": 2, "full_declaration": "ValueRef.TypedValueHolderValueRef", "qualified_name": "org.springframework.expression.spel.ast.ValueRef.TypedValueHolderValueRef", "short_description": " A ValueRef holder for a single value, which cannot be set. "},
{"api_id": 1542, "api_type": 2, "full_declaration": "VariableReference", "qualified_name": "org.springframework.expression.spel.ast.VariableReference", "short_description": " Represents a variable reference, eg. "},
{"api_id": 1543, "api_type": 8, "full_declaration": "TypeCode", "qualified_name": "org.springframework.expression.spel.ast.TypeCode", "short_description": " Captures primitive types and their corresponding class objects, plus one special entry\nthat represents all reference (non-primitive) types. "},
{"api_id": 1544, "api_type": 2, "full_declaration": "SpelCompiler", "qualified_name": "org.springframework.expression.spel.standard.SpelCompiler", "short_description": " A SpelCompiler will take a regular parsed expression and create (and load) a class\ncontaining byte code that does the same thing as that expression. "},
{"api_id": 1545, "api_type": 2, "full_declaration": "SpelExpression", "qualified_name": "org.springframework.expression.spel.standard.SpelExpression", "short_description": " A  SpelExpression  represents a parsed (valid) expression that is ready to be\nevaluated in a specified context. "},
{"api_id": 1546, "api_type": 2, "full_declaration": "SpelExpressionParser", "qualified_name": "org.springframework.expression.spel.standard.SpelExpressionParser", "short_description": " SpEL parser. "},
{"api_id": 1547, "api_type": 2, "full_declaration": "BooleanTypedValue", "qualified_name": "org.springframework.expression.spel.support.BooleanTypedValue", "short_description": " A  TypedValue  for booleans. "},
{"api_id": 1548, "api_type": 2, "full_declaration": "DataBindingMethodResolver", "qualified_name": "org.springframework.expression.spel.support.DataBindingMethodResolver", "short_description": " A  MethodResolver  variant for data binding\npurposes, using reflection to access instance methods on a given target object. "},
{"api_id": 1549, "api_type": 2, "full_declaration": "DataBindingPropertyAccessor", "qualified_name": "org.springframework.expression.spel.support.DataBindingPropertyAccessor", "short_description": " A  PropertyAccessor  variant for data binding\npurposes, using reflection to access properties for reading and possibly writing. "},
{"api_id": 1550, "api_type": 2, "full_declaration": "ReflectionHelper", "qualified_name": "org.springframework.expression.spel.support.ReflectionHelper", "short_description": " Utility methods used by the reflection resolver code to discover the appropriate\nmethods/constructors and fields that should be used in expressions. "},
{"api_id": 1551, "api_type": 2, "full_declaration": "ReflectiveConstructorExecutor", "qualified_name": "org.springframework.expression.spel.support.ReflectiveConstructorExecutor", "short_description": " A simple ConstructorExecutor implementation that runs a constructor using reflective\ninvocation. "},
{"api_id": 1552, "api_type": 2, "full_declaration": "ReflectiveConstructorResolver", "qualified_name": "org.springframework.expression.spel.support.ReflectiveConstructorResolver", "short_description": " A constructor resolver that uses reflection to locate the constructor that should be invoked. "},
{"api_id": 1553, "api_type": 2, "full_declaration": "ReflectiveMethodExecutor", "qualified_name": "org.springframework.expression.spel.support.ReflectiveMethodExecutor", "short_description": " MethodExecutor  that works via reflection. "},
{"api_id": 1554, "api_type": 2, "full_declaration": "ReflectiveMethodResolver", "qualified_name": "org.springframework.expression.spel.support.ReflectiveMethodResolver", "short_description": " Reflection-based  MethodResolver  used by default in  StandardEvaluationContext unless explicit method resolvers have been specified. "},
{"api_id": 1555, "api_type": 2, "full_declaration": "ReflectivePropertyAccessor", "qualified_name": "org.springframework.expression.spel.support.ReflectivePropertyAccessor", "short_description": " A powerful  PropertyAccessor  that uses reflection to access properties\nfor reading and possibly also for writing. "},
{"api_id": 1556, "api_type": 2, "full_declaration": "ReflectivePropertyAccessor.OptimalPropertyAccessor", "qualified_name": "org.springframework.expression.spel.support.ReflectivePropertyAccessor.OptimalPropertyAccessor", "short_description": " An optimized form of a PropertyAccessor that will use reflection but only knows\nhow to access a particular property on a particular class. "},
{"api_id": 1557, "api_type": 2, "full_declaration": "SimpleEvaluationContext", "qualified_name": "org.springframework.expression.spel.support.SimpleEvaluationContext", "short_description": " A basic implementation of  EvaluationContext  that focuses on a subset\nof essential SpEL features and customization options, targeting simple\ncondition evaluation and in particular data binding scenarios. "},
{"api_id": 1558, "api_type": 2, "full_declaration": "SimpleEvaluationContext.Builder", "qualified_name": "org.springframework.expression.spel.support.SimpleEvaluationContext.Builder", "short_description": " Builder for  SimpleEvaluationContext . "},
{"api_id": 1559, "api_type": 2, "full_declaration": "StandardEvaluationContext", "qualified_name": "org.springframework.expression.spel.support.StandardEvaluationContext", "short_description": " A powerful and highly configurable  EvaluationContext  implementation. "},
{"api_id": 1560, "api_type": 2, "full_declaration": "StandardOperatorOverloader", "qualified_name": "org.springframework.expression.spel.support.StandardOperatorOverloader", "short_description": " Standard implementation of  OperatorOverloader . "},
{"api_id": 1561, "api_type": 2, "full_declaration": "StandardTypeComparator", "qualified_name": "org.springframework.expression.spel.support.StandardTypeComparator", "short_description": " A basic  TypeComparator  implementation: supports comparison of Number  types as well as types implementing  Comparable . "},
{"api_id": 1562, "api_type": 2, "full_declaration": "StandardTypeConverter", "qualified_name": "org.springframework.expression.spel.support.StandardTypeConverter", "short_description": " Default implementation of the  TypeConverter  interface,\ndelegating to a core Spring  ConversionService . "},
{"api_id": 1563, "api_type": 2, "full_declaration": "StandardTypeLocator", "qualified_name": "org.springframework.expression.spel.support.StandardTypeLocator", "short_description": " A simple implementation of  TypeLocator  that uses the context ClassLoader\n(or any ClassLoader set upon it). "},
{"api_id": 1564, "api_type": 3, "full_declaration": "AnnotationFormatterFactory", "qualified_name": "org.springframework.format.AnnotationFormatterFactory", "short_description": " A factory that creates formatters to format values of fields annotated with a particular Annotation . "},
{"api_id": 1565, "api_type": 3, "full_declaration": "Formatter", "qualified_name": "org.springframework.format.Formatter", "short_description": " Formats objects of type T. "},
{"api_id": 1566, "api_type": 3, "full_declaration": "FormatterRegistrar", "qualified_name": "org.springframework.format.FormatterRegistrar", "short_description": " Registers  Converters  and  Formatters  with\na FormattingConversionService through the  FormatterRegistry  SPI. "},
{"api_id": 1567, "api_type": 3, "full_declaration": "FormatterRegistry", "qualified_name": "org.springframework.format.FormatterRegistry", "short_description": " A registry of field formatting logic. "},
{"api_id": 1568, "api_type": 3, "full_declaration": "Parser", "qualified_name": "org.springframework.format.Parser", "short_description": " Parses text strings to produce instances of T. "},
{"api_id": 1569, "api_type": 3, "full_declaration": "Printer", "qualified_name": "org.springframework.format.Printer", "short_description": " Prints objects of type T for display. "},
{"api_id": 1570, "api_type": 8, "full_declaration": "DateTimeFormat.ISO", "qualified_name": "org.springframework.format.annotation.DateTimeFormat.ISO", "short_description": " Common ISO date time format patterns. "},
{"api_id": 1571, "api_type": 8, "full_declaration": "NumberFormat.Style", "qualified_name": "org.springframework.format.annotation.NumberFormat.Style", "short_description": " Common number format styles. "},
{"api_id": 1572, "api_type": 9, "full_declaration": "DateTimeFormat", "qualified_name": "org.springframework.format.annotation.DateTimeFormat", "short_description": " Declares that a field or method parameter should be formatted as a date or time. "},
{"api_id": 1573, "api_type": 9, "full_declaration": "NumberFormat", "qualified_name": "org.springframework.format.annotation.NumberFormat", "short_description": " Declares that a field or method parameter should be formatted as a number. "},
{"api_id": 1574, "api_type": 2, "full_declaration": "DateFormatter", "qualified_name": "org.springframework.format.datetime.DateFormatter", "short_description": " A formatter for  Date  types. "},
{"api_id": 1575, "api_type": 2, "full_declaration": "DateFormatterRegistrar", "qualified_name": "org.springframework.format.datetime.DateFormatterRegistrar", "short_description": " Configures basic date formatting for use with Spring, primarily for DateTimeFormat  declarations. "},
{"api_id": 1576, "api_type": 2, "full_declaration": "DateTimeFormatAnnotationFormatterFactory", "qualified_name": "org.springframework.format.datetime.DateTimeFormatAnnotationFormatterFactory", "short_description": " Formats fields annotated with the  DateTimeFormat  annotation using a  DateFormatter . "},
{"api_id": 1577, "api_type": 2, "full_declaration": "DateTimeFormatterFactory", "qualified_name": "org.springframework.format.datetime.joda.DateTimeFormatterFactory", "short_description": "Deprecated as of 5.3, in favor of standard JSR-310 support "},
{"api_id": 1578, "api_type": 2, "full_declaration": "DateTimeFormatterFactoryBean", "qualified_name": "org.springframework.format.datetime.joda.DateTimeFormatterFactoryBean", "short_description": "Deprecated as of 5.3, in favor of standard JSR-310 support "},
{"api_id": 1579, "api_type": 2, "full_declaration": "DateTimeParser", "qualified_name": "org.springframework.format.datetime.joda.DateTimeParser", "short_description": "Deprecated as of 5.3, in favor of standard JSR-310 support "},
{"api_id": 1580, "api_type": 2, "full_declaration": "JodaDateTimeFormatAnnotationFormatterFactory", "qualified_name": "org.springframework.format.datetime.joda.JodaDateTimeFormatAnnotationFormatterFactory", "short_description": "Deprecated as of 5.3, in favor of standard JSR-310 support "},
{"api_id": 1581, "api_type": 2, "full_declaration": "JodaTimeContext", "qualified_name": "org.springframework.format.datetime.joda.JodaTimeContext", "short_description": "Deprecated as of 5.3, in favor of standard JSR-310 support "},
{"api_id": 1582, "api_type": 2, "full_declaration": "JodaTimeContextHolder", "qualified_name": "org.springframework.format.datetime.joda.JodaTimeContextHolder", "short_description": "Deprecated as of 5.3, in favor of standard JSR-310 support "},
{"api_id": 1583, "api_type": 2, "full_declaration": "JodaTimeFormatterRegistrar", "qualified_name": "org.springframework.format.datetime.joda.JodaTimeFormatterRegistrar", "short_description": "Deprecated as of 5.3, in favor of standard JSR-310 support "},
{"api_id": 1584, "api_type": 2, "full_declaration": "LocalDateParser", "qualified_name": "org.springframework.format.datetime.joda.LocalDateParser", "short_description": "Deprecated as of 5.3, in favor of standard JSR-310 support "},
{"api_id": 1585, "api_type": 2, "full_declaration": "LocalDateTimeParser", "qualified_name": "org.springframework.format.datetime.joda.LocalDateTimeParser", "short_description": "Deprecated as of 5.3, in favor of standard JSR-310 support "},
{"api_id": 1586, "api_type": 2, "full_declaration": "LocalTimeParser", "qualified_name": "org.springframework.format.datetime.joda.LocalTimeParser", "short_description": "Deprecated as of 5.3, in favor of standard JSR-310 support "},
{"api_id": 1587, "api_type": 2, "full_declaration": "MillisecondInstantPrinter", "qualified_name": "org.springframework.format.datetime.joda.MillisecondInstantPrinter", "short_description": "Deprecated as of 5.3, in favor of standard JSR-310 support "},
{"api_id": 1588, "api_type": 2, "full_declaration": "ReadableInstantPrinter", "qualified_name": "org.springframework.format.datetime.joda.ReadableInstantPrinter", "short_description": "Deprecated as of 5.3, in favor of standard JSR-310 support "},
{"api_id": 1589, "api_type": 2, "full_declaration": "ReadablePartialPrinter", "qualified_name": "org.springframework.format.datetime.joda.ReadablePartialPrinter", "short_description": "Deprecated as of 5.3, in favor of standard JSR-310 support "},
{"api_id": 1590, "api_type": 2, "full_declaration": "DateTimeContext", "qualified_name": "org.springframework.format.datetime.standard.DateTimeContext", "short_description": " A context that holds user-specific  java.time  (JSR-310) settings\nsuch as the user's Chronology (calendar system) and time zone. "},
{"api_id": 1591, "api_type": 2, "full_declaration": "DateTimeContextHolder", "qualified_name": "org.springframework.format.datetime.standard.DateTimeContextHolder", "short_description": " A holder for a thread-local user  DateTimeContext . "},
{"api_id": 1592, "api_type": 2, "full_declaration": "DateTimeFormatterFactory", "qualified_name": "org.springframework.format.datetime.standard.DateTimeFormatterFactory", "short_description": " Factory that creates a JSR-310  DateTimeFormatter . "},
{"api_id": 1593, "api_type": 2, "full_declaration": "DateTimeFormatterFactoryBean", "qualified_name": "org.springframework.format.datetime.standard.DateTimeFormatterFactoryBean", "short_description": " FactoryBean  that creates a JSR-310  DateTimeFormatter . "},
{"api_id": 1594, "api_type": 2, "full_declaration": "DateTimeFormatterRegistrar", "qualified_name": "org.springframework.format.datetime.standard.DateTimeFormatterRegistrar", "short_description": " Configures the JSR-310  java.time  formatting system for use with Spring. "},
{"api_id": 1595, "api_type": 2, "full_declaration": "InstantFormatter", "qualified_name": "org.springframework.format.datetime.standard.InstantFormatter", "short_description": " Formatter  implementation for a JSR-310  Instant ,\nfollowing JSR-310's parsing rules for an Instant (that is, not using a\nconfigurable  DateTimeFormatter ): accepting the\ndefault  ISO_INSTANT  format as well as  RFC_1123_DATE_TIME (which is commonly used for HTTP date header values), as of Spring 4.3. "},
{"api_id": 1596, "api_type": 2, "full_declaration": "Jsr310DateTimeFormatAnnotationFormatterFactory", "qualified_name": "org.springframework.format.datetime.standard.Jsr310DateTimeFormatAnnotationFormatterFactory", "short_description": " Formats fields annotated with the  DateTimeFormat  annotation using the\nJSR-310  java.time  package in JDK 8. "},
{"api_id": 1597, "api_type": 2, "full_declaration": "TemporalAccessorParser", "qualified_name": "org.springframework.format.datetime.standard.TemporalAccessorParser", "short_description": " Parser  implementation for a JSR-310  TemporalAccessor ,\nusing a  DateTimeFormatter ) (the contextual one, if available). "},
{"api_id": 1598, "api_type": 2, "full_declaration": "TemporalAccessorPrinter", "qualified_name": "org.springframework.format.datetime.standard.TemporalAccessorPrinter", "short_description": " Printer  implementation for a JSR-310  TemporalAccessor ,\nusing a  DateTimeFormatter ) (the contextual one, if available). "},
{"api_id": 1599, "api_type": 2, "full_declaration": "AbstractNumberFormatter", "qualified_name": "org.springframework.format.number.AbstractNumberFormatter", "short_description": " Abstract formatter for Numbers,\nproviding a  AbstractNumberFormatter.getNumberFormat(java.util.Locale)  template method. "},
{"api_id": 1600, "api_type": 2, "full_declaration": "CurrencyStyleFormatter", "qualified_name": "org.springframework.format.number.CurrencyStyleFormatter", "short_description": " A BigDecimal formatter for number values in currency style. "},
{"api_id": 1601, "api_type": 2, "full_declaration": "NumberFormatAnnotationFormatterFactory", "qualified_name": "org.springframework.format.number.NumberFormatAnnotationFormatterFactory", "short_description": " Formats fields annotated with the  NumberFormat  annotation. "},
{"api_id": 1602, "api_type": 2, "full_declaration": "NumberStyleFormatter", "qualified_name": "org.springframework.format.number.NumberStyleFormatter", "short_description": " A general-purpose number formatter using NumberFormat's number style. "},
{"api_id": 1603, "api_type": 2, "full_declaration": "PercentStyleFormatter", "qualified_name": "org.springframework.format.number.PercentStyleFormatter", "short_description": " A formatter for number values in percent style. "},
{"api_id": 1604, "api_type": 2, "full_declaration": "CurrencyUnitFormatter", "qualified_name": "org.springframework.format.number.money.CurrencyUnitFormatter", "short_description": " Formatter for JSR-354  CurrencyUnit  values,\nfrom and to currency code Strings. "},
{"api_id": 1605, "api_type": 2, "full_declaration": "Jsr354NumberFormatAnnotationFormatterFactory", "qualified_name": "org.springframework.format.number.money.Jsr354NumberFormatAnnotationFormatterFactory", "short_description": " Formats  MonetaryAmount  fields annotated\nwith Spring's common  NumberFormat  annotation. "},
{"api_id": 1606, "api_type": 2, "full_declaration": "MonetaryAmountFormatter", "qualified_name": "org.springframework.format.number.money.MonetaryAmountFormatter", "short_description": " Formatter for JSR-354  MonetaryAmount  values,\ndelegating to  MonetaryAmountFormat.format(javax.money.MonetaryAmount) and  MonetaryAmountFormat.parse(java.lang.CharSequence) . "},
{"api_id": 1607, "api_type": 2, "full_declaration": "DefaultFormattingConversionService", "qualified_name": "org.springframework.format.support.DefaultFormattingConversionService", "short_description": " A specialization of  FormattingConversionService  configured by default with\nconverters and formatters appropriate for most applications. "},
{"api_id": 1608, "api_type": 2, "full_declaration": "FormatterPropertyEditorAdapter", "qualified_name": "org.springframework.format.support.FormatterPropertyEditorAdapter", "short_description": " Adapter that bridges between  Formatter  and  PropertyEditor . "},
{"api_id": 1609, "api_type": 2, "full_declaration": "FormattingConversionService", "qualified_name": "org.springframework.format.support.FormattingConversionService", "short_description": " A  ConversionService  implementation\ndesigned to be configured as a  FormatterRegistry . "},
{"api_id": 1610, "api_type": 2, "full_declaration": "FormattingConversionServiceFactoryBean", "qualified_name": "org.springframework.format.support.FormattingConversionServiceFactoryBean", "short_description": " A factory providing convenient access to a  FormattingConversionService configured with converters and formatters for common types such as numbers and\ndatetimes. "},
{"api_id": 1611, "api_type": 3, "full_declaration": "ContentDisposition.Builder", "qualified_name": "org.springframework.http.ContentDisposition.Builder", "short_description": " A mutable builder for  ContentDisposition . "},
{"api_id": 1612, "api_type": 3, "full_declaration": "HttpInputMessage", "qualified_name": "org.springframework.http.HttpInputMessage", "short_description": " Represents an HTTP input message, consisting of  headers and a readable  body . "},
{"api_id": 1613, "api_type": 3, "full_declaration": "HttpMessage", "qualified_name": "org.springframework.http.HttpMessage", "short_description": " Represents the base interface for HTTP request and response messages. "},
{"api_id": 1614, "api_type": 3, "full_declaration": "HttpOutputMessage", "qualified_name": "org.springframework.http.HttpOutputMessage", "short_description": " Represents an HTTP output message, consisting of  headers and a writable  body . "},
{"api_id": 1615, "api_type": 3, "full_declaration": "HttpRequest", "qualified_name": "org.springframework.http.HttpRequest", "short_description": " Represents an HTTP request message, consisting of method  and  uri . "},
{"api_id": 1616, "api_type": 3, "full_declaration": "ReactiveHttpInputMessage", "qualified_name": "org.springframework.http.ReactiveHttpInputMessage", "short_description": " An \"reactive\" HTTP input message that exposes the input as  Publisher . "},
{"api_id": 1617, "api_type": 3, "full_declaration": "ReactiveHttpOutputMessage", "qualified_name": "org.springframework.http.ReactiveHttpOutputMessage", "short_description": " A \"reactive\" HTTP output message that accepts output as a  Publisher . "},
{"api_id": 1618, "api_type": 3, "full_declaration": "RequestEntity.BodyBuilder", "qualified_name": "org.springframework.http.RequestEntity.BodyBuilder", "short_description": " Defines a builder that adds a body to the response entity. "},
{"api_id": 1619, "api_type": 3, "full_declaration": "RequestEntity.HeadersBuilder", "qualified_name": "org.springframework.http.RequestEntity.HeadersBuilder", "short_description": " Defines a builder that adds headers to the request entity. "},
{"api_id": 1620, "api_type": 3, "full_declaration": "ResponseCookie.ResponseCookieBuilder", "qualified_name": "org.springframework.http.ResponseCookie.ResponseCookieBuilder", "short_description": " A builder for a server-defined HttpCookie with attributes. "},
{"api_id": 1621, "api_type": 3, "full_declaration": "ResponseEntity.BodyBuilder", "qualified_name": "org.springframework.http.ResponseEntity.BodyBuilder", "short_description": " Defines a builder that adds a body to the response entity. "},
{"api_id": 1622, "api_type": 3, "full_declaration": "ResponseEntity.HeadersBuilder", "qualified_name": "org.springframework.http.ResponseEntity.HeadersBuilder", "short_description": " Defines a builder that adds headers to the response entity. "},
{"api_id": 1623, "api_type": 3, "full_declaration": "StreamingHttpOutputMessage", "qualified_name": "org.springframework.http.StreamingHttpOutputMessage", "short_description": " Represents an HTTP output message that allows for setting a streaming body. "},
{"api_id": 1624, "api_type": 3, "full_declaration": "StreamingHttpOutputMessage.Body", "qualified_name": "org.springframework.http.StreamingHttpOutputMessage.Body", "short_description": " Defines the contract for bodies that can be written directly to an OutputStream . "},
{"api_id": 1625, "api_type": 3, "full_declaration": "ZeroCopyHttpOutputMessage", "qualified_name": "org.springframework.http.ZeroCopyHttpOutputMessage", "short_description": " Sub-interface of  ReactiveOutputMessage  that has support for \"zero-copy\"\nfile transfers. "},
{"api_id": 1626, "api_type": 2, "full_declaration": "CacheControl", "qualified_name": "org.springframework.http.CacheControl", "short_description": " A builder for creating \"Cache-Control\" HTTP response headers. "},
{"api_id": 1627, "api_type": 2, "full_declaration": "ContentDisposition", "qualified_name": "org.springframework.http.ContentDisposition", "short_description": " Representation of the Content-Disposition type and parameters as defined in RFC 6266. "},
{"api_id": 1628, "api_type": 2, "full_declaration": "HttpCookie", "qualified_name": "org.springframework.http.HttpCookie", "short_description": " Represents an HTTP cookie as a name-value pair consistent with the content of\nthe \"Cookie\" request header. "},
{"api_id": 1629, "api_type": 2, "full_declaration": "HttpEntity", "qualified_name": "org.springframework.http.HttpEntity", "short_description": " Represents an HTTP request or response entity, consisting of headers and body. "},
{"api_id": 1630, "api_type": 2, "full_declaration": "HttpHeaders", "qualified_name": "org.springframework.http.HttpHeaders", "short_description": " A data structure representing HTTP request or response headers, mapping String header names\nto a list of String values, also offering accessors for common application-level data types. "},
{"api_id": 1631, "api_type": 2, "full_declaration": "HttpLogging", "qualified_name": "org.springframework.http.HttpLogging", "short_description": " Holds the shared logger named \"org.springframework.web.HttpLogging\" for HTTP\nrelated logging when \"org.springframework.http\" is not enabled but\n\"org.springframework.web\" is. "},
{"api_id": 1632, "api_type": 2, "full_declaration": "HttpRange", "qualified_name": "org.springframework.http.HttpRange", "short_description": " Represents an HTTP (byte) range for use with the HTTP  \"Range\"  header. "},
{"api_id": 1633, "api_type": 2, "full_declaration": "MediaType", "qualified_name": "org.springframework.http.MediaType", "short_description": " A subclass of  MimeType  that adds support for quality parameters\nas defined in the HTTP specification. "},
{"api_id": 1634, "api_type": 2, "full_declaration": "MediaTypeEditor", "qualified_name": "org.springframework.http.MediaTypeEditor", "short_description": " Editor  for  MediaType descriptors, to automatically convert  String  specifications\n(e.g. "},
{"api_id": 1635, "api_type": 2, "full_declaration": "MediaTypeFactory", "qualified_name": "org.springframework.http.MediaTypeFactory", "short_description": " A factory delegate for resolving  MediaType  objects\nfrom  Resource  handles or filenames. "},
{"api_id": 1636, "api_type": 2, "full_declaration": "RequestEntity", "qualified_name": "org.springframework.http.RequestEntity", "short_description": " Extension of  HttpEntity  that also exposes the HTTP method and the\ntarget URL. "},
{"api_id": 1637, "api_type": 2, "full_declaration": "RequestEntity.UriTemplateRequestEntity", "qualified_name": "org.springframework.http.RequestEntity.UriTemplateRequestEntity", "short_description": " RequestEntity initialized with a URI template and variables instead of a  URI . "},
{"api_id": 1638, "api_type": 2, "full_declaration": "ResponseCookie", "qualified_name": "org.springframework.http.ResponseCookie", "short_description": " An  HttpCookie  subclass with the additional attributes allowed in\nthe \"Set-Cookie\" response header. "},
{"api_id": 1639, "api_type": 2, "full_declaration": "ResponseEntity", "qualified_name": "org.springframework.http.ResponseEntity", "short_description": " Extension of  HttpEntity  that adds a  HttpStatus  status code. "},
{"api_id": 1640, "api_type": 8, "full_declaration": "HttpMethod", "qualified_name": "org.springframework.http.HttpMethod", "short_description": " Java 5 enumeration of HTTP request methods. "},
{"api_id": 1641, "api_type": 8, "full_declaration": "HttpStatus", "qualified_name": "org.springframework.http.HttpStatus", "short_description": " Enumeration of HTTP status codes. "},
{"api_id": 1642, "api_type": 8, "full_declaration": "HttpStatus.Series", "qualified_name": "org.springframework.http.HttpStatus.Series", "short_description": " Enumeration of HTTP status series. "},
{"api_id": 1643, "api_type": 4, "full_declaration": "InvalidMediaTypeException", "qualified_name": "org.springframework.http.InvalidMediaTypeException", "short_description": " Exception thrown from  MediaType.parseMediaType(String)  in case of\nencountering an invalid media type specification String. "},
{"api_id": 1644, "api_type": 3, "full_declaration": "AsyncClientHttpRequest", "qualified_name": "org.springframework.http.client.AsyncClientHttpRequest", "short_description": "Deprecated as of Spring 5.0, in favor of  ClientRequest "},
{"api_id": 1645, "api_type": 3, "full_declaration": "AsyncClientHttpRequestExecution", "qualified_name": "org.springframework.http.client.AsyncClientHttpRequestExecution", "short_description": "Deprecated as of Spring 5.0, in favor of ExchangeFilterFunction "},
{"api_id": 1646, "api_type": 3, "full_declaration": "AsyncClientHttpRequestFactory", "qualified_name": "org.springframework.http.client.AsyncClientHttpRequestFactory", "short_description": "Deprecated as of Spring 5.0, in favor of  ClientHttpConnector "},
{"api_id": 1647, "api_type": 3, "full_declaration": "AsyncClientHttpRequestInterceptor", "qualified_name": "org.springframework.http.client.AsyncClientHttpRequestInterceptor", "short_description": "Deprecated as of Spring 5.0, in favor of ExchangeFilterFunction "},
{"api_id": 1648, "api_type": 3, "full_declaration": "ClientHttpRequest", "qualified_name": "org.springframework.http.client.ClientHttpRequest", "short_description": " Represents a client-side HTTP request. "},
{"api_id": 1649, "api_type": 3, "full_declaration": "ClientHttpRequestExecution", "qualified_name": "org.springframework.http.client.ClientHttpRequestExecution", "short_description": " Represents the context of a client-side HTTP request execution. "},
{"api_id": 1650, "api_type": 3, "full_declaration": "ClientHttpRequestFactory", "qualified_name": "org.springframework.http.client.ClientHttpRequestFactory", "short_description": " Factory for  ClientHttpRequest  objects. "},
{"api_id": 1651, "api_type": 3, "full_declaration": "ClientHttpRequestInitializer", "qualified_name": "org.springframework.http.client.ClientHttpRequestInitializer", "short_description": " Callback interface for initializing a  ClientHttpRequest  prior to it\nbeing used. "},
{"api_id": 1652, "api_type": 3, "full_declaration": "ClientHttpRequestInterceptor", "qualified_name": "org.springframework.http.client.ClientHttpRequestInterceptor", "short_description": " Intercepts client-side HTTP requests. "},
{"api_id": 1653, "api_type": 3, "full_declaration": "ClientHttpResponse", "qualified_name": "org.springframework.http.client.ClientHttpResponse", "short_description": " Represents a client-side HTTP response. "},
{"api_id": 1654, "api_type": 3, "full_declaration": "MultipartBodyBuilder.PartBuilder", "qualified_name": "org.springframework.http.client.MultipartBodyBuilder.PartBuilder", "short_description": " Builder that allows for further customization of part headers. "},
{"api_id": 1655, "api_type": 2, "full_declaration": "AbstractClientHttpRequest", "qualified_name": "org.springframework.http.client.AbstractClientHttpRequest", "short_description": " Abstract base for  ClientHttpRequest  that makes sure that headers\nand body are not written multiple times. "},
{"api_id": 1656, "api_type": 2, "full_declaration": "AbstractClientHttpRequestFactoryWrapper", "qualified_name": "org.springframework.http.client.AbstractClientHttpRequestFactoryWrapper", "short_description": " Abstract base class for  ClientHttpRequestFactory  implementations\nthat decorate another request factory. "},
{"api_id": 1657, "api_type": 2, "full_declaration": "AbstractClientHttpResponse", "qualified_name": "org.springframework.http.client.AbstractClientHttpResponse", "short_description": " Abstract base for  ClientHttpResponse . "},
{"api_id": 1658, "api_type": 2, "full_declaration": "BufferingClientHttpRequestFactory", "qualified_name": "org.springframework.http.client.BufferingClientHttpRequestFactory", "short_description": " Wrapper for a  ClientHttpRequestFactory  that buffers\nall outgoing and incoming streams in memory. "},
{"api_id": 1659, "api_type": 2, "full_declaration": "HttpComponentsAsyncClientHttpRequestFactory", "qualified_name": "org.springframework.http.client.HttpComponentsAsyncClientHttpRequestFactory", "short_description": "Deprecated as of Spring 5.0, in favor of HttpComponentsClientHttpConnector "},
{"api_id": 1660, "api_type": 2, "full_declaration": "HttpComponentsClientHttpRequestFactory", "qualified_name": "org.springframework.http.client.HttpComponentsClientHttpRequestFactory", "short_description": " ClientHttpRequestFactory  implementation that\nuses  Apache HttpComponents\nHttpClient  to create requests. "},
{"api_id": 1661, "api_type": 2, "full_declaration": "InterceptingAsyncClientHttpRequestFactory", "qualified_name": "org.springframework.http.client.InterceptingAsyncClientHttpRequestFactory", "short_description": "Deprecated as of Spring 5.0, with no direct replacement "},
{"api_id": 1662, "api_type": 2, "full_declaration": "InterceptingClientHttpRequestFactory", "qualified_name": "org.springframework.http.client.InterceptingClientHttpRequestFactory", "short_description": " ClientHttpRequestFactory  wrapper with support for ClientHttpRequestInterceptors . "},
{"api_id": 1663, "api_type": 2, "full_declaration": "MultipartBodyBuilder", "qualified_name": "org.springframework.http.client.MultipartBodyBuilder", "short_description": " Prepare the body of a multipart request, resulting in a MultiValueMap<String, HttpEntity> . "},
{"api_id": 1664, "api_type": 2, "full_declaration": "Netty4ClientHttpRequestFactory", "qualified_name": "org.springframework.http.client.Netty4ClientHttpRequestFactory", "short_description": "Deprecated as of Spring 5.0, in favor of ReactorClientHttpConnector "},
{"api_id": 1665, "api_type": 2, "full_declaration": "OkHttp3ClientHttpRequestFactory", "qualified_name": "org.springframework.http.client.OkHttp3ClientHttpRequestFactory", "short_description": " ClientHttpRequestFactory  implementation that uses OkHttp  3.x to create requests. "},
{"api_id": 1666, "api_type": 2, "full_declaration": "SimpleClientHttpRequestFactory", "qualified_name": "org.springframework.http.client.SimpleClientHttpRequestFactory", "short_description": " ClientHttpRequestFactory  implementation that uses standard JDK facilities. "},
{"api_id": 1667, "api_type": 3, "full_declaration": "ClientHttpConnector", "qualified_name": "org.springframework.http.client.reactive.ClientHttpConnector", "short_description": " Abstraction over HTTP clients driving the underlying HTTP client to connect\nto the origin server and provide all necessary infrastructure to send a ClientHttpRequest  and receive a  ClientHttpResponse . "},
{"api_id": 1668, "api_type": 3, "full_declaration": "ClientHttpRequest", "qualified_name": "org.springframework.http.client.reactive.ClientHttpRequest", "short_description": " Represents a client-side reactive HTTP request. "},
{"api_id": 1669, "api_type": 3, "full_declaration": "ClientHttpResponse", "qualified_name": "org.springframework.http.client.reactive.ClientHttpResponse", "short_description": " Represents a client-side reactive HTTP response. "},
{"api_id": 1670, "api_type": 2, "full_declaration": "AbstractClientHttpRequest", "qualified_name": "org.springframework.http.client.reactive.AbstractClientHttpRequest", "short_description": " Base class for  ClientHttpRequest  implementations. "},
{"api_id": 1671, "api_type": 2, "full_declaration": "ClientHttpRequestDecorator", "qualified_name": "org.springframework.http.client.reactive.ClientHttpRequestDecorator", "short_description": " Wraps another  ClientHttpRequest  and delegates all methods to it. "},
{"api_id": 1672, "api_type": 2, "full_declaration": "ClientHttpResponseDecorator", "qualified_name": "org.springframework.http.client.reactive.ClientHttpResponseDecorator", "short_description": " Wraps another  ClientHttpResponse  and delegates all methods to it. "},
{"api_id": 1673, "api_type": 2, "full_declaration": "HttpComponentsClientHttpConnector", "qualified_name": "org.springframework.http.client.reactive.HttpComponentsClientHttpConnector", "short_description": " ClientHttpConnector  implementation for the Apache HttpComponents HttpClient 5.x. "},
{"api_id": 1674, "api_type": 2, "full_declaration": "JettyClientHttpConnector", "qualified_name": "org.springframework.http.client.reactive.JettyClientHttpConnector", "short_description": " ClientHttpConnector  for the Jetty Reactive Streams HttpClient. "},
{"api_id": 1675, "api_type": 2, "full_declaration": "JettyResourceFactory", "qualified_name": "org.springframework.http.client.reactive.JettyResourceFactory", "short_description": " Factory to manage Jetty resources, i.e. "},
{"api_id": 1676, "api_type": 2, "full_declaration": "ReactorClientHttpConnector", "qualified_name": "org.springframework.http.client.reactive.ReactorClientHttpConnector", "short_description": " Reactor-Netty implementation of  ClientHttpConnector . "},
{"api_id": 1677, "api_type": 2, "full_declaration": "ReactorResourceFactory", "qualified_name": "org.springframework.http.client.reactive.ReactorResourceFactory", "short_description": " Factory to manage Reactor Netty resources, i.e. "},
{"api_id": 1678, "api_type": 2, "full_declaration": "AsyncHttpAccessor", "qualified_name": "org.springframework.http.client.support.AsyncHttpAccessor", "short_description": "Deprecated as of Spring 5.0, with no direct replacement "},
{"api_id": 1679, "api_type": 2, "full_declaration": "BasicAuthenticationInterceptor", "qualified_name": "org.springframework.http.client.support.BasicAuthenticationInterceptor", "short_description": " ClientHttpRequestInterceptor  to apply a given HTTP Basic Authentication\nusername/password pair, unless a custom  Authorization  header has\nalready been set. "},
{"api_id": 1680, "api_type": 2, "full_declaration": "BasicAuthorizationInterceptor", "qualified_name": "org.springframework.http.client.support.BasicAuthorizationInterceptor", "short_description": "Deprecated as of 5.1.1, in favor of  BasicAuthenticationInterceptor which reuses  HttpHeaders.setBasicAuth(java.lang.String, java.lang.String) ,\nsharing its default charset ISO-8859-1 instead of UTF-8 as used here "},
{"api_id": 1681, "api_type": 2, "full_declaration": "HttpAccessor", "qualified_name": "org.springframework.http.client.support.HttpAccessor", "short_description": " Base class for  RestTemplate and other HTTP accessing gateway helpers, defining common properties\nsuch as the  ClientHttpRequestFactory  to operate on. "},
{"api_id": 1682, "api_type": 2, "full_declaration": "HttpRequestWrapper", "qualified_name": "org.springframework.http.client.support.HttpRequestWrapper", "short_description": " Provides a convenient implementation of the  HttpRequest  interface\nthat can be overridden to adapt the request. "},
{"api_id": 1683, "api_type": 2, "full_declaration": "InterceptingAsyncHttpAccessor", "qualified_name": "org.springframework.http.client.support.InterceptingAsyncHttpAccessor", "short_description": "Deprecated as of Spring 5.0, with no direct replacement "},
{"api_id": 1684, "api_type": 2, "full_declaration": "InterceptingHttpAccessor", "qualified_name": "org.springframework.http.client.support.InterceptingHttpAccessor", "short_description": " Base class for  RestTemplate and other HTTP accessing gateway helpers, adding interceptor-related\nproperties to  HttpAccessor 's common properties. "},
{"api_id": 1685, "api_type": 2, "full_declaration": "ProxyFactoryBean", "qualified_name": "org.springframework.http.client.support.ProxyFactoryBean", "short_description": " FactoryBean  that creates a  java.net.Proxy . "},
{"api_id": 1686, "api_type": 3, "full_declaration": "ClientCodecConfigurer", "qualified_name": "org.springframework.http.codec.ClientCodecConfigurer", "short_description": " Extension of  CodecConfigurer  for HTTP message reader and writer\noptions relevant on the client side. "},
{"api_id": 1687, "api_type": 3, "full_declaration": "ClientCodecConfigurer.ClientDefaultCodecs", "qualified_name": "org.springframework.http.codec.ClientCodecConfigurer.ClientDefaultCodecs", "short_description": " CodecConfigurer.DefaultCodecs  extension with extra client-side options. "},
{"api_id": 1688, "api_type": 3, "full_declaration": "ClientCodecConfigurer.MultipartCodecs", "qualified_name": "org.springframework.http.codec.ClientCodecConfigurer.MultipartCodecs", "short_description": " Registry and container for multipart HTTP message writers. "},
{"api_id": 1689, "api_type": 3, "full_declaration": "CodecConfigurer", "qualified_name": "org.springframework.http.codec.CodecConfigurer", "short_description": " Defines a common interface for configuring either client or server HTTP\nmessage readers and writers. "},
{"api_id": 1690, "api_type": 3, "full_declaration": "CodecConfigurer.CustomCodecs", "qualified_name": "org.springframework.http.codec.CodecConfigurer.CustomCodecs", "short_description": " Registry for custom HTTP message readers and writers. "},
{"api_id": 1691, "api_type": 3, "full_declaration": "CodecConfigurer.DefaultCodecConfig", "qualified_name": "org.springframework.http.codec.CodecConfigurer.DefaultCodecConfig", "short_description": " Exposes the values of properties configured through CodecConfigurer.defaultCodecs()  that are applied to default codecs. "},
{"api_id": 1692, "api_type": 3, "full_declaration": "CodecConfigurer.DefaultCodecs", "qualified_name": "org.springframework.http.codec.CodecConfigurer.DefaultCodecs", "short_description": " Customize or replace the HTTP message readers and writers registered by\ndefault. "},
{"api_id": 1693, "api_type": 3, "full_declaration": "HttpMessageDecoder", "qualified_name": "org.springframework.http.codec.HttpMessageDecoder", "short_description": " Extension of  Decoder  exposing extra methods relevant in the context\nof HTTP request or response body decoding. "},
{"api_id": 1694, "api_type": 3, "full_declaration": "HttpMessageEncoder", "qualified_name": "org.springframework.http.codec.HttpMessageEncoder", "short_description": " Extension of  Encoder  exposing extra methods relevant in the context\nof HTTP request or response body encoding. "},
{"api_id": 1695, "api_type": 3, "full_declaration": "HttpMessageReader", "qualified_name": "org.springframework.http.codec.HttpMessageReader", "short_description": " Strategy for reading from a  ReactiveHttpInputMessage  and decoding\nthe stream of bytes to Objects of type  <T> . "},
{"api_id": 1696, "api_type": 3, "full_declaration": "HttpMessageWriter", "qualified_name": "org.springframework.http.codec.HttpMessageWriter", "short_description": " Strategy for encoding a stream of objects of type  <T>  and writing\nthe encoded stream of bytes to an  ReactiveHttpOutputMessage . "},
{"api_id": 1697, "api_type": 3, "full_declaration": "ServerCodecConfigurer", "qualified_name": "org.springframework.http.codec.ServerCodecConfigurer", "short_description": " Extension of  CodecConfigurer  for HTTP message reader and writer\noptions relevant on the server side. "},
{"api_id": 1698, "api_type": 3, "full_declaration": "ServerCodecConfigurer.ServerDefaultCodecs", "qualified_name": "org.springframework.http.codec.ServerCodecConfigurer.ServerDefaultCodecs", "short_description": " CodecConfigurer.DefaultCodecs  extension with extra client-side options. "},
{"api_id": 1699, "api_type": 3, "full_declaration": "ServerSentEvent.Builder", "qualified_name": "org.springframework.http.codec.ServerSentEvent.Builder", "short_description": " A mutable builder for a  SseEvent . "},
{"api_id": 1700, "api_type": 2, "full_declaration": "DecoderHttpMessageReader", "qualified_name": "org.springframework.http.codec.DecoderHttpMessageReader", "short_description": " HttpMessageReader  that wraps and delegates to a  Decoder . "},
{"api_id": 1701, "api_type": 2, "full_declaration": "EncoderHttpMessageWriter", "qualified_name": "org.springframework.http.codec.EncoderHttpMessageWriter", "short_description": " HttpMessageWriter  that wraps and delegates to an  Encoder . "},
{"api_id": 1702, "api_type": 2, "full_declaration": "FormHttpMessageReader", "qualified_name": "org.springframework.http.codec.FormHttpMessageReader", "short_description": " Implementation of an  HttpMessageReader  to read HTML form data, i.e. "},
{"api_id": 1703, "api_type": 2, "full_declaration": "FormHttpMessageWriter", "qualified_name": "org.springframework.http.codec.FormHttpMessageWriter", "short_description": " HttpMessageWriter  for writing a  MultiValueMap<String, String> as HTML form data, i.e. "},
{"api_id": 1704, "api_type": 2, "full_declaration": "LoggingCodecSupport", "qualified_name": "org.springframework.http.codec.LoggingCodecSupport", "short_description": " Base class for  Encoder , Decoder ,  HttpMessageReader , or HttpMessageWriter  that uses a logger and shows potentially sensitive\nrequest data. "},
{"api_id": 1705, "api_type": 2, "full_declaration": "ResourceHttpMessageReader", "qualified_name": "org.springframework.http.codec.ResourceHttpMessageReader", "short_description": " HttpMessageReader  that wraps and delegates to a  ResourceDecoder that extracts the filename from the  \"Content-Disposition\"  header, if\navailable, and passes it as the  ResourceDecoder.FILENAME_HINT . "},
{"api_id": 1706, "api_type": 2, "full_declaration": "ResourceHttpMessageWriter", "qualified_name": "org.springframework.http.codec.ResourceHttpMessageWriter", "short_description": " HttpMessageWriter  that can write a  Resource . "},
{"api_id": 1707, "api_type": 2, "full_declaration": "ServerSentEvent", "qualified_name": "org.springframework.http.codec.ServerSentEvent", "short_description": " Representation for a Server-Sent Event for use with Spring's reactive Web support. "},
{"api_id": 1708, "api_type": 2, "full_declaration": "ServerSentEventHttpMessageReader", "qualified_name": "org.springframework.http.codec.ServerSentEventHttpMessageReader", "short_description": " Reader that supports a stream of  ServerSentEvents  and also plain Objects  which is the same as an  ServerSentEvent  with data only. "},
{"api_id": 1709, "api_type": 2, "full_declaration": "ServerSentEventHttpMessageWriter", "qualified_name": "org.springframework.http.codec.ServerSentEventHttpMessageWriter", "short_description": " HttpMessageWriter  for  \"text/event-stream\"  responses. "},
{"api_id": 1710, "api_type": 2, "full_declaration": "Jackson2CborDecoder", "qualified_name": "org.springframework.http.codec.cbor.Jackson2CborDecoder", "short_description": " Decode bytes into CBOR and convert to Object's with Jackson. "},
{"api_id": 1711, "api_type": 2, "full_declaration": "Jackson2CborEncoder", "qualified_name": "org.springframework.http.codec.cbor.Jackson2CborEncoder", "short_description": " Encode from an  Object  to bytes of CBOR objects using Jackson. "},
{"api_id": 1712, "api_type": 2, "full_declaration": "AbstractJackson2Decoder", "qualified_name": "org.springframework.http.codec.json.AbstractJackson2Decoder", "short_description": " Abstract base class for Jackson 2.9 decoding, leveraging non-blocking parsing. "},
{"api_id": 1713, "api_type": 2, "full_declaration": "AbstractJackson2Encoder", "qualified_name": "org.springframework.http.codec.json.AbstractJackson2Encoder", "short_description": " Base class providing support methods for Jackson 2.9 encoding. "},
{"api_id": 1714, "api_type": 2, "full_declaration": "Jackson2CodecSupport", "qualified_name": "org.springframework.http.codec.json.Jackson2CodecSupport", "short_description": " Base class providing support methods for Jackson 2.9 encoding and decoding. "},
{"api_id": 1715, "api_type": 2, "full_declaration": "Jackson2JsonDecoder", "qualified_name": "org.springframework.http.codec.json.Jackson2JsonDecoder", "short_description": " Decode a byte stream into JSON and convert to Object's with Jackson 2.9,\nleveraging non-blocking parsing. "},
{"api_id": 1716, "api_type": 2, "full_declaration": "Jackson2JsonEncoder", "qualified_name": "org.springframework.http.codec.json.Jackson2JsonEncoder", "short_description": " Encode from an  Object  stream to a byte stream of JSON objects using Jackson 2.9. "},
{"api_id": 1717, "api_type": 2, "full_declaration": "Jackson2SmileDecoder", "qualified_name": "org.springframework.http.codec.json.Jackson2SmileDecoder", "short_description": " Decode a byte stream into Smile and convert to Object's with Jackson 2.9,\nleveraging non-blocking parsing. "},
{"api_id": 1718, "api_type": 2, "full_declaration": "Jackson2SmileEncoder", "qualified_name": "org.springframework.http.codec.json.Jackson2SmileEncoder", "short_description": " Encode from an  Object  stream to a byte stream of Smile objects using Jackson 2.9. "},
{"api_id": 1719, "api_type": 2, "full_declaration": "KotlinSerializationJsonDecoder", "qualified_name": "org.springframework.http.codec.json.KotlinSerializationJsonDecoder", "short_description": " Decode a byte stream into JSON and convert to Object's with kotlinx.serialization . "},
{"api_id": 1720, "api_type": 2, "full_declaration": "KotlinSerializationJsonEncoder", "qualified_name": "org.springframework.http.codec.json.KotlinSerializationJsonEncoder", "short_description": " Encode from an  Object  stream to a byte stream of JSON objects using kotlinx.serialization . "},
{"api_id": 1721, "api_type": 3, "full_declaration": "FilePart", "qualified_name": "org.springframework.http.codec.multipart.FilePart", "short_description": " Specialization of  Part  that represents an uploaded file received in\na multipart request. "},
{"api_id": 1722, "api_type": 3, "full_declaration": "FormFieldPart", "qualified_name": "org.springframework.http.codec.multipart.FormFieldPart", "short_description": " Specialization of  Part  for a form field. "},
{"api_id": 1723, "api_type": 3, "full_declaration": "Part", "qualified_name": "org.springframework.http.codec.multipart.Part", "short_description": " Representation for a part in a \"multipart/form-data\" request. "},
{"api_id": 1724, "api_type": 2, "full_declaration": "DefaultPartHttpMessageReader", "qualified_name": "org.springframework.http.codec.multipart.DefaultPartHttpMessageReader", "short_description": " Default  HttpMessageReader  for parsing  \"multipart/form-data\" requests to a stream of  Part s. "},
{"api_id": 1725, "api_type": 2, "full_declaration": "MultipartHttpMessageReader", "qualified_name": "org.springframework.http.codec.multipart.MultipartHttpMessageReader", "short_description": " HttpMessageReader  for reading  \"multipart/form-data\"  requests\ninto a  MultiValueMap<String, Part> . "},
{"api_id": 1726, "api_type": 2, "full_declaration": "MultipartHttpMessageWriter", "qualified_name": "org.springframework.http.codec.multipart.MultipartHttpMessageWriter", "short_description": " HttpMessageWriter  for writing a  MultiValueMap<String, ?> as multipart form data, i.e. "},
{"api_id": 1727, "api_type": 2, "full_declaration": "MultipartWriterSupport", "qualified_name": "org.springframework.http.codec.multipart.MultipartWriterSupport", "short_description": " Support class for multipart HTTP message writers. "},
{"api_id": 1728, "api_type": 2, "full_declaration": "PartHttpMessageWriter", "qualified_name": "org.springframework.http.codec.multipart.PartHttpMessageWriter", "short_description": " HttpMessageWriter  for writing with  Part . "},
{"api_id": 1729, "api_type": 2, "full_declaration": "SynchronossPartHttpMessageReader", "qualified_name": "org.springframework.http.codec.multipart.SynchronossPartHttpMessageReader", "short_description": " HttpMessageReader  for parsing  \"multipart/form-data\"  requests\nto a stream of  Part 's using the Synchronoss NIO Multipart library. "},
{"api_id": 1730, "api_type": 2, "full_declaration": "ProtobufCodecSupport", "qualified_name": "org.springframework.http.codec.protobuf.ProtobufCodecSupport", "short_description": " Base class providing support methods for Protobuf encoding and decoding. "},
{"api_id": 1731, "api_type": 2, "full_declaration": "ProtobufDecoder", "qualified_name": "org.springframework.http.codec.protobuf.ProtobufDecoder", "short_description": " A  Decoder  that reads  Message s using Google Protocol Buffers . "},
{"api_id": 1732, "api_type": 2, "full_declaration": "ProtobufEncoder", "qualified_name": "org.springframework.http.codec.protobuf.ProtobufEncoder", "short_description": " An  Encoder  that writes  Message s\nusing  Google Protocol Buffers . "},
{"api_id": 1733, "api_type": 2, "full_declaration": "ProtobufHttpMessageWriter", "qualified_name": "org.springframework.http.codec.protobuf.ProtobufHttpMessageWriter", "short_description": " HttpMessageWriter  that can write a protobuf  Message  and adds X-Protobuf-Schema ,  X-Protobuf-Message  headers and a delimited=true  parameter is added to the content type if a flux is serialized. "},
{"api_id": 1734, "api_type": 2, "full_declaration": "DefaultClientCodecConfigurer", "qualified_name": "org.springframework.http.codec.support.DefaultClientCodecConfigurer", "short_description": " Default implementation of  ClientCodecConfigurer . "},
{"api_id": 1735, "api_type": 2, "full_declaration": "DefaultServerCodecConfigurer", "qualified_name": "org.springframework.http.codec.support.DefaultServerCodecConfigurer", "short_description": " Default implementation of  ServerCodecConfigurer . "},
{"api_id": 1736, "api_type": 2, "full_declaration": "Jaxb2XmlDecoder", "qualified_name": "org.springframework.http.codec.xml.Jaxb2XmlDecoder", "short_description": " Decode from a bytes stream containing XML elements to a stream of Object s (POJOs). "},
{"api_id": 1737, "api_type": 2, "full_declaration": "Jaxb2XmlEncoder", "qualified_name": "org.springframework.http.codec.xml.Jaxb2XmlEncoder", "short_description": " Encode from single value to a byte stream containing XML elements. "},
{"api_id": 1738, "api_type": 2, "full_declaration": "XmlEventDecoder", "qualified_name": "org.springframework.http.codec.xml.XmlEventDecoder", "short_description": " Decodes a  DataBuffer  stream into a stream of  XMLEvents . "},
{"api_id": 1739, "api_type": 3, "full_declaration": "GenericHttpMessageConverter", "qualified_name": "org.springframework.http.converter.GenericHttpMessageConverter", "short_description": " A specialization of  HttpMessageConverter  that can convert an HTTP request\ninto a target object of a specified generic type and a source object of a specified\ngeneric type into an HTTP response. "},
{"api_id": 1740, "api_type": 3, "full_declaration": "HttpMessageConverter", "qualified_name": "org.springframework.http.converter.HttpMessageConverter", "short_description": " Strategy interface for converting from and to HTTP requests and responses. "},
{"api_id": 1741, "api_type": 2, "full_declaration": "AbstractGenericHttpMessageConverter", "qualified_name": "org.springframework.http.converter.AbstractGenericHttpMessageConverter", "short_description": " Abstract base class for most  GenericHttpMessageConverter  implementations. "},
{"api_id": 1742, "api_type": 2, "full_declaration": "AbstractHttpMessageConverter", "qualified_name": "org.springframework.http.converter.AbstractHttpMessageConverter", "short_description": " Abstract base class for most  HttpMessageConverter  implementations. "},
{"api_id": 1743, "api_type": 2, "full_declaration": "BufferedImageHttpMessageConverter", "qualified_name": "org.springframework.http.converter.BufferedImageHttpMessageConverter", "short_description": " Implementation of  HttpMessageConverter  that can read and write BufferedImages . "},
{"api_id": 1744, "api_type": 2, "full_declaration": "ByteArrayHttpMessageConverter", "qualified_name": "org.springframework.http.converter.ByteArrayHttpMessageConverter", "short_description": " Implementation of  HttpMessageConverter  that can read and write byte arrays. "},
{"api_id": 1745, "api_type": 2, "full_declaration": "FormHttpMessageConverter", "qualified_name": "org.springframework.http.converter.FormHttpMessageConverter", "short_description": " Implementation of  HttpMessageConverter  to read and write 'normal' HTML\nforms and also to write (but not read) multipart data (e.g. "},
{"api_id": 1746, "api_type": 2, "full_declaration": "ObjectToStringHttpMessageConverter", "qualified_name": "org.springframework.http.converter.ObjectToStringHttpMessageConverter", "short_description": " An  HttpMessageConverter  that uses  StringHttpMessageConverter for reading and writing content and a  ConversionService  for converting\nthe String content to and from the target object type. "},
{"api_id": 1747, "api_type": 2, "full_declaration": "ResourceHttpMessageConverter", "qualified_name": "org.springframework.http.converter.ResourceHttpMessageConverter", "short_description": " Implementation of  HttpMessageConverter  that can read/write  Resources and supports byte range requests. "},
{"api_id": 1748, "api_type": 2, "full_declaration": "ResourceRegionHttpMessageConverter", "qualified_name": "org.springframework.http.converter.ResourceRegionHttpMessageConverter", "short_description": " Implementation of  HttpMessageConverter  that can write a single  ResourceRegion ,\nor Collections of  ResourceRegions . "},
{"api_id": 1749, "api_type": 2, "full_declaration": "StringHttpMessageConverter", "qualified_name": "org.springframework.http.converter.StringHttpMessageConverter", "short_description": " Implementation of  HttpMessageConverter  that can read and write strings. "},
{"api_id": 1750, "api_type": 4, "full_declaration": "HttpMessageConversionException", "qualified_name": "org.springframework.http.converter.HttpMessageConversionException", "short_description": " Thrown by  HttpMessageConverter  implementations when a conversion attempt fails. "},
{"api_id": 1751, "api_type": 4, "full_declaration": "HttpMessageNotReadableException", "qualified_name": "org.springframework.http.converter.HttpMessageNotReadableException", "short_description": " Thrown by  HttpMessageConverter  implementations when the HttpMessageConverter.read(java.lang.Class<? extends T>, org.springframework.http.HttpInputMessage)  method fails. "},
{"api_id": 1752, "api_type": 4, "full_declaration": "HttpMessageNotWritableException", "qualified_name": "org.springframework.http.converter.HttpMessageNotWritableException", "short_description": " Thrown by  HttpMessageConverter  implementations when the HttpMessageConverter.write(T, org.springframework.http.MediaType, org.springframework.http.HttpOutputMessage)  method fails. "},
{"api_id": 1753, "api_type": 2, "full_declaration": "MappingJackson2CborHttpMessageConverter", "qualified_name": "org.springframework.http.converter.cbor.MappingJackson2CborHttpMessageConverter", "short_description": " Implementation of  HttpMessageConverter  that can read and write the  CBOR data format using  the dedicated Jackson 2.x extension . "},
{"api_id": 1754, "api_type": 2, "full_declaration": "AbstractWireFeedHttpMessageConverter", "qualified_name": "org.springframework.http.converter.feed.AbstractWireFeedHttpMessageConverter", "short_description": " Abstract base class for Atom and RSS Feed message converters, using the ROME tools  project. "},
{"api_id": 1755, "api_type": 2, "full_declaration": "AtomFeedHttpMessageConverter", "qualified_name": "org.springframework.http.converter.feed.AtomFeedHttpMessageConverter", "short_description": " Implementation of  HttpMessageConverter that can read and write Atom feeds. "},
{"api_id": 1756, "api_type": 2, "full_declaration": "RssChannelHttpMessageConverter", "qualified_name": "org.springframework.http.converter.feed.RssChannelHttpMessageConverter", "short_description": " Implementation of  HttpMessageConverter that can read and write RSS feeds. "},
{"api_id": 1757, "api_type": 2, "full_declaration": "AbstractJackson2HttpMessageConverter", "qualified_name": "org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter", "short_description": " Abstract base class for Jackson based and content type independent HttpMessageConverter  implementations. "},
{"api_id": 1758, "api_type": 2, "full_declaration": "AbstractJsonHttpMessageConverter", "qualified_name": "org.springframework.http.converter.json.AbstractJsonHttpMessageConverter", "short_description": " Common base class for plain JSON converters, e.g. "},
{"api_id": 1759, "api_type": 2, "full_declaration": "GsonBuilderUtils", "qualified_name": "org.springframework.http.converter.json.GsonBuilderUtils", "short_description": " A simple utility class for obtaining a Google Gson 2.x  GsonBuilder which Base64-encodes  byte[]  properties when reading and writing JSON. "},
{"api_id": 1760, "api_type": 2, "full_declaration": "GsonFactoryBean", "qualified_name": "org.springframework.http.converter.json.GsonFactoryBean", "short_description": " A  FactoryBean  for creating a Google Gson 2.x  Gson  instance. "},
{"api_id": 1761, "api_type": 2, "full_declaration": "GsonHttpMessageConverter", "qualified_name": "org.springframework.http.converter.json.GsonHttpMessageConverter", "short_description": " Implementation of  HttpMessageConverter that can read and write JSON using the Google Gson  library. "},
{"api_id": 1762, "api_type": 2, "full_declaration": "Jackson2ObjectMapperBuilder", "qualified_name": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder", "short_description": " A builder used to create  ObjectMapper  instances with a fluent API. "},
{"api_id": 1763, "api_type": 2, "full_declaration": "Jackson2ObjectMapperFactoryBean", "qualified_name": "org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean", "short_description": " A  FactoryBean  for creating a Jackson 2.x  ObjectMapper  (default) or XmlMapper  ( createXmlMapper  property set to true) with setters\nto enable or disable Jackson features from within XML configuration. "},
{"api_id": 1764, "api_type": 2, "full_declaration": "JsonbHttpMessageConverter", "qualified_name": "org.springframework.http.converter.json.JsonbHttpMessageConverter", "short_description": " Implementation of  HttpMessageConverter that can read and write JSON using the JSON Binding API . "},
{"api_id": 1765, "api_type": 2, "full_declaration": "KotlinSerializationJsonHttpMessageConverter", "qualified_name": "org.springframework.http.converter.json.KotlinSerializationJsonHttpMessageConverter", "short_description": " Implementation of  HttpMessageConverter that can read and write JSON using kotlinx.serialization . "},
{"api_id": 1766, "api_type": 2, "full_declaration": "MappingJackson2HttpMessageConverter", "qualified_name": "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter", "short_description": " Implementation of  HttpMessageConverter  that can read and\nwrite JSON using  Jackson 2.x's   ObjectMapper . "},
{"api_id": 1767, "api_type": 2, "full_declaration": "MappingJacksonInputMessage", "qualified_name": "org.springframework.http.converter.json.MappingJacksonInputMessage", "short_description": " HttpInputMessage  that can eventually stores a Jackson view that will be used\nto deserialize the message. "},
{"api_id": 1768, "api_type": 2, "full_declaration": "MappingJacksonValue", "qualified_name": "org.springframework.http.converter.json.MappingJacksonValue", "short_description": " A simple holder for the POJO to serialize via MappingJackson2HttpMessageConverter  along with further\nserialization instructions to be passed in to the converter. "},
{"api_id": 1769, "api_type": 2, "full_declaration": "SpringHandlerInstantiator", "qualified_name": "org.springframework.http.converter.json.SpringHandlerInstantiator", "short_description": " Allows for creating Jackson ( JsonSerializer ,  JsonDeserializer , KeyDeserializer ,  TypeResolverBuilder ,  TypeIdResolver )\nbeans with autowiring against a Spring  ApplicationContext . "},
{"api_id": 1770, "api_type": 3, "full_declaration": "ExtensionRegistryInitializer", "qualified_name": "org.springframework.http.converter.protobuf.ExtensionRegistryInitializer", "short_description": "Deprecated as of Spring Framework 5.1, use  ExtensionRegistry  based constructors instead "},
{"api_id": 1771, "api_type": 2, "full_declaration": "ProtobufHttpMessageConverter", "qualified_name": "org.springframework.http.converter.protobuf.ProtobufHttpMessageConverter", "short_description": " An  HttpMessageConverter  that reads and writes com.google.protobuf.Messages  using Google Protocol Buffers . "},
{"api_id": 1772, "api_type": 2, "full_declaration": "ProtobufJsonFormatHttpMessageConverter", "qualified_name": "org.springframework.http.converter.protobuf.ProtobufJsonFormatHttpMessageConverter", "short_description": " Subclass of  ProtobufHttpMessageConverter  which enforces the use of Protobuf 3 and\nits official library  \"com.google.protobuf:protobuf-java-util\"  for JSON processing. "},
{"api_id": 1773, "api_type": 2, "full_declaration": "MappingJackson2SmileHttpMessageConverter", "qualified_name": "org.springframework.http.converter.smile.MappingJackson2SmileHttpMessageConverter", "short_description": " Implementation of  HttpMessageConverter that can read and write Smile data format (\"binary JSON\") using the dedicated Jackson 2.x extension . "},
{"api_id": 1774, "api_type": 2, "full_declaration": "AllEncompassingFormHttpMessageConverter", "qualified_name": "org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter", "short_description": " Extension of  FormHttpMessageConverter ,\nadding support for XML and JSON-based parts. "},
{"api_id": 1775, "api_type": 2, "full_declaration": "AbstractJaxb2HttpMessageConverter", "qualified_name": "org.springframework.http.converter.xml.AbstractJaxb2HttpMessageConverter", "short_description": " Abstract base class for  HttpMessageConverters that use JAXB2. "},
{"api_id": 1776, "api_type": 2, "full_declaration": "AbstractXmlHttpMessageConverter", "qualified_name": "org.springframework.http.converter.xml.AbstractXmlHttpMessageConverter", "short_description": " Abstract base class for  HttpMessageConverters that convert from/to XML. "},
{"api_id": 1777, "api_type": 2, "full_declaration": "Jaxb2CollectionHttpMessageConverter", "qualified_name": "org.springframework.http.converter.xml.Jaxb2CollectionHttpMessageConverter", "short_description": " An  HttpMessageConverter  that can read XML collections using JAXB2. "},
{"api_id": 1778, "api_type": 2, "full_declaration": "Jaxb2RootElementHttpMessageConverter", "qualified_name": "org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter", "short_description": " Implementation of  HttpMessageConverter  that can read and write XML using JAXB2. "},
{"api_id": 1779, "api_type": 2, "full_declaration": "MappingJackson2XmlHttpMessageConverter", "qualified_name": "org.springframework.http.converter.xml.MappingJackson2XmlHttpMessageConverter", "short_description": " Implementation of  HttpMessageConverter that can read and write XML using  Jackson 2.x extension component for reading and writing XML encoded data . "},
{"api_id": 1780, "api_type": 2, "full_declaration": "MarshallingHttpMessageConverter", "qualified_name": "org.springframework.http.converter.xml.MarshallingHttpMessageConverter", "short_description": " Implementation of  HttpMessageConverter that can read and write XML using Spring's  Marshaller  and  Unmarshaller  abstractions. "},
{"api_id": 1781, "api_type": 2, "full_declaration": "SourceHttpMessageConverter", "qualified_name": "org.springframework.http.converter.xml.SourceHttpMessageConverter", "short_description": " Implementation of  HttpMessageConverter that can read and write  Source  objects. "},
{"api_id": 1782, "api_type": 3, "full_declaration": "PathContainer", "qualified_name": "org.springframework.http.server.PathContainer", "short_description": " Structured representation of a URI path parsed via  PathContainer.parsePath(String) into a sequence of  PathContainer.Separator  and  PathContainer.PathSegment  elements. "},
{"api_id": 1783, "api_type": 3, "full_declaration": "PathContainer.Element", "qualified_name": "org.springframework.http.server.PathContainer.Element", "short_description": " A path element, either separator or path segment. "},
{"api_id": 1784, "api_type": 3, "full_declaration": "PathContainer.PathSegment", "qualified_name": "org.springframework.http.server.PathContainer.PathSegment", "short_description": " Path segment element. "},
{"api_id": 1785, "api_type": 3, "full_declaration": "PathContainer.Separator", "qualified_name": "org.springframework.http.server.PathContainer.Separator", "short_description": " Path separator element. "},
{"api_id": 1786, "api_type": 3, "full_declaration": "RequestPath", "qualified_name": "org.springframework.http.server.RequestPath", "short_description": " Specialization of  PathContainer  that sub-divides the path into a RequestPath.contextPath()  and the remaining  RequestPath.pathWithinApplication() . "},
{"api_id": 1787, "api_type": 3, "full_declaration": "ServerHttpAsyncRequestControl", "qualified_name": "org.springframework.http.server.ServerHttpAsyncRequestControl", "short_description": " A control that can put the processing of an HTTP request in asynchronous mode during\nwhich the response remains open until explicitly closed. "},
{"api_id": 1788, "api_type": 3, "full_declaration": "ServerHttpRequest", "qualified_name": "org.springframework.http.server.ServerHttpRequest", "short_description": " Represents a server-side HTTP request. "},
{"api_id": 1789, "api_type": 3, "full_declaration": "ServerHttpResponse", "qualified_name": "org.springframework.http.server.ServerHttpResponse", "short_description": " Represents a server-side HTTP response. "},
{"api_id": 1790, "api_type": 2, "full_declaration": "PathContainer.Options", "qualified_name": "org.springframework.http.server.PathContainer.Options", "short_description": " Options to customize parsing based on the type of input path. "},
{"api_id": 1791, "api_type": 2, "full_declaration": "ServletServerHttpAsyncRequestControl", "qualified_name": "org.springframework.http.server.ServletServerHttpAsyncRequestControl", "short_description": " A  ServerHttpAsyncRequestControl  to use on Servlet containers (Servlet 3.0+). "},
{"api_id": 1792, "api_type": 2, "full_declaration": "ServletServerHttpRequest", "qualified_name": "org.springframework.http.server.ServletServerHttpRequest", "short_description": " ServerHttpRequest  implementation that is based on a  HttpServletRequest . "},
{"api_id": 1793, "api_type": 2, "full_declaration": "ServletServerHttpResponse", "qualified_name": "org.springframework.http.server.ServletServerHttpResponse", "short_description": " ServerHttpResponse  implementation that is based on a  HttpServletResponse . "},
{"api_id": 1794, "api_type": 3, "full_declaration": "HttpHandler", "qualified_name": "org.springframework.http.server.reactive.HttpHandler", "short_description": " Lowest level contract for reactive HTTP request handling that serves as a\ncommon denominator across different runtimes. "},
{"api_id": 1795, "api_type": 3, "full_declaration": "ServerHttpRequest", "qualified_name": "org.springframework.http.server.reactive.ServerHttpRequest", "short_description": " Represents a reactive server-side HTTP request. "},
{"api_id": 1796, "api_type": 3, "full_declaration": "ServerHttpRequest.Builder", "qualified_name": "org.springframework.http.server.reactive.ServerHttpRequest.Builder", "short_description": " Builder for mutating an existing  ServerHttpRequest . "},
{"api_id": 1797, "api_type": 3, "full_declaration": "ServerHttpResponse", "qualified_name": "org.springframework.http.server.reactive.ServerHttpResponse", "short_description": " Represents a reactive server-side HTTP response. "},
{"api_id": 1798, "api_type": 3, "full_declaration": "SslInfo", "qualified_name": "org.springframework.http.server.reactive.SslInfo", "short_description": " A holder for SSL session information. "},
{"api_id": 1799, "api_type": 2, "full_declaration": "AbstractListenerReadPublisher", "qualified_name": "org.springframework.http.server.reactive.AbstractListenerReadPublisher", "short_description": " Abstract base class for  Publisher  implementations that bridge between\nevent-listener read APIs and Reactive Streams. "},
{"api_id": 1800, "api_type": 2, "full_declaration": "AbstractListenerServerHttpResponse", "qualified_name": "org.springframework.http.server.reactive.AbstractListenerServerHttpResponse", "short_description": " Abstract base class for listener-based server responses, e.g. "},
{"api_id": 1801, "api_type": 2, "full_declaration": "AbstractListenerWriteFlushProcessor", "qualified_name": "org.springframework.http.server.reactive.AbstractListenerWriteFlushProcessor", "short_description": " An alternative to  AbstractListenerWriteProcessor  but instead writing\na  Publisher<Publisher<T>>  with flush boundaries enforces after\nthe completion of each nested Publisher. "},
{"api_id": 1802, "api_type": 2, "full_declaration": "AbstractListenerWriteProcessor", "qualified_name": "org.springframework.http.server.reactive.AbstractListenerWriteProcessor", "short_description": " Abstract base class for  Processor  implementations that bridge between\nevent-listener write APIs and Reactive Streams. "},
{"api_id": 1803, "api_type": 2, "full_declaration": "AbstractServerHttpRequest", "qualified_name": "org.springframework.http.server.reactive.AbstractServerHttpRequest", "short_description": " Common base class for  ServerHttpRequest  implementations. "},
{"api_id": 1804, "api_type": 2, "full_declaration": "AbstractServerHttpResponse", "qualified_name": "org.springframework.http.server.reactive.AbstractServerHttpResponse", "short_description": " Base class for  ServerHttpResponse  implementations. "},
{"api_id": 1805, "api_type": 2, "full_declaration": "ChannelSendOperator", "qualified_name": "org.springframework.http.server.reactive.ChannelSendOperator", "short_description": " Given a write function that accepts a source  Publisher<T>  to write\nwith and returns  Publisher<Void>  for the result, this operator helps\nto defer the invocation of the write function, until we know if the source\npublisher will begin publishing without an error. "},
{"api_id": 1806, "api_type": 2, "full_declaration": "ContextPathCompositeHandler", "qualified_name": "org.springframework.http.server.reactive.ContextPathCompositeHandler", "short_description": " HttpHandler  delegating requests to one of several  HttpHandler 's\nbased on simple, prefix-based mappings. "},
{"api_id": 1807, "api_type": 2, "full_declaration": "HttpHeadResponseDecorator", "qualified_name": "org.springframework.http.server.reactive.HttpHeadResponseDecorator", "short_description": " ServerHttpResponse  decorator for HTTP HEAD requests. "},
{"api_id": 1808, "api_type": 2, "full_declaration": "JettyHttpHandlerAdapter", "qualified_name": "org.springframework.http.server.reactive.JettyHttpHandlerAdapter", "short_description": " ServletHttpHandlerAdapter  extension that uses Jetty APIs for writing\nto the response with  ByteBuffer . "},
{"api_id": 1809, "api_type": 2, "full_declaration": "ReactorHttpHandlerAdapter", "qualified_name": "org.springframework.http.server.reactive.ReactorHttpHandlerAdapter", "short_description": " Adapt  HttpHandler  to the Reactor Netty channel handling function. "},
{"api_id": 1810, "api_type": 2, "full_declaration": "ServerHttpRequestDecorator", "qualified_name": "org.springframework.http.server.reactive.ServerHttpRequestDecorator", "short_description": " Wraps another  ServerHttpRequest  and delegates all methods to it. "},
{"api_id": 1811, "api_type": 2, "full_declaration": "ServerHttpResponseDecorator", "qualified_name": "org.springframework.http.server.reactive.ServerHttpResponseDecorator", "short_description": " Wraps another  ServerHttpResponse  and delegates all methods to it. "},
{"api_id": 1812, "api_type": 2, "full_declaration": "ServletHttpHandlerAdapter", "qualified_name": "org.springframework.http.server.reactive.ServletHttpHandlerAdapter", "short_description": " Adapt  HttpHandler  to an  HttpServlet  using Servlet Async support\nand Servlet 3.1 non-blocking I/O. "},
{"api_id": 1813, "api_type": 2, "full_declaration": "TomcatHttpHandlerAdapter", "qualified_name": "org.springframework.http.server.reactive.TomcatHttpHandlerAdapter", "short_description": " ServletHttpHandlerAdapter  extension that uses Tomcat APIs for reading\nfrom the request and writing to the response with  ByteBuffer . "},
{"api_id": 1814, "api_type": 2, "full_declaration": "UndertowHttpHandlerAdapter", "qualified_name": "org.springframework.http.server.reactive.UndertowHttpHandlerAdapter", "short_description": " Adapt  HttpHandler  to the Undertow  HttpHandler . "},
{"api_id": 1815, "api_type": 2, "full_declaration": "InstrumentationSavingAgent", "qualified_name": "org.springframework.instrument.InstrumentationSavingAgent", "short_description": " Java agent that saves the  Instrumentation  interface from the JVM\nfor later use. "},
{"api_id": 1816, "api_type": 3, "full_declaration": "LoadTimeWeaver", "qualified_name": "org.springframework.instrument.classloading.LoadTimeWeaver", "short_description": " Defines the contract for adding one or more ClassFileTransformers  to a  ClassLoader . "},
{"api_id": 1817, "api_type": 2, "full_declaration": "InstrumentationLoadTimeWeaver", "qualified_name": "org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver", "short_description": " LoadTimeWeaver  relying on VM  Instrumentation . "},
{"api_id": 1818, "api_type": 2, "full_declaration": "ReflectiveLoadTimeWeaver", "qualified_name": "org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver", "short_description": " LoadTimeWeaver  which uses reflection to delegate to an underlying ClassLoader\nwith well-known transformation hooks. "},
{"api_id": 1819, "api_type": 2, "full_declaration": "ResourceOverridingShadowingClassLoader", "qualified_name": "org.springframework.instrument.classloading.ResourceOverridingShadowingClassLoader", "short_description": " Subclass of ShadowingClassLoader that overrides attempts to\nlocate certain files. "},
{"api_id": 1820, "api_type": 2, "full_declaration": "ShadowingClassLoader", "qualified_name": "org.springframework.instrument.classloading.ShadowingClassLoader", "short_description": " ClassLoader decorator that shadows an enclosing ClassLoader,\napplying registered transformers to all affected classes. "},
{"api_id": 1821, "api_type": 2, "full_declaration": "SimpleInstrumentableClassLoader", "qualified_name": "org.springframework.instrument.classloading.SimpleInstrumentableClassLoader", "short_description": " Simplistic implementation of an instrumentable  ClassLoader . "},
{"api_id": 1822, "api_type": 2, "full_declaration": "SimpleLoadTimeWeaver", "qualified_name": "org.springframework.instrument.classloading.SimpleLoadTimeWeaver", "short_description": " LoadTimeWeaver  that builds and exposes a SimpleInstrumentableClassLoader . "},
{"api_id": 1823, "api_type": 2, "full_declaration": "SimpleThrowawayClassLoader", "qualified_name": "org.springframework.instrument.classloading.SimpleThrowawayClassLoader", "short_description": " ClassLoader that can be used to load classes without bringing them\ninto the parent loader. "},
{"api_id": 1824, "api_type": 2, "full_declaration": "WeavingTransformer", "qualified_name": "org.springframework.instrument.classloading.WeavingTransformer", "short_description": " ClassFileTransformer-based weaver, allowing for a list of transformers to be\napplied on a class byte array. "},
{"api_id": 1825, "api_type": 2, "full_declaration": "GlassFishLoadTimeWeaver", "qualified_name": "org.springframework.instrument.classloading.glassfish.GlassFishLoadTimeWeaver", "short_description": " LoadTimeWeaver  implementation for GlassFish's org.glassfish.api.deployment.InstrumentableClassLoader InstrumentableClassLoader . "},
{"api_id": 1826, "api_type": 2, "full_declaration": "JBossLoadTimeWeaver", "qualified_name": "org.springframework.instrument.classloading.jboss.JBossLoadTimeWeaver", "short_description": " LoadTimeWeaver  implementation for JBoss's instrumentable ClassLoader. "},
{"api_id": 1827, "api_type": 2, "full_declaration": "TomcatLoadTimeWeaver", "qualified_name": "org.springframework.instrument.classloading.tomcat.TomcatLoadTimeWeaver", "short_description": " LoadTimeWeaver  implementation\nfor Tomcat's new  org.apache.tomcat.InstrumentableClassLoader . "},
{"api_id": 1828, "api_type": 2, "full_declaration": "WebLogicLoadTimeWeaver", "qualified_name": "org.springframework.instrument.classloading.weblogic.WebLogicLoadTimeWeaver", "short_description": " LoadTimeWeaver  implementation for WebLogic's instrumentable\nClassLoader. "},
{"api_id": 1829, "api_type": 2, "full_declaration": "WebSphereLoadTimeWeaver", "qualified_name": "org.springframework.instrument.classloading.websphere.WebSphereLoadTimeWeaver", "short_description": " LoadTimeWeaver  implementation for WebSphere's instrumentable ClassLoader. "},
{"api_id": 1830, "api_type": 4, "full_declaration": "CannotCreateRecordException", "qualified_name": "org.springframework.jca.cci.CannotCreateRecordException", "short_description": "Deprecated as of 5.3, in favor of specific data access APIs\n(or native CCI usage if there is no alternative) "},
{"api_id": 1831, "api_type": 4, "full_declaration": "CannotGetCciConnectionException", "qualified_name": "org.springframework.jca.cci.CannotGetCciConnectionException", "short_description": "Deprecated as of 5.3, in favor of specific data access APIs\n(or native CCI usage if there is no alternative) "},
{"api_id": 1832, "api_type": 4, "full_declaration": "CciOperationNotSupportedException", "qualified_name": "org.springframework.jca.cci.CciOperationNotSupportedException", "short_description": "Deprecated as of 5.3, in favor of specific data access APIs\n(or native CCI usage if there is no alternative) "},
{"api_id": 1833, "api_type": 4, "full_declaration": "InvalidResultSetAccessException", "qualified_name": "org.springframework.jca.cci.InvalidResultSetAccessException", "short_description": "Deprecated as of 5.3, in favor of specific data access APIs\n(or native CCI usage if there is no alternative) "},
{"api_id": 1834, "api_type": 4, "full_declaration": "RecordTypeNotSupportedException", "qualified_name": "org.springframework.jca.cci.RecordTypeNotSupportedException", "short_description": "Deprecated as of 5.3, in favor of specific data access APIs\n(or native CCI usage if there is no alternative) "},
{"api_id": 1835, "api_type": 2, "full_declaration": "CciLocalTransactionManager", "qualified_name": "org.springframework.jca.cci.connection.CciLocalTransactionManager", "short_description": "Deprecated as of 5.3, in favor of specific data access APIs\n(or native CCI usage if there is no alternative) "},
{"api_id": 1836, "api_type": 2, "full_declaration": "ConnectionFactoryUtils", "qualified_name": "org.springframework.jca.cci.connection.ConnectionFactoryUtils", "short_description": "Deprecated as of 5.3, in favor of specific data access APIs\n(or native CCI usage if there is no alternative) "},
{"api_id": 1837, "api_type": 2, "full_declaration": "ConnectionHolder", "qualified_name": "org.springframework.jca.cci.connection.ConnectionHolder", "short_description": "Deprecated as of 5.3, in favor of specific data access APIs\n(or native CCI usage if there is no alternative) "},
{"api_id": 1838, "api_type": 2, "full_declaration": "ConnectionSpecConnectionFactoryAdapter", "qualified_name": "org.springframework.jca.cci.connection.ConnectionSpecConnectionFactoryAdapter", "short_description": "Deprecated as of 5.3, in favor of specific data access APIs\n(or native CCI usage if there is no alternative) "},
{"api_id": 1839, "api_type": 2, "full_declaration": "DelegatingConnectionFactory", "qualified_name": "org.springframework.jca.cci.connection.DelegatingConnectionFactory", "short_description": "Deprecated as of 5.3, in favor of specific data access APIs\n(or native CCI usage if there is no alternative) "},
{"api_id": 1840, "api_type": 2, "full_declaration": "NotSupportedRecordFactory", "qualified_name": "org.springframework.jca.cci.connection.NotSupportedRecordFactory", "short_description": "Deprecated as of 5.3, in favor of specific data access APIs\n(or native CCI usage if there is no alternative) "},
{"api_id": 1841, "api_type": 2, "full_declaration": "SingleConnectionFactory", "qualified_name": "org.springframework.jca.cci.connection.SingleConnectionFactory", "short_description": "Deprecated as of 5.3, in favor of specific data access APIs\n(or native CCI usage if there is no alternative) "},
{"api_id": 1842, "api_type": 2, "full_declaration": "TransactionAwareConnectionFactoryProxy", "qualified_name": "org.springframework.jca.cci.connection.TransactionAwareConnectionFactoryProxy", "short_description": "Deprecated as of 5.3, in favor of specific data access APIs\n(or native CCI usage if there is no alternative) "},
{"api_id": 1843, "api_type": 3, "full_declaration": "CciOperations", "qualified_name": "org.springframework.jca.cci.core.CciOperations", "short_description": "Deprecated as of 5.3, in favor of specific data access APIs\n(or native CCI usage if there is no alternative) "},
{"api_id": 1844, "api_type": 3, "full_declaration": "ConnectionCallback", "qualified_name": "org.springframework.jca.cci.core.ConnectionCallback", "short_description": "Deprecated as of 5.3, in favor of specific data access APIs\n(or native CCI usage if there is no alternative) "},
{"api_id": 1845, "api_type": 3, "full_declaration": "InteractionCallback", "qualified_name": "org.springframework.jca.cci.core.InteractionCallback", "short_description": "Deprecated as of 5.3, in favor of specific data access APIs\n(or native CCI usage if there is no alternative) "},
{"api_id": 1846, "api_type": 3, "full_declaration": "RecordCreator", "qualified_name": "org.springframework.jca.cci.core.RecordCreator", "short_description": "Deprecated as of 5.3, in favor of specific data access APIs\n(or native CCI usage if there is no alternative) "},
{"api_id": 1847, "api_type": 3, "full_declaration": "RecordExtractor", "qualified_name": "org.springframework.jca.cci.core.RecordExtractor", "short_description": "Deprecated as of 5.3, in favor of specific data access APIs\n(or native CCI usage if there is no alternative) "},
{"api_id": 1848, "api_type": 2, "full_declaration": "CciTemplate", "qualified_name": "org.springframework.jca.cci.core.CciTemplate", "short_description": "Deprecated as of 5.3, in favor of specific data access APIs\n(or native CCI usage if there is no alternative) "},
{"api_id": 1849, "api_type": 2, "full_declaration": "CciDaoSupport", "qualified_name": "org.springframework.jca.cci.core.support.CciDaoSupport", "short_description": "Deprecated as of 5.3, in favor of specific data access APIs\n(or native CCI usage if there is no alternative) "},
{"api_id": 1850, "api_type": 2, "full_declaration": "CommAreaRecord", "qualified_name": "org.springframework.jca.cci.core.support.CommAreaRecord", "short_description": "Deprecated as of 5.3, in favor of specific data access APIs\n(or native CCI usage if there is no alternative) "},
{"api_id": 1851, "api_type": 2, "full_declaration": "EisOperation", "qualified_name": "org.springframework.jca.cci.object.EisOperation", "short_description": "Deprecated as of 5.3, in favor of specific data access APIs\n(or native CCI usage if there is no alternative) "},
{"api_id": 1852, "api_type": 2, "full_declaration": "MappingCommAreaOperation", "qualified_name": "org.springframework.jca.cci.object.MappingCommAreaOperation", "short_description": "Deprecated as of 5.3, in favor of specific data access APIs\n(or native CCI usage if there is no alternative) "},
{"api_id": 1853, "api_type": 2, "full_declaration": "MappingRecordOperation", "qualified_name": "org.springframework.jca.cci.object.MappingRecordOperation", "short_description": "Deprecated as of 5.3, in favor of specific data access APIs\n(or native CCI usage if there is no alternative) "},
{"api_id": 1854, "api_type": 2, "full_declaration": "SimpleRecordOperation", "qualified_name": "org.springframework.jca.cci.object.SimpleRecordOperation", "short_description": "Deprecated as of 5.3, in favor of specific data access APIs\n(or native CCI usage if there is no alternative) "},
{"api_id": 1855, "api_type": 3, "full_declaration": "BootstrapContextAware", "qualified_name": "org.springframework.jca.context.BootstrapContextAware", "short_description": " Interface to be implemented by any object that wishes to be\nnotified of the BootstrapContext (typically determined by the ResourceAdapterApplicationContext ) that it runs in. "},
{"api_id": 1856, "api_type": 2, "full_declaration": "ResourceAdapterApplicationContext", "qualified_name": "org.springframework.jca.context.ResourceAdapterApplicationContext", "short_description": " ApplicationContext  implementation\nfor a JCA ResourceAdapter. "},
{"api_id": 1857, "api_type": 2, "full_declaration": "SpringContextResourceAdapter", "qualified_name": "org.springframework.jca.context.SpringContextResourceAdapter", "short_description": " JCA 1.7  ResourceAdapter  implementation\nthat loads a Spring  ApplicationContext ,\nstarting and stopping Spring-managed beans as part of the ResourceAdapter's\nlifecycle. "},
{"api_id": 1858, "api_type": 2, "full_declaration": "AbstractMessageEndpointFactory", "qualified_name": "org.springframework.jca.endpoint.AbstractMessageEndpointFactory", "short_description": " Abstract base implementation of the JCA 1.7 MessageEndpointFactory  interface,\nproviding transaction management capabilities as well as ClassLoader\nexposure for endpoint invocations. "},
{"api_id": 1859, "api_type": 2, "full_declaration": "GenericMessageEndpointFactory", "qualified_name": "org.springframework.jca.endpoint.GenericMessageEndpointFactory", "short_description": " Generic implementation of the JCA 1.7 MessageEndpointFactory  interface,\nproviding transaction management capabilities for any kind of message\nlistener object (e.g. "},
{"api_id": 1860, "api_type": 2, "full_declaration": "GenericMessageEndpointManager", "qualified_name": "org.springframework.jca.endpoint.GenericMessageEndpointManager", "short_description": " Generic bean that manages JCA 1.7 message endpoints within a Spring\napplication context, activating and deactivating the endpoint as part\nof the application context's lifecycle. "},
{"api_id": 1861, "api_type": 4, "full_declaration": "GenericMessageEndpointFactory.InternalResourceException", "qualified_name": "org.springframework.jca.endpoint.GenericMessageEndpointFactory.InternalResourceException", "short_description": " Internal exception thrown when a ResourceException has been encountered\nduring the endpoint invocation. "},
{"api_id": 1862, "api_type": 2, "full_declaration": "LocalConnectionFactoryBean", "qualified_name": "org.springframework.jca.support.LocalConnectionFactoryBean", "short_description": " FactoryBean  that creates\na local JCA connection factory in \"non-managed\" mode (as defined by the\nJava Connector Architecture specification). "},
{"api_id": 1863, "api_type": 2, "full_declaration": "ResourceAdapterFactoryBean", "qualified_name": "org.springframework.jca.support.ResourceAdapterFactoryBean", "short_description": " FactoryBean  that bootstraps\nthe specified JCA 1.7  ResourceAdapter ,\nstarting it with a local  BootstrapContext and exposing it for bean references. "},
{"api_id": 1864, "api_type": 2, "full_declaration": "SimpleBootstrapContext", "qualified_name": "org.springframework.jca.support.SimpleBootstrapContext", "short_description": " Simple implementation of the JCA 1.7  BootstrapContext interface, used for bootstrapping a JCA ResourceAdapter in a local environment. "},
{"api_id": 1865, "api_type": 2, "full_declaration": "DelegatingWork", "qualified_name": "org.springframework.jca.work.DelegatingWork", "short_description": " Simple Work adapter that delegates to a given Runnable. "},
{"api_id": 1866, "api_type": 2, "full_declaration": "SimpleTaskWorkManager", "qualified_name": "org.springframework.jca.work.SimpleTaskWorkManager", "short_description": " Simple JCA 1.7  WorkManager  implementation that\ndelegates to a Spring  TaskExecutor . "},
{"api_id": 1867, "api_type": 2, "full_declaration": "WorkManagerTaskExecutor", "qualified_name": "org.springframework.jca.work.WorkManagerTaskExecutor", "short_description": " TaskExecutor  implementation\nthat delegates to a JCA 1.7 WorkManager, implementing the WorkManager  interface. "},
{"api_id": 1868, "api_type": 4, "full_declaration": "BadSqlGrammarException", "qualified_name": "org.springframework.jdbc.BadSqlGrammarException", "short_description": " Exception thrown when SQL specified is invalid. "},
{"api_id": 1869, "api_type": 4, "full_declaration": "CannotGetJdbcConnectionException", "qualified_name": "org.springframework.jdbc.CannotGetJdbcConnectionException", "short_description": " Fatal exception thrown when we can't connect to an RDBMS using JDBC. "},
{"api_id": 1870, "api_type": 4, "full_declaration": "IncorrectResultSetColumnCountException", "qualified_name": "org.springframework.jdbc.IncorrectResultSetColumnCountException", "short_description": " Data access exception thrown when a result set did not have the correct column count,\nfor example when expecting a single column but getting 0 or more than 1 columns. "},
{"api_id": 1871, "api_type": 4, "full_declaration": "InvalidResultSetAccessException", "qualified_name": "org.springframework.jdbc.InvalidResultSetAccessException", "short_description": " Exception thrown when a ResultSet has been accessed in an invalid fashion. "},
{"api_id": 1872, "api_type": 4, "full_declaration": "JdbcUpdateAffectedIncorrectNumberOfRowsException", "qualified_name": "org.springframework.jdbc.JdbcUpdateAffectedIncorrectNumberOfRowsException", "short_description": " Exception thrown when a JDBC update affects an unexpected number of rows. "},
{"api_id": 1873, "api_type": 4, "full_declaration": "LobRetrievalFailureException", "qualified_name": "org.springframework.jdbc.LobRetrievalFailureException", "short_description": " Exception to be thrown when a LOB could not be retrieved. "},
{"api_id": 1874, "api_type": 4, "full_declaration": "SQLWarningException", "qualified_name": "org.springframework.jdbc.SQLWarningException", "short_description": " Exception thrown when we're not ignoring  SQLWarnings . "},
{"api_id": 1875, "api_type": 4, "full_declaration": "UncategorizedSQLException", "qualified_name": "org.springframework.jdbc.UncategorizedSQLException", "short_description": " Exception thrown when we can't classify an SQLException into\none of our generic data access exceptions. "},
{"api_id": 1876, "api_type": 2, "full_declaration": "JdbcNamespaceHandler", "qualified_name": "org.springframework.jdbc.config.JdbcNamespaceHandler", "short_description": " NamespaceHandler  for JDBC configuration namespace. "},
{"api_id": 1877, "api_type": 2, "full_declaration": "SortedResourcesFactoryBean", "qualified_name": "org.springframework.jdbc.config.SortedResourcesFactoryBean", "short_description": " FactoryBean  implementation that takes a list of location Strings\nand creates a sorted array of  Resource  instances. "},
{"api_id": 1878, "api_type": 3, "full_declaration": "BatchPreparedStatementSetter", "qualified_name": "org.springframework.jdbc.core.BatchPreparedStatementSetter", "short_description": " Batch update callback interface used by the  JdbcTemplate  class. "},
{"api_id": 1879, "api_type": 3, "full_declaration": "CallableStatementCallback", "qualified_name": "org.springframework.jdbc.core.CallableStatementCallback", "short_description": " Generic callback interface for code that operates on a CallableStatement. "},
{"api_id": 1880, "api_type": 3, "full_declaration": "CallableStatementCreator", "qualified_name": "org.springframework.jdbc.core.CallableStatementCreator", "short_description": " One of the three central callback interfaces used by the JdbcTemplate class. "},
{"api_id": 1881, "api_type": 3, "full_declaration": "ConnectionCallback", "qualified_name": "org.springframework.jdbc.core.ConnectionCallback", "short_description": " Generic callback interface for code that operates on a JDBC Connection. "},
{"api_id": 1882, "api_type": 3, "full_declaration": "DisposableSqlTypeValue", "qualified_name": "org.springframework.jdbc.core.DisposableSqlTypeValue", "short_description": " Subinterface of  SqlTypeValue  that adds a cleanup callback,\nto be invoked after the value has been set and the corresponding\nstatement has been executed. "},
{"api_id": 1883, "api_type": 3, "full_declaration": "InterruptibleBatchPreparedStatementSetter", "qualified_name": "org.springframework.jdbc.core.InterruptibleBatchPreparedStatementSetter", "short_description": " Extension of the  BatchPreparedStatementSetter  interface,\nadding a batch exhaustion check. "},
{"api_id": 1884, "api_type": 3, "full_declaration": "JdbcOperations", "qualified_name": "org.springframework.jdbc.core.JdbcOperations", "short_description": " Interface specifying a basic set of JDBC operations. "},
{"api_id": 1885, "api_type": 3, "full_declaration": "ParameterDisposer", "qualified_name": "org.springframework.jdbc.core.ParameterDisposer", "short_description": " Interface to be implemented by objects that can close resources\nallocated by parameters like  SqlLobValue  objects. "},
{"api_id": 1886, "api_type": 3, "full_declaration": "ParameterizedPreparedStatementSetter", "qualified_name": "org.springframework.jdbc.core.ParameterizedPreparedStatementSetter", "short_description": " Parameterized callback interface used by the  JdbcTemplate  class for\nbatch updates. "},
{"api_id": 1887, "api_type": 3, "full_declaration": "ParameterMapper", "qualified_name": "org.springframework.jdbc.core.ParameterMapper", "short_description": " Implement this interface when parameters need to be customized based\non the connection. "},
{"api_id": 1888, "api_type": 3, "full_declaration": "PreparedStatementCallback", "qualified_name": "org.springframework.jdbc.core.PreparedStatementCallback", "short_description": " Generic callback interface for code that operates on a PreparedStatement. "},
{"api_id": 1889, "api_type": 3, "full_declaration": "PreparedStatementCreator", "qualified_name": "org.springframework.jdbc.core.PreparedStatementCreator", "short_description": " One of the two central callback interfaces used by the JdbcTemplate class. "},
{"api_id": 1890, "api_type": 3, "full_declaration": "PreparedStatementSetter", "qualified_name": "org.springframework.jdbc.core.PreparedStatementSetter", "short_description": " General callback interface used by the  JdbcTemplate  class. "},
{"api_id": 1891, "api_type": 3, "full_declaration": "ResultSetExtractor", "qualified_name": "org.springframework.jdbc.core.ResultSetExtractor", "short_description": " Callback interface used by  JdbcTemplate 's query methods. "},
{"api_id": 1892, "api_type": 3, "full_declaration": "RowCallbackHandler", "qualified_name": "org.springframework.jdbc.core.RowCallbackHandler", "short_description": " An interface used by  JdbcTemplate  for processing rows of a ResultSet  on a per-row basis. "},
{"api_id": 1893, "api_type": 3, "full_declaration": "RowMapper", "qualified_name": "org.springframework.jdbc.core.RowMapper", "short_description": " An interface used by  JdbcTemplate  for mapping rows of a ResultSet  on a per-row basis. "},
{"api_id": 1894, "api_type": 3, "full_declaration": "SqlProvider", "qualified_name": "org.springframework.jdbc.core.SqlProvider", "short_description": " Interface to be implemented by objects that can provide SQL strings. "},
{"api_id": 1895, "api_type": 3, "full_declaration": "SqlReturnType", "qualified_name": "org.springframework.jdbc.core.SqlReturnType", "short_description": " Interface to be implemented for retrieving values for more complex database-specific\ntypes not supported by the standard  CallableStatement.getObject  method. "},
{"api_id": 1896, "api_type": 3, "full_declaration": "SqlTypeValue", "qualified_name": "org.springframework.jdbc.core.SqlTypeValue", "short_description": " Interface to be implemented for setting values for more complex database-specific\ntypes not supported by the standard  setObject  method. "},
{"api_id": 1897, "api_type": 3, "full_declaration": "StatementCallback", "qualified_name": "org.springframework.jdbc.core.StatementCallback", "short_description": " Generic callback interface for code that operates on a JDBC Statement. "},
{"api_id": 1898, "api_type": 2, "full_declaration": "ArgumentPreparedStatementSetter", "qualified_name": "org.springframework.jdbc.core.ArgumentPreparedStatementSetter", "short_description": " Simple adapter for  PreparedStatementSetter  that applies a given array of arguments. "},
{"api_id": 1899, "api_type": 2, "full_declaration": "ArgumentTypePreparedStatementSetter", "qualified_name": "org.springframework.jdbc.core.ArgumentTypePreparedStatementSetter", "short_description": " Simple adapter for  PreparedStatementSetter  that applies\ngiven arrays of arguments and JDBC argument types. "},
{"api_id": 1900, "api_type": 2, "full_declaration": "BatchUpdateUtils", "qualified_name": "org.springframework.jdbc.core.BatchUpdateUtils", "short_description": "Deprecated as of 5.1.3, not used by  JdbcTemplate  anymore "},
{"api_id": 1901, "api_type": 2, "full_declaration": "BeanPropertyRowMapper", "qualified_name": "org.springframework.jdbc.core.BeanPropertyRowMapper", "short_description": " RowMapper  implementation that converts a row into a new instance\nof the specified mapped target class. "},
{"api_id": 1902, "api_type": 2, "full_declaration": "CallableStatementCreatorFactory", "qualified_name": "org.springframework.jdbc.core.CallableStatementCreatorFactory", "short_description": " Helper class that efficiently creates multiple  CallableStatementCreator objects with different parameters based on an SQL statement and a single\nset of parameter declarations. "},
{"api_id": 1903, "api_type": 2, "full_declaration": "ColumnMapRowMapper", "qualified_name": "org.springframework.jdbc.core.ColumnMapRowMapper", "short_description": " RowMapper  implementation that creates a  java.util.Map for each row, representing all columns as key-value pairs: one\nentry for each column, with the column name as key. "},
{"api_id": 1904, "api_type": 2, "full_declaration": "DataClassRowMapper", "qualified_name": "org.springframework.jdbc.core.DataClassRowMapper", "short_description": " RowMapper  implementation that converts a row into a new instance\nof the specified mapped target class. "},
{"api_id": 1905, "api_type": 2, "full_declaration": "JdbcTemplate", "qualified_name": "org.springframework.jdbc.core.JdbcTemplate", "short_description": " This is the central class in the JDBC core package. It simplifies the use of JDBC and helps to avoid common errors. "},
{"api_id": 1906, "api_type": 2, "full_declaration": "PreparedStatementCreatorFactory", "qualified_name": "org.springframework.jdbc.core.PreparedStatementCreatorFactory", "short_description": " Helper class that efficiently creates multiple  PreparedStatementCreator objects with different parameters based on an SQL statement and a single\nset of parameter declarations. "},
{"api_id": 1907, "api_type": 2, "full_declaration": "ResultSetSupportingSqlParameter", "qualified_name": "org.springframework.jdbc.core.ResultSetSupportingSqlParameter", "short_description": " Common base class for ResultSet-supporting SqlParameters like SqlOutParameter  and  SqlReturnResultSet . "},
{"api_id": 1908, "api_type": 2, "full_declaration": "RowCountCallbackHandler", "qualified_name": "org.springframework.jdbc.core.RowCountCallbackHandler", "short_description": " Implementation of RowCallbackHandler. "},
{"api_id": 1909, "api_type": 2, "full_declaration": "RowMapperResultSetExtractor", "qualified_name": "org.springframework.jdbc.core.RowMapperResultSetExtractor", "short_description": " Adapter implementation of the ResultSetExtractor interface that delegates\nto a RowMapper which is supposed to create an object for each row. "},
{"api_id": 1910, "api_type": 2, "full_declaration": "SingleColumnRowMapper", "qualified_name": "org.springframework.jdbc.core.SingleColumnRowMapper", "short_description": " RowMapper  implementation that converts a single column into a single\nresult value per row. "},
{"api_id": 1911, "api_type": 2, "full_declaration": "SqlInOutParameter", "qualified_name": "org.springframework.jdbc.core.SqlInOutParameter", "short_description": " Subclass of  SqlOutParameter  to represent an INOUT parameter. "},
{"api_id": 1912, "api_type": 2, "full_declaration": "SqlOutParameter", "qualified_name": "org.springframework.jdbc.core.SqlOutParameter", "short_description": " Subclass of  SqlParameter  to represent an output parameter. "},
{"api_id": 1913, "api_type": 2, "full_declaration": "SqlParameter", "qualified_name": "org.springframework.jdbc.core.SqlParameter", "short_description": " Object to represent an SQL parameter definition. "},
{"api_id": 1914, "api_type": 2, "full_declaration": "SqlParameterValue", "qualified_name": "org.springframework.jdbc.core.SqlParameterValue", "short_description": " Object to represent an SQL parameter value, including parameter meta-data\nsuch as the SQL type and the scale for numeric values. "},
{"api_id": 1915, "api_type": 2, "full_declaration": "SqlReturnResultSet", "qualified_name": "org.springframework.jdbc.core.SqlReturnResultSet", "short_description": " Represents a returned  ResultSet  from a stored procedure call. "},
{"api_id": 1916, "api_type": 2, "full_declaration": "SqlReturnUpdateCount", "qualified_name": "org.springframework.jdbc.core.SqlReturnUpdateCount", "short_description": " Represents a returned update count from a stored procedure call. "},
{"api_id": 1917, "api_type": 2, "full_declaration": "SqlRowSetResultSetExtractor", "qualified_name": "org.springframework.jdbc.core.SqlRowSetResultSetExtractor", "short_description": " ResultSetExtractor  implementation that returns a Spring  SqlRowSet representation for each given  ResultSet . "},
{"api_id": 1918, "api_type": 2, "full_declaration": "StatementCreatorUtils", "qualified_name": "org.springframework.jdbc.core.StatementCreatorUtils", "short_description": " Utility methods for PreparedStatementSetter/Creator and CallableStatementCreator\nimplementations, providing sophisticated parameter management (including support\nfor LOB values). "},
{"api_id": 1919, "api_type": 3, "full_declaration": "CallMetaDataProvider", "qualified_name": "org.springframework.jdbc.core.metadata.CallMetaDataProvider", "short_description": " Interface specifying the API to be implemented by a class providing call meta-data. "},
{"api_id": 1920, "api_type": 3, "full_declaration": "TableMetaDataProvider", "qualified_name": "org.springframework.jdbc.core.metadata.TableMetaDataProvider", "short_description": " Interface specifying the API to be implemented by a class providing table meta-data. "},
{"api_id": 1921, "api_type": 2, "full_declaration": "CallMetaDataContext", "qualified_name": "org.springframework.jdbc.core.metadata.CallMetaDataContext", "short_description": " Class to manage context meta-data used for the configuration\nand execution of a stored procedure call. "},
{"api_id": 1922, "api_type": 2, "full_declaration": "CallMetaDataProviderFactory", "qualified_name": "org.springframework.jdbc.core.metadata.CallMetaDataProviderFactory", "short_description": " Factory used to create a  CallMetaDataProvider  implementation\nbased on the type of database being used. "},
{"api_id": 1923, "api_type": 2, "full_declaration": "CallParameterMetaData", "qualified_name": "org.springframework.jdbc.core.metadata.CallParameterMetaData", "short_description": " Holder of meta-data for a specific parameter that is used for call processing. "},
{"api_id": 1924, "api_type": 2, "full_declaration": "Db2CallMetaDataProvider", "qualified_name": "org.springframework.jdbc.core.metadata.Db2CallMetaDataProvider", "short_description": " DB2 specific implementation for the  CallMetaDataProvider  interface. "},
{"api_id": 1925, "api_type": 2, "full_declaration": "DerbyCallMetaDataProvider", "qualified_name": "org.springframework.jdbc.core.metadata.DerbyCallMetaDataProvider", "short_description": " Derby specific implementation for the  CallMetaDataProvider  interface. "},
{"api_id": 1926, "api_type": 2, "full_declaration": "DerbyTableMetaDataProvider", "qualified_name": "org.springframework.jdbc.core.metadata.DerbyTableMetaDataProvider", "short_description": " The Derby specific implementation of  TableMetaDataProvider . "},
{"api_id": 1927, "api_type": 2, "full_declaration": "GenericCallMetaDataProvider", "qualified_name": "org.springframework.jdbc.core.metadata.GenericCallMetaDataProvider", "short_description": " A generic implementation of the  CallMetaDataProvider  interface. "},
{"api_id": 1928, "api_type": 2, "full_declaration": "GenericTableMetaDataProvider", "qualified_name": "org.springframework.jdbc.core.metadata.GenericTableMetaDataProvider", "short_description": " A generic implementation of the  TableMetaDataProvider  interface\nwhich should provide enough features for all supported databases. "},
{"api_id": 1929, "api_type": 2, "full_declaration": "HanaCallMetaDataProvider", "qualified_name": "org.springframework.jdbc.core.metadata.HanaCallMetaDataProvider", "short_description": " SAP HANA specific implementation for the  CallMetaDataProvider  interface. "},
{"api_id": 1930, "api_type": 2, "full_declaration": "HsqlTableMetaDataProvider", "qualified_name": "org.springframework.jdbc.core.metadata.HsqlTableMetaDataProvider", "short_description": " The HSQL specific implementation of  TableMetaDataProvider . "},
{"api_id": 1931, "api_type": 2, "full_declaration": "OracleCallMetaDataProvider", "qualified_name": "org.springframework.jdbc.core.metadata.OracleCallMetaDataProvider", "short_description": " Oracle-specific implementation for the  CallMetaDataProvider  interface. "},
{"api_id": 1932, "api_type": 2, "full_declaration": "OracleTableMetaDataProvider", "qualified_name": "org.springframework.jdbc.core.metadata.OracleTableMetaDataProvider", "short_description": " Oracle-specific implementation of the  TableMetaDataProvider . "},
{"api_id": 1933, "api_type": 2, "full_declaration": "PostgresCallMetaDataProvider", "qualified_name": "org.springframework.jdbc.core.metadata.PostgresCallMetaDataProvider", "short_description": " Postgres-specific implementation for the  CallMetaDataProvider  interface. "},
{"api_id": 1934, "api_type": 2, "full_declaration": "PostgresTableMetaDataProvider", "qualified_name": "org.springframework.jdbc.core.metadata.PostgresTableMetaDataProvider", "short_description": " The PostgreSQL specific implementation of  TableMetaDataProvider . "},
{"api_id": 1935, "api_type": 2, "full_declaration": "SqlServerCallMetaDataProvider", "qualified_name": "org.springframework.jdbc.core.metadata.SqlServerCallMetaDataProvider", "short_description": " SQL Server specific implementation for the  CallMetaDataProvider  interface. "},
{"api_id": 1936, "api_type": 2, "full_declaration": "SybaseCallMetaDataProvider", "qualified_name": "org.springframework.jdbc.core.metadata.SybaseCallMetaDataProvider", "short_description": " Sybase specific implementation for the  CallMetaDataProvider  interface. "},
{"api_id": 1937, "api_type": 2, "full_declaration": "TableMetaDataContext", "qualified_name": "org.springframework.jdbc.core.metadata.TableMetaDataContext", "short_description": " Class to manage context meta-data used for the configuration\nand execution of operations on a database table. "},
{"api_id": 1938, "api_type": 2, "full_declaration": "TableMetaDataProviderFactory", "qualified_name": "org.springframework.jdbc.core.metadata.TableMetaDataProviderFactory", "short_description": " Factory used to create a  TableMetaDataProvider  implementation\nbased on the type of database being used. "},
{"api_id": 1939, "api_type": 2, "full_declaration": "TableParameterMetaData", "qualified_name": "org.springframework.jdbc.core.metadata.TableParameterMetaData", "short_description": " Holder of meta-data for a specific parameter that is used for table processing. "},
{"api_id": 1940, "api_type": 3, "full_declaration": "NamedParameterJdbcOperations", "qualified_name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations", "short_description": " Interface specifying a basic set of JDBC operations allowing the use\nof named parameters rather than the traditional '?' placeholders. "},
{"api_id": 1941, "api_type": 3, "full_declaration": "SqlParameterSource", "qualified_name": "org.springframework.jdbc.core.namedparam.SqlParameterSource", "short_description": " Interface that defines common functionality for objects that can\noffer parameter values for named SQL parameters, serving as argument\nfor  NamedParameterJdbcTemplate  operations. "},
{"api_id": 1942, "api_type": 2, "full_declaration": "AbstractSqlParameterSource", "qualified_name": "org.springframework.jdbc.core.namedparam.AbstractSqlParameterSource", "short_description": " Abstract base class for  SqlParameterSource  implementations. "},
{"api_id": 1943, "api_type": 2, "full_declaration": "BeanPropertySqlParameterSource", "qualified_name": "org.springframework.jdbc.core.namedparam.BeanPropertySqlParameterSource", "short_description": " SqlParameterSource  implementation that obtains parameter values\nfrom bean properties of a given JavaBean object. "},
{"api_id": 1944, "api_type": 2, "full_declaration": "EmptySqlParameterSource", "qualified_name": "org.springframework.jdbc.core.namedparam.EmptySqlParameterSource", "short_description": " A simple empty implementation of the  SqlParameterSource  interface. "},
{"api_id": 1945, "api_type": 2, "full_declaration": "MapSqlParameterSource", "qualified_name": "org.springframework.jdbc.core.namedparam.MapSqlParameterSource", "short_description": " SqlParameterSource  implementation that holds a given Map of parameters. "},
{"api_id": 1946, "api_type": 2, "full_declaration": "NamedParameterBatchUpdateUtils", "qualified_name": "org.springframework.jdbc.core.namedparam.NamedParameterBatchUpdateUtils", "short_description": "Deprecated as of 5.1.3, not used by  NamedParameterJdbcTemplate  anymore "},
{"api_id": 1947, "api_type": 2, "full_declaration": "NamedParameterJdbcDaoSupport", "qualified_name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcDaoSupport", "short_description": " Extension of JdbcDaoSupport that exposes a NamedParameterJdbcTemplate as well. "},
{"api_id": 1948, "api_type": 2, "full_declaration": "NamedParameterJdbcTemplate", "qualified_name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate", "short_description": " Template class with a basic set of JDBC operations, allowing the use\nof named parameters rather than traditional '?' placeholders. "},
{"api_id": 1949, "api_type": 2, "full_declaration": "NamedParameterUtils", "qualified_name": "org.springframework.jdbc.core.namedparam.NamedParameterUtils", "short_description": " Helper methods for named parameter parsing. "},
{"api_id": 1950, "api_type": 2, "full_declaration": "ParsedSql", "qualified_name": "org.springframework.jdbc.core.namedparam.ParsedSql", "short_description": " Holds information about a parsed SQL statement. "},
{"api_id": 1951, "api_type": 2, "full_declaration": "SqlParameterSourceUtils", "qualified_name": "org.springframework.jdbc.core.namedparam.SqlParameterSourceUtils", "short_description": " Class that provides helper methods for the use of  SqlParameterSource ,\nin particular with  NamedParameterJdbcTemplate . "},
{"api_id": 1952, "api_type": 3, "full_declaration": "SimpleJdbcCallOperations", "qualified_name": "org.springframework.jdbc.core.simple.SimpleJdbcCallOperations", "short_description": " Interface specifying the API for a Simple JDBC Call implemented by  SimpleJdbcCall . "},
{"api_id": 1953, "api_type": 3, "full_declaration": "SimpleJdbcInsertOperations", "qualified_name": "org.springframework.jdbc.core.simple.SimpleJdbcInsertOperations", "short_description": " Interface specifying the API for a Simple JDBC Insert implemented by  SimpleJdbcInsert . "},
{"api_id": 1954, "api_type": 2, "full_declaration": "AbstractJdbcCall", "qualified_name": "org.springframework.jdbc.core.simple.AbstractJdbcCall", "short_description": " Abstract class to provide base functionality for easy stored procedure calls\nbased on configuration options and database meta-data. "},
{"api_id": 1955, "api_type": 2, "full_declaration": "AbstractJdbcInsert", "qualified_name": "org.springframework.jdbc.core.simple.AbstractJdbcInsert", "short_description": " Abstract class to provide base functionality for easy inserts\nbased on configuration options and database meta-data. "},
{"api_id": 1956, "api_type": 2, "full_declaration": "SimpleJdbcCall", "qualified_name": "org.springframework.jdbc.core.simple.SimpleJdbcCall", "short_description": " A SimpleJdbcCall is a multi-threaded, reusable object representing a call\nto a stored procedure or a stored function. "},
{"api_id": 1957, "api_type": 2, "full_declaration": "SimpleJdbcInsert", "qualified_name": "org.springframework.jdbc.core.simple.SimpleJdbcInsert", "short_description": " A SimpleJdbcInsert is a multi-threaded, reusable object providing easy insert\ncapabilities for a table. "},
{"api_id": 1958, "api_type": 2, "full_declaration": "AbstractInterruptibleBatchPreparedStatementSetter", "qualified_name": "org.springframework.jdbc.core.support.AbstractInterruptibleBatchPreparedStatementSetter", "short_description": " Abstract implementation of the  InterruptibleBatchPreparedStatementSetter interface, combining the check for available values and setting of those\ninto a single callback method  AbstractInterruptibleBatchPreparedStatementSetter.setValuesIfAvailable(java.sql.PreparedStatement, int) . "},
{"api_id": 1959, "api_type": 2, "full_declaration": "AbstractLobCreatingPreparedStatementCallback", "qualified_name": "org.springframework.jdbc.core.support.AbstractLobCreatingPreparedStatementCallback", "short_description": " Abstract  PreparedStatementCallback  implementation that manages a  LobCreator . "},
{"api_id": 1960, "api_type": 2, "full_declaration": "AbstractLobStreamingResultSetExtractor", "qualified_name": "org.springframework.jdbc.core.support.AbstractLobStreamingResultSetExtractor", "short_description": " Abstract ResultSetExtractor implementation that assumes streaming of LOB data. "},
{"api_id": 1961, "api_type": 2, "full_declaration": "AbstractSqlTypeValue", "qualified_name": "org.springframework.jdbc.core.support.AbstractSqlTypeValue", "short_description": " Abstract implementation of the SqlTypeValue interface, for convenient\ncreation of type values that are supposed to be passed into the PreparedStatement.setObject  method. "},
{"api_id": 1962, "api_type": 2, "full_declaration": "JdbcBeanDefinitionReader", "qualified_name": "org.springframework.jdbc.core.support.JdbcBeanDefinitionReader", "short_description": "Deprecated as of 5.3, in favor of Spring's common bean definition formats\nand/or custom reader implementations "},
{"api_id": 1963, "api_type": 2, "full_declaration": "JdbcDaoSupport", "qualified_name": "org.springframework.jdbc.core.support.JdbcDaoSupport", "short_description": " Convenient super class for JDBC-based data access objects. "},
{"api_id": 1964, "api_type": 2, "full_declaration": "SqlLobValue", "qualified_name": "org.springframework.jdbc.core.support.SqlLobValue", "short_description": " Object to represent an SQL BLOB/CLOB value parameter. "},
{"api_id": 1965, "api_type": 3, "full_declaration": "ConnectionHandle", "qualified_name": "org.springframework.jdbc.datasource.ConnectionHandle", "short_description": " Simple interface to be implemented by handles for a JDBC Connection. "},
{"api_id": 1966, "api_type": 3, "full_declaration": "ConnectionProxy", "qualified_name": "org.springframework.jdbc.datasource.ConnectionProxy", "short_description": " Subinterface of  Connection  to be implemented by\nConnection proxies. "},
{"api_id": 1967, "api_type": 3, "full_declaration": "SmartDataSource", "qualified_name": "org.springframework.jdbc.datasource.SmartDataSource", "short_description": " Extension of the  javax.sql.DataSource  interface, to be\nimplemented by special DataSources that return JDBC Connections\nin an unwrapped fashion. "},
{"api_id": 1968, "api_type": 2, "full_declaration": "AbstractDataSource", "qualified_name": "org.springframework.jdbc.datasource.AbstractDataSource", "short_description": " Abstract base class for Spring's  DataSource implementations, taking care of the padding. "},
{"api_id": 1969, "api_type": 2, "full_declaration": "AbstractDriverBasedDataSource", "qualified_name": "org.springframework.jdbc.datasource.AbstractDriverBasedDataSource", "short_description": " Abstract base class for JDBC  DataSource  implementations\nthat operate on a JDBC  Driver . "},
{"api_id": 1970, "api_type": 2, "full_declaration": "ConnectionHolder", "qualified_name": "org.springframework.jdbc.datasource.ConnectionHolder", "short_description": " Resource holder wrapping a JDBC  Connection . "},
{"api_id": 1971, "api_type": 2, "full_declaration": "DataSourceTransactionManager", "qualified_name": "org.springframework.jdbc.datasource.DataSourceTransactionManager", "short_description": " PlatformTransactionManager implementation for a single JDBC  DataSource . "},
{"api_id": 1972, "api_type": 2, "full_declaration": "DataSourceUtils", "qualified_name": "org.springframework.jdbc.datasource.DataSourceUtils", "short_description": " Helper class that provides static methods for obtaining JDBC Connections from\na  DataSource . "},
{"api_id": 1973, "api_type": 2, "full_declaration": "DelegatingDataSource", "qualified_name": "org.springframework.jdbc.datasource.DelegatingDataSource", "short_description": " JDBC  DataSource  implementation that delegates all calls\nto a given target  DataSource . "},
{"api_id": 1974, "api_type": 2, "full_declaration": "DriverManagerDataSource", "qualified_name": "org.springframework.jdbc.datasource.DriverManagerDataSource", "short_description": " Simple implementation of the standard JDBC  DataSource  interface,\nconfiguring the plain old JDBC  DriverManager  via bean properties, and\nreturning a new  Connection  from every  getConnection  call. "},
{"api_id": 1975, "api_type": 2, "full_declaration": "IsolationLevelDataSourceAdapter", "qualified_name": "org.springframework.jdbc.datasource.IsolationLevelDataSourceAdapter", "short_description": " An adapter for a target  DataSource , applying the current\nSpring transaction's isolation level (and potentially specified user credentials)\nto every  getConnection  call. "},
{"api_id": 1976, "api_type": 2, "full_declaration": "JdbcTransactionObjectSupport", "qualified_name": "org.springframework.jdbc.datasource.JdbcTransactionObjectSupport", "short_description": " Convenient base class for JDBC-aware transaction objects. "},
{"api_id": 1977, "api_type": 2, "full_declaration": "LazyConnectionDataSourceProxy", "qualified_name": "org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy", "short_description": " Proxy for a target DataSource, fetching actual JDBC Connections lazily,\ni.e. "},
{"api_id": 1978, "api_type": 2, "full_declaration": "SimpleConnectionHandle", "qualified_name": "org.springframework.jdbc.datasource.SimpleConnectionHandle", "short_description": " Simple implementation of the  ConnectionHandle  interface,\ncontaining a given JDBC Connection. "},
{"api_id": 1979, "api_type": 2, "full_declaration": "SimpleDriverDataSource", "qualified_name": "org.springframework.jdbc.datasource.SimpleDriverDataSource", "short_description": " Simple implementation of the standard JDBC  DataSource  interface,\nconfiguring a plain old JDBC  Driver  via bean properties, and\nreturning a new  Connection  from every  getConnection  call. "},
{"api_id": 1980, "api_type": 2, "full_declaration": "SingleConnectionDataSource", "qualified_name": "org.springframework.jdbc.datasource.SingleConnectionDataSource", "short_description": " Implementation of  SmartDataSource  that wraps a single JDBC Connection\nwhich is not closed after use. "},
{"api_id": 1981, "api_type": 2, "full_declaration": "TransactionAwareDataSourceProxy", "qualified_name": "org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy", "short_description": " Proxy for a target JDBC  DataSource , adding awareness of\nSpring-managed transactions. "},
{"api_id": 1982, "api_type": 2, "full_declaration": "UserCredentialsDataSourceAdapter", "qualified_name": "org.springframework.jdbc.datasource.UserCredentialsDataSourceAdapter", "short_description": " An adapter for a target JDBC  DataSource , applying the specified\nuser credentials to every standard  getConnection()  call, implicitly\ninvoking  getConnection(username, password)  on the target. "},
{"api_id": 1983, "api_type": 2, "full_declaration": "WebSphereDataSourceAdapter", "qualified_name": "org.springframework.jdbc.datasource.WebSphereDataSourceAdapter", "short_description": " DataSource  implementation that delegates all calls to a WebSphere\ntarget  DataSource , typically obtained from JNDI, applying a current\nisolation level and/or current user credentials to every Connection obtained\nfrom it. "},
{"api_id": 1984, "api_type": 3, "full_declaration": "ConnectionProperties", "qualified_name": "org.springframework.jdbc.datasource.embedded.ConnectionProperties", "short_description": " ConnectionProperties  serves as a simple data container that allows\nessential JDBC connection properties to be configured consistently,\nindependent of the actual  DataSource implementation. "},
{"api_id": 1985, "api_type": 3, "full_declaration": "DataSourceFactory", "qualified_name": "org.springframework.jdbc.datasource.embedded.DataSourceFactory", "short_description": " DataSourceFactory  encapsulates the creation of a particular DataSource  implementation such as a non-pooling SimpleDriverDataSource or a HikariCP pool setup in the shape of a  HikariDataSource . "},
{"api_id": 1986, "api_type": 3, "full_declaration": "EmbeddedDatabase", "qualified_name": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabase", "short_description": " EmbeddedDatabase  serves as a handle to an embedded database instance. "},
{"api_id": 1987, "api_type": 3, "full_declaration": "EmbeddedDatabaseConfigurer", "qualified_name": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseConfigurer", "short_description": " EmbeddedDatabaseConfigurer  encapsulates the configuration required to\ncreate, connect to, and shut down a specific type of embedded database such as\nHSQL, H2, or Derby. "},
{"api_id": 1988, "api_type": 2, "full_declaration": "EmbeddedDatabaseBuilder", "qualified_name": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseBuilder", "short_description": " A builder that provides a convenient API for constructing an embedded database. "},
{"api_id": 1989, "api_type": 2, "full_declaration": "EmbeddedDatabaseFactory", "qualified_name": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory", "short_description": " Factory for creating an  EmbeddedDatabase  instance. "},
{"api_id": 1990, "api_type": 2, "full_declaration": "EmbeddedDatabaseFactoryBean", "qualified_name": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactoryBean", "short_description": " A subclass of  EmbeddedDatabaseFactory  that implements  FactoryBean for registration as a Spring bean. "},
{"api_id": 1991, "api_type": 2, "full_declaration": "OutputStreamFactory", "qualified_name": "org.springframework.jdbc.datasource.embedded.OutputStreamFactory", "short_description": " Internal helper for exposing dummy OutputStreams to embedded databases\nsuch as Derby, preventing the creation of a log file. "},
{"api_id": 1992, "api_type": 8, "full_declaration": "EmbeddedDatabaseType", "qualified_name": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseType", "short_description": " A supported embedded database type. "},
{"api_id": 1993, "api_type": 3, "full_declaration": "DatabasePopulator", "qualified_name": "org.springframework.jdbc.datasource.init.DatabasePopulator", "short_description": " Strategy used to populate, initialize, or clean up a database. "},
{"api_id": 1994, "api_type": 2, "full_declaration": "CompositeDatabasePopulator", "qualified_name": "org.springframework.jdbc.datasource.init.CompositeDatabasePopulator", "short_description": " Composite  DatabasePopulator  that delegates to a list of given DatabasePopulator  implementations, executing all scripts. "},
{"api_id": 1995, "api_type": 2, "full_declaration": "DatabasePopulatorUtils", "qualified_name": "org.springframework.jdbc.datasource.init.DatabasePopulatorUtils", "short_description": " Utility methods for executing a  DatabasePopulator . "},
{"api_id": 1996, "api_type": 2, "full_declaration": "DataSourceInitializer", "qualified_name": "org.springframework.jdbc.datasource.init.DataSourceInitializer", "short_description": " Used to  set up  a database during\ninitialization and  clean up  a database during\ndestruction. "},
{"api_id": 1997, "api_type": 2, "full_declaration": "ResourceDatabasePopulator", "qualified_name": "org.springframework.jdbc.datasource.init.ResourceDatabasePopulator", "short_description": " Populates, initializes, or cleans up a database using SQL scripts defined in\nexternal resources. "},
{"api_id": 1998, "api_type": 2, "full_declaration": "ScriptUtils", "qualified_name": "org.springframework.jdbc.datasource.init.ScriptUtils", "short_description": " Generic utility methods for working with SQL scripts. "},
{"api_id": 1999, "api_type": 4, "full_declaration": "CannotReadScriptException", "qualified_name": "org.springframework.jdbc.datasource.init.CannotReadScriptException", "short_description": " Thrown by  ScriptUtils  if an SQL script cannot be read. "},
{"api_id": 2000, "api_type": 4, "full_declaration": "ScriptException", "qualified_name": "org.springframework.jdbc.datasource.init.ScriptException", "short_description": " Root of the hierarchy of data access exceptions that are related to processing\nof SQL scripts. "},
{"api_id": 2001, "api_type": 4, "full_declaration": "ScriptParseException", "qualified_name": "org.springframework.jdbc.datasource.init.ScriptParseException", "short_description": " Thrown by  ScriptUtils  if an SQL script cannot be properly parsed. "},
{"api_id": 2002, "api_type": 4, "full_declaration": "ScriptStatementFailedException", "qualified_name": "org.springframework.jdbc.datasource.init.ScriptStatementFailedException", "short_description": " Thrown by  ScriptUtils  if a statement in an SQL script failed when\nexecuting it against the target database. "},
{"api_id": 2003, "api_type": 4, "full_declaration": "UncategorizedScriptException", "qualified_name": "org.springframework.jdbc.datasource.init.UncategorizedScriptException", "short_description": " Thrown when we cannot determine anything more specific than \"something went\nwrong while processing an SQL script\": for example, a  SQLException from JDBC that we cannot pinpoint more precisely. "},
{"api_id": 2004, "api_type": 3, "full_declaration": "DataSourceLookup", "qualified_name": "org.springframework.jdbc.datasource.lookup.DataSourceLookup", "short_description": " Strategy interface for looking up DataSources by name. "},
{"api_id": 2005, "api_type": 2, "full_declaration": "AbstractRoutingDataSource", "qualified_name": "org.springframework.jdbc.datasource.lookup.AbstractRoutingDataSource", "short_description": " Abstract  DataSource  implementation that routes  AbstractRoutingDataSource.getConnection() calls to one of various target DataSources based on a lookup key. "},
{"api_id": 2006, "api_type": 2, "full_declaration": "BeanFactoryDataSourceLookup", "qualified_name": "org.springframework.jdbc.datasource.lookup.BeanFactoryDataSourceLookup", "short_description": " DataSourceLookup  implementation based on a Spring  BeanFactory . "},
{"api_id": 2007, "api_type": 2, "full_declaration": "IsolationLevelDataSourceRouter", "qualified_name": "org.springframework.jdbc.datasource.lookup.IsolationLevelDataSourceRouter", "short_description": " DataSource that routes to one of various target DataSources based on the\ncurrent transaction isolation level. "},
{"api_id": 2008, "api_type": 2, "full_declaration": "JndiDataSourceLookup", "qualified_name": "org.springframework.jdbc.datasource.lookup.JndiDataSourceLookup", "short_description": " JNDI-based  DataSourceLookup  implementation. "},
{"api_id": 2009, "api_type": 2, "full_declaration": "MapDataSourceLookup", "qualified_name": "org.springframework.jdbc.datasource.lookup.MapDataSourceLookup", "short_description": " Simple  DataSourceLookup  implementation that relies on a map for doing lookups. "},
{"api_id": 2010, "api_type": 2, "full_declaration": "SingleDataSourceLookup", "qualified_name": "org.springframework.jdbc.datasource.lookup.SingleDataSourceLookup", "short_description": " An implementation of the DataSourceLookup that simply wraps a\nsingle given DataSource, returned for any data source name. "},
{"api_id": 2011, "api_type": 4, "full_declaration": "DataSourceLookupFailureException", "qualified_name": "org.springframework.jdbc.datasource.lookup.DataSourceLookupFailureException", "short_description": " Exception to be thrown by a DataSourceLookup implementation,\nindicating that the specified DataSource could not be obtained. "},
{"api_id": 2012, "api_type": 2, "full_declaration": "BatchSqlUpdate", "qualified_name": "org.springframework.jdbc.object.BatchSqlUpdate", "short_description": " SqlUpdate subclass that performs batch update operations. "},
{"api_id": 2013, "api_type": 2, "full_declaration": "GenericSqlQuery", "qualified_name": "org.springframework.jdbc.object.GenericSqlQuery", "short_description": " A concrete variant of  SqlQuery  which can be configured\nwith a  RowMapper . "},
{"api_id": 2014, "api_type": 2, "full_declaration": "GenericStoredProcedure", "qualified_name": "org.springframework.jdbc.object.GenericStoredProcedure", "short_description": " Concrete implementation making it possible to define the RDBMS stored procedures\nin an application context without writing a custom Java implementation class. "},
{"api_id": 2015, "api_type": 2, "full_declaration": "MappingSqlQuery", "qualified_name": "org.springframework.jdbc.object.MappingSqlQuery", "short_description": " Reusable query in which concrete subclasses must implement the abstract\nmapRow(ResultSet, int) method to convert each row of the JDBC ResultSet\ninto an object. "},
{"api_id": 2016, "api_type": 2, "full_declaration": "MappingSqlQueryWithParameters", "qualified_name": "org.springframework.jdbc.object.MappingSqlQueryWithParameters", "short_description": " Reusable RDBMS query in which concrete subclasses must implement\nthe abstract mapRow(ResultSet, int) method to map each row of\nthe JDBC ResultSet into an object. "},
{"api_id": 2017, "api_type": 2, "full_declaration": "RdbmsOperation", "qualified_name": "org.springframework.jdbc.object.RdbmsOperation", "short_description": " An \"RDBMS operation\" is a multi-threaded, reusable object representing a query,\nupdate, or stored procedure call. "},
{"api_id": 2018, "api_type": 2, "full_declaration": "SqlCall", "qualified_name": "org.springframework.jdbc.object.SqlCall", "short_description": " RdbmsOperation using a JdbcTemplate and representing an SQL-based\ncall such as a stored procedure or a stored function. "},
{"api_id": 2019, "api_type": 2, "full_declaration": "SqlFunction", "qualified_name": "org.springframework.jdbc.object.SqlFunction", "short_description": " SQL \"function\" wrapper for a query that returns a single row of results. "},
{"api_id": 2020, "api_type": 2, "full_declaration": "SqlOperation", "qualified_name": "org.springframework.jdbc.object.SqlOperation", "short_description": " Operation object representing an SQL-based operation such as a query or update,\nas opposed to a stored procedure. "},
{"api_id": 2021, "api_type": 2, "full_declaration": "SqlQuery", "qualified_name": "org.springframework.jdbc.object.SqlQuery", "short_description": " Reusable operation object representing an SQL query. "},
{"api_id": 2022, "api_type": 2, "full_declaration": "SqlUpdate", "qualified_name": "org.springframework.jdbc.object.SqlUpdate", "short_description": " Reusable operation object representing an SQL update. "},
{"api_id": 2023, "api_type": 2, "full_declaration": "StoredProcedure", "qualified_name": "org.springframework.jdbc.object.StoredProcedure", "short_description": " Superclass for object abstractions of RDBMS stored procedures. "},
{"api_id": 2024, "api_type": 2, "full_declaration": "UpdatableSqlQuery", "qualified_name": "org.springframework.jdbc.object.UpdatableSqlQuery", "short_description": " Reusable RDBMS query in which concrete subclasses must implement\nthe abstract updateRow(ResultSet, int, context) method to update each\nrow of the JDBC ResultSet and optionally map contents into an object. "},
{"api_id": 2025, "api_type": 3, "full_declaration": "DatabaseMetaDataCallback", "qualified_name": "org.springframework.jdbc.support.DatabaseMetaDataCallback", "short_description": " A callback interface used by the JdbcUtils class. "},
{"api_id": 2026, "api_type": 3, "full_declaration": "KeyHolder", "qualified_name": "org.springframework.jdbc.support.KeyHolder", "short_description": " Interface for retrieving keys, typically used for auto-generated keys\nas potentially returned by JDBC insert statements. "},
{"api_id": 2027, "api_type": 3, "full_declaration": "SQLExceptionTranslator", "qualified_name": "org.springframework.jdbc.support.SQLExceptionTranslator", "short_description": " Strategy interface for translating between  SQLExceptions and Spring's data access strategy-agnostic  DataAccessException hierarchy. "},
{"api_id": 2028, "api_type": 3, "full_declaration": "SqlValue", "qualified_name": "org.springframework.jdbc.support.SqlValue", "short_description": " Simple interface for complex types to be set as statement parameters. "},
{"api_id": 2029, "api_type": 2, "full_declaration": "AbstractFallbackSQLExceptionTranslator", "qualified_name": "org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator", "short_description": " Base class for  SQLExceptionTranslator  implementations that allow for\nfallback to some other  SQLExceptionTranslator . "},
{"api_id": 2030, "api_type": 2, "full_declaration": "CustomSQLErrorCodesTranslation", "qualified_name": "org.springframework.jdbc.support.CustomSQLErrorCodesTranslation", "short_description": " JavaBean for holding custom JDBC error codes translation for a particular\ndatabase. "},
{"api_id": 2031, "api_type": 2, "full_declaration": "CustomSQLExceptionTranslatorRegistrar", "qualified_name": "org.springframework.jdbc.support.CustomSQLExceptionTranslatorRegistrar", "short_description": " Registry for custom  SQLExceptionTranslator  instances for specific databases. "},
{"api_id": 2032, "api_type": 2, "full_declaration": "CustomSQLExceptionTranslatorRegistry", "qualified_name": "org.springframework.jdbc.support.CustomSQLExceptionTranslatorRegistry", "short_description": " Registry for custom  SQLExceptionTranslator  instances associated with\nspecific databases allowing for overriding translation based on values contained in the configuration file\nnamed \"sql-error-codes.xml\". "},
{"api_id": 2033, "api_type": 2, "full_declaration": "DatabaseStartupValidator", "qualified_name": "org.springframework.jdbc.support.DatabaseStartupValidator", "short_description": " Bean that checks if a database has already started up. "},
{"api_id": 2034, "api_type": 2, "full_declaration": "GeneratedKeyHolder", "qualified_name": "org.springframework.jdbc.support.GeneratedKeyHolder", "short_description": " The standard implementation of the  KeyHolder  interface, to be used for\nholding auto-generated keys (as potentially returned by JDBC insert statements). "},
{"api_id": 2035, "api_type": 2, "full_declaration": "JdbcAccessor", "qualified_name": "org.springframework.jdbc.support.JdbcAccessor", "short_description": " Base class for  JdbcTemplate  and\nother JDBC-accessing DAO helpers, defining common properties such as\nDataSource and exception translator. "},
{"api_id": 2036, "api_type": 2, "full_declaration": "JdbcTransactionManager", "qualified_name": "org.springframework.jdbc.support.JdbcTransactionManager", "short_description": " JdbcAccessor -aligned subclass of the plain  DataSourceTransactionManager ,\nadding common JDBC exception translation for the commit and rollback step. "},
{"api_id": 2037, "api_type": 2, "full_declaration": "JdbcUtils", "qualified_name": "org.springframework.jdbc.support.JdbcUtils", "short_description": " Generic utility methods for working with JDBC. "},
{"api_id": 2038, "api_type": 2, "full_declaration": "SQLErrorCodes", "qualified_name": "org.springframework.jdbc.support.SQLErrorCodes", "short_description": " JavaBean for holding JDBC error codes for a particular database. "},
{"api_id": 2039, "api_type": 2, "full_declaration": "SQLErrorCodesFactory", "qualified_name": "org.springframework.jdbc.support.SQLErrorCodesFactory", "short_description": " Factory for creating  SQLErrorCodes  based on the\n\"databaseProductName\" taken from the  DatabaseMetaData . "},
{"api_id": 2040, "api_type": 2, "full_declaration": "SQLErrorCodeSQLExceptionTranslator", "qualified_name": "org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator", "short_description": " Implementation of  SQLExceptionTranslator  that analyzes vendor-specific error codes. "},
{"api_id": 2041, "api_type": 2, "full_declaration": "SQLExceptionSubclassTranslator", "qualified_name": "org.springframework.jdbc.support.SQLExceptionSubclassTranslator", "short_description": " SQLExceptionTranslator  implementation which analyzes the specific SQLException  subclass thrown by the JDBC driver. "},
{"api_id": 2042, "api_type": 2, "full_declaration": "SQLStateSQLExceptionTranslator", "qualified_name": "org.springframework.jdbc.support.SQLStateSQLExceptionTranslator", "short_description": " SQLExceptionTranslator  implementation that analyzes the SQL state in\nthe  SQLException  based on the first two digits (the SQL state \"class\"). "},
{"api_id": 2043, "api_type": 4, "full_declaration": "MetaDataAccessException", "qualified_name": "org.springframework.jdbc.support.MetaDataAccessException", "short_description": " Exception indicating that something went wrong during JDBC meta-data lookup. "},
{"api_id": 2044, "api_type": 3, "full_declaration": "DataFieldMaxValueIncrementer", "qualified_name": "org.springframework.jdbc.support.incrementer.DataFieldMaxValueIncrementer", "short_description": " Interface that defines contract of incrementing any data store field's\nmaximum value. "},
{"api_id": 2045, "api_type": 2, "full_declaration": "AbstractColumnMaxValueIncrementer", "qualified_name": "org.springframework.jdbc.support.incrementer.AbstractColumnMaxValueIncrementer", "short_description": " Abstract base class for  DataFieldMaxValueIncrementer  implementations that use\na column in a custom sequence table. "},
{"api_id": 2046, "api_type": 2, "full_declaration": "AbstractDataFieldMaxValueIncrementer", "qualified_name": "org.springframework.jdbc.support.incrementer.AbstractDataFieldMaxValueIncrementer", "short_description": " Base implementation of  DataFieldMaxValueIncrementer  that delegates\nto a single  AbstractDataFieldMaxValueIncrementer.getNextKey()  template method that returns a  long . "},
{"api_id": 2047, "api_type": 2, "full_declaration": "AbstractIdentityColumnMaxValueIncrementer", "qualified_name": "org.springframework.jdbc.support.incrementer.AbstractIdentityColumnMaxValueIncrementer", "short_description": " Abstract base class for  DataFieldMaxValueIncrementer  implementations\nwhich are based on identity columns in a sequence-like table. "},
{"api_id": 2048, "api_type": 2, "full_declaration": "AbstractSequenceMaxValueIncrementer", "qualified_name": "org.springframework.jdbc.support.incrementer.AbstractSequenceMaxValueIncrementer", "short_description": " Abstract base class for  DataFieldMaxValueIncrementer  implementations that use\na database sequence. "},
{"api_id": 2049, "api_type": 2, "full_declaration": "Db2LuwMaxValueIncrementer", "qualified_name": "org.springframework.jdbc.support.incrementer.Db2LuwMaxValueIncrementer", "short_description": " DataFieldMaxValueIncrementer  that retrieves the next value\nof a given sequence on DB2 LUW (for Linux, Unix and Windows). "},
{"api_id": 2050, "api_type": 2, "full_declaration": "Db2MainframeMaxValueIncrementer", "qualified_name": "org.springframework.jdbc.support.incrementer.Db2MainframeMaxValueIncrementer", "short_description": " DataFieldMaxValueIncrementer  that retrieves the next value\nof a given sequence on DB2 for the mainframe (z/OS, DB2/390, DB2/400). "},
{"api_id": 2051, "api_type": 2, "full_declaration": "DB2MainframeSequenceMaxValueIncrementer", "qualified_name": "org.springframework.jdbc.support.incrementer.DB2MainframeSequenceMaxValueIncrementer", "short_description": "Deprecated in favor of the differently named  Db2MainframeMaxValueIncrementer "},
{"api_id": 2052, "api_type": 2, "full_declaration": "DB2SequenceMaxValueIncrementer", "qualified_name": "org.springframework.jdbc.support.incrementer.DB2SequenceMaxValueIncrementer", "short_description": "Deprecated in favor of the specifically named  Db2LuwMaxValueIncrementer "},
{"api_id": 2053, "api_type": 2, "full_declaration": "DerbyMaxValueIncrementer", "qualified_name": "org.springframework.jdbc.support.incrementer.DerbyMaxValueIncrementer", "short_description": " DataFieldMaxValueIncrementer  that increments the maximum value of a given Derby table\nwith the equivalent of an auto-increment column. "},
{"api_id": 2054, "api_type": 2, "full_declaration": "H2SequenceMaxValueIncrementer", "qualified_name": "org.springframework.jdbc.support.incrementer.H2SequenceMaxValueIncrementer", "short_description": " DataFieldMaxValueIncrementer  that retrieves the next value\nof a given H2 sequence. "},
{"api_id": 2055, "api_type": 2, "full_declaration": "HanaSequenceMaxValueIncrementer", "qualified_name": "org.springframework.jdbc.support.incrementer.HanaSequenceMaxValueIncrementer", "short_description": " DataFieldMaxValueIncrementer  that retrieves the next value\nof a given SAP HANA sequence. "},
{"api_id": 2056, "api_type": 2, "full_declaration": "HsqlMaxValueIncrementer", "qualified_name": "org.springframework.jdbc.support.incrementer.HsqlMaxValueIncrementer", "short_description": " DataFieldMaxValueIncrementer  that increments the maximum value of a given HSQL table\nwith the equivalent of an auto-increment column. "},
{"api_id": 2057, "api_type": 2, "full_declaration": "HsqlSequenceMaxValueIncrementer", "qualified_name": "org.springframework.jdbc.support.incrementer.HsqlSequenceMaxValueIncrementer", "short_description": " DataFieldMaxValueIncrementer  that retrieves the next value\nof a given HSQL sequence. "},
{"api_id": 2058, "api_type": 2, "full_declaration": "MySQLMaxValueIncrementer", "qualified_name": "org.springframework.jdbc.support.incrementer.MySQLMaxValueIncrementer", "short_description": " DataFieldMaxValueIncrementer  that increments the maximum value of a given MySQL table\nwith the equivalent of an auto-increment column. "},
{"api_id": 2059, "api_type": 2, "full_declaration": "OracleSequenceMaxValueIncrementer", "qualified_name": "org.springframework.jdbc.support.incrementer.OracleSequenceMaxValueIncrementer", "short_description": " DataFieldMaxValueIncrementer  that retrieves the next value\nof a given Oracle sequence. "},
{"api_id": 2060, "api_type": 2, "full_declaration": "PostgreSQLSequenceMaxValueIncrementer", "qualified_name": "org.springframework.jdbc.support.incrementer.PostgreSQLSequenceMaxValueIncrementer", "short_description": "Deprecated in favor of the differently named  PostgresSequenceMaxValueIncrementer "},
{"api_id": 2061, "api_type": 2, "full_declaration": "PostgresSequenceMaxValueIncrementer", "qualified_name": "org.springframework.jdbc.support.incrementer.PostgresSequenceMaxValueIncrementer", "short_description": " DataFieldMaxValueIncrementer  that retrieves the next value\nof a given PostgreSQL sequence. "},
{"api_id": 2062, "api_type": 2, "full_declaration": "SqlServerMaxValueIncrementer", "qualified_name": "org.springframework.jdbc.support.incrementer.SqlServerMaxValueIncrementer", "short_description": " DataFieldMaxValueIncrementer  that increments the maximum value of a given SQL Server table\nwith the equivalent of an auto-increment column. "},
{"api_id": 2063, "api_type": 2, "full_declaration": "SybaseAnywhereMaxValueIncrementer", "qualified_name": "org.springframework.jdbc.support.incrementer.SybaseAnywhereMaxValueIncrementer", "short_description": " DataFieldMaxValueIncrementer  that increments the maximum value of a given Sybase table\nwith the equivalent of an auto-increment column. "},
{"api_id": 2064, "api_type": 2, "full_declaration": "SybaseMaxValueIncrementer", "qualified_name": "org.springframework.jdbc.support.incrementer.SybaseMaxValueIncrementer", "short_description": " DataFieldMaxValueIncrementer  that increments the maximum value of a given Sybase table\nwith the equivalent of an auto-increment column. "},
{"api_id": 2065, "api_type": 3, "full_declaration": "LobCreator", "qualified_name": "org.springframework.jdbc.support.lob.LobCreator", "short_description": " Interface that abstracts potentially database-specific creation of large binary\nfields and large text fields. "},
{"api_id": 2066, "api_type": 3, "full_declaration": "LobHandler", "qualified_name": "org.springframework.jdbc.support.lob.LobHandler", "short_description": " Abstraction for handling large binary fields and large text fields in\nspecific databases, no matter if represented as simple types or Large OBjects. "},
{"api_id": 2067, "api_type": 2, "full_declaration": "AbstractLobHandler", "qualified_name": "org.springframework.jdbc.support.lob.AbstractLobHandler", "short_description": " Abstract base class for  LobHandler  implementations. "},
{"api_id": 2068, "api_type": 2, "full_declaration": "DefaultLobHandler", "qualified_name": "org.springframework.jdbc.support.lob.DefaultLobHandler", "short_description": " Default implementation of the  LobHandler  interface. "},
{"api_id": 2069, "api_type": 2, "full_declaration": "TemporaryLobCreator", "qualified_name": "org.springframework.jdbc.support.lob.TemporaryLobCreator", "short_description": " LobCreator  implementation based on temporary LOBs,\nusing JDBC 4.0's  Connection.createBlob()  / Connection.createClob()  mechanism. "},
{"api_id": 2070, "api_type": 3, "full_declaration": "SqlRowSet", "qualified_name": "org.springframework.jdbc.support.rowset.SqlRowSet", "short_description": " Mirror interface for  RowSet , representing a disconnected variant of ResultSet  data. "},
{"api_id": 2071, "api_type": 3, "full_declaration": "SqlRowSetMetaData", "qualified_name": "org.springframework.jdbc.support.rowset.SqlRowSetMetaData", "short_description": " Metadata interface for Spring's  SqlRowSet , analogous to JDBC's ResultSetMetaData . "},
{"api_id": 2072, "api_type": 2, "full_declaration": "ResultSetWrappingSqlRowSet", "qualified_name": "org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSet", "short_description": " The default implementation of Spring's  SqlRowSet  interface, wrapping a ResultSet , catching any  SQLExceptions  and\ntranslating them to a corresponding Spring  InvalidResultSetAccessException . "},
{"api_id": 2073, "api_type": 2, "full_declaration": "ResultSetWrappingSqlRowSetMetaData", "qualified_name": "org.springframework.jdbc.support.rowset.ResultSetWrappingSqlRowSetMetaData", "short_description": " The default implementation of Spring's  SqlRowSetMetaData  interface, wrapping a ResultSetMetaData  instance, catching any  SQLExceptions and translating them to a corresponding Spring  InvalidResultSetAccessException . "},
{"api_id": 2074, "api_type": 3, "full_declaration": "SqlXmlHandler", "qualified_name": "org.springframework.jdbc.support.xml.SqlXmlHandler", "short_description": " Abstraction for handling XML fields in specific databases. "},
{"api_id": 2075, "api_type": 3, "full_declaration": "SqlXmlValue", "qualified_name": "org.springframework.jdbc.support.xml.SqlXmlValue", "short_description": " Subinterface of  SqlValue that supports passing in XML data to specified column and adds a\ncleanup callback, to be invoked after the value has been set and\nthe corresponding statement has been executed. "},
{"api_id": 2076, "api_type": 3, "full_declaration": "XmlBinaryStreamProvider", "qualified_name": "org.springframework.jdbc.support.xml.XmlBinaryStreamProvider", "short_description": " Interface defining handling involved with providing  OutputStream data for XML input. "},
{"api_id": 2077, "api_type": 3, "full_declaration": "XmlCharacterStreamProvider", "qualified_name": "org.springframework.jdbc.support.xml.XmlCharacterStreamProvider", "short_description": " Interface defining handling involved with providing  Writer data for XML input. "},
{"api_id": 2078, "api_type": 3, "full_declaration": "XmlResultProvider", "qualified_name": "org.springframework.jdbc.support.xml.XmlResultProvider", "short_description": " Interface defining handling involved with providing  Result data for XML input. "},
{"api_id": 2079, "api_type": 2, "full_declaration": "Jdbc4SqlXmlHandler", "qualified_name": "org.springframework.jdbc.support.xml.Jdbc4SqlXmlHandler", "short_description": " Default implementation of the  SqlXmlHandler  interface. "},
{"api_id": 2080, "api_type": 4, "full_declaration": "SqlXmlFeatureNotImplementedException", "qualified_name": "org.springframework.jdbc.support.xml.SqlXmlFeatureNotImplementedException", "short_description": " Exception thrown when the underlying implementation does not support the\nrequested feature of the API. "},
{"api_id": 2081, "api_type": 4, "full_declaration": "IllegalStateException", "qualified_name": "org.springframework.jms.IllegalStateException", "short_description": " Runtime exception mirroring the JMS IllegalStateException. "},
{"api_id": 2082, "api_type": 4, "full_declaration": "InvalidClientIDException", "qualified_name": "org.springframework.jms.InvalidClientIDException", "short_description": " Runtime exception mirroring the JMS InvalidClientIDException. "},
{"api_id": 2083, "api_type": 4, "full_declaration": "InvalidDestinationException", "qualified_name": "org.springframework.jms.InvalidDestinationException", "short_description": " Runtime exception mirroring the JMS InvalidDestinationException. "},
{"api_id": 2084, "api_type": 4, "full_declaration": "InvalidSelectorException", "qualified_name": "org.springframework.jms.InvalidSelectorException", "short_description": " Runtime exception mirroring the JMS InvalidSelectorException. "},
{"api_id": 2085, "api_type": 4, "full_declaration": "JmsException", "qualified_name": "org.springframework.jms.JmsException", "short_description": " Base class for exception thrown by the framework whenever it\nencounters a problem related to JMS. "},
{"api_id": 2086, "api_type": 4, "full_declaration": "JmsSecurityException", "qualified_name": "org.springframework.jms.JmsSecurityException", "short_description": " Runtime exception mirroring the JMS JMSSecurityException. "},
{"api_id": 2087, "api_type": 4, "full_declaration": "MessageEOFException", "qualified_name": "org.springframework.jms.MessageEOFException", "short_description": " Runtime exception mirroring the JMS MessageEOFException. "},
{"api_id": 2088, "api_type": 4, "full_declaration": "MessageFormatException", "qualified_name": "org.springframework.jms.MessageFormatException", "short_description": " Runtime exception mirroring the JMS MessageFormatException. "},
{"api_id": 2089, "api_type": 4, "full_declaration": "MessageNotReadableException", "qualified_name": "org.springframework.jms.MessageNotReadableException", "short_description": " Runtime exception mirroring the JMS MessageNotReadableException. "},
{"api_id": 2090, "api_type": 4, "full_declaration": "MessageNotWriteableException", "qualified_name": "org.springframework.jms.MessageNotWriteableException", "short_description": " Runtime exception mirroring the JMS MessageNotWriteableException. "},
{"api_id": 2091, "api_type": 4, "full_declaration": "ResourceAllocationException", "qualified_name": "org.springframework.jms.ResourceAllocationException", "short_description": " Runtime exception mirroring the JMS ResourceAllocationException. "},
{"api_id": 2092, "api_type": 4, "full_declaration": "TransactionInProgressException", "qualified_name": "org.springframework.jms.TransactionInProgressException", "short_description": " Runtime exception mirroring the JMS TransactionInProgressException. "},
{"api_id": 2093, "api_type": 4, "full_declaration": "TransactionRolledBackException", "qualified_name": "org.springframework.jms.TransactionRolledBackException", "short_description": " Runtime exception mirroring the JMS TransactionRolledBackException. "},
{"api_id": 2094, "api_type": 4, "full_declaration": "UncategorizedJmsException", "qualified_name": "org.springframework.jms.UncategorizedJmsException", "short_description": " JmsException to be thrown when no other matching subclass found. "},
{"api_id": 2095, "api_type": 3, "full_declaration": "JmsListenerConfigurer", "qualified_name": "org.springframework.jms.annotation.JmsListenerConfigurer", "short_description": " Optional interface to be implemented by a Spring managed bean willing\nto customize how JMS listener endpoints are configured. "},
{"api_id": 2096, "api_type": 2, "full_declaration": "JmsBootstrapConfiguration", "qualified_name": "org.springframework.jms.annotation.JmsBootstrapConfiguration", "short_description": " @Configuration  class that registers a  JmsListenerAnnotationBeanPostProcessor bean capable of processing Spring's @ JmsListener  annotation. "},
{"api_id": 2097, "api_type": 2, "full_declaration": "JmsListenerAnnotationBeanPostProcessor", "qualified_name": "org.springframework.jms.annotation.JmsListenerAnnotationBeanPostProcessor", "short_description": " Bean post-processor that registers methods annotated with  JmsListener to be invoked by a JMS message listener container created under the cover\nby a  JmsListenerContainerFactory according to the attributes of the annotation. "},
{"api_id": 2098, "api_type": 9, "full_declaration": "EnableJms", "qualified_name": "org.springframework.jms.annotation.EnableJms", "short_description": " Enable JMS listener annotated endpoints that are created under the cover\nby a  JmsListenerContainerFactory . "},
{"api_id": 2099, "api_type": 9, "full_declaration": "JmsListener", "qualified_name": "org.springframework.jms.annotation.JmsListener", "short_description": " Annotation that marks a method to be the target of a JMS message listener on the\nspecified  JmsListener.destination() . "},
{"api_id": 2100, "api_type": 9, "full_declaration": "JmsListeners", "qualified_name": "org.springframework.jms.annotation.JmsListeners", "short_description": " Container annotation that aggregates several  JmsListener  annotations. "},
{"api_id": 2101, "api_type": 3, "full_declaration": "JmsListenerContainerFactory", "qualified_name": "org.springframework.jms.config.JmsListenerContainerFactory", "short_description": " Factory of  MessageListenerContainer  based on a JmsListenerEndpoint  definition. "},
{"api_id": 2102, "api_type": 3, "full_declaration": "JmsListenerEndpoint", "qualified_name": "org.springframework.jms.config.JmsListenerEndpoint", "short_description": " Model for a JMS listener endpoint. "},
{"api_id": 2103, "api_type": 2, "full_declaration": "AbstractJmsListenerContainerFactory", "qualified_name": "org.springframework.jms.config.AbstractJmsListenerContainerFactory", "short_description": " Base  JmsListenerContainerFactory  for Spring's base container implementation. "},
{"api_id": 2104, "api_type": 2, "full_declaration": "AbstractJmsListenerEndpoint", "qualified_name": "org.springframework.jms.config.AbstractJmsListenerEndpoint", "short_description": " Base model for a JMS listener endpoint. "},
{"api_id": 2105, "api_type": 2, "full_declaration": "DefaultJcaListenerContainerFactory", "qualified_name": "org.springframework.jms.config.DefaultJcaListenerContainerFactory", "short_description": " A  JmsListenerContainerFactory  implementation to build a\nJCA-based  JmsMessageEndpointManager . "},
{"api_id": 2106, "api_type": 2, "full_declaration": "DefaultJmsListenerContainerFactory", "qualified_name": "org.springframework.jms.config.DefaultJmsListenerContainerFactory", "short_description": " A  JmsListenerContainerFactory  implementation to build a regular DefaultMessageListenerContainer . "},
{"api_id": 2107, "api_type": 2, "full_declaration": "JmsListenerConfigUtils", "qualified_name": "org.springframework.jms.config.JmsListenerConfigUtils", "short_description": " Configuration constants for internal sharing across subpackages. "},
{"api_id": 2108, "api_type": 2, "full_declaration": "JmsListenerEndpointRegistrar", "qualified_name": "org.springframework.jms.config.JmsListenerEndpointRegistrar", "short_description": " Helper bean for registering  JmsListenerEndpoint  with a  JmsListenerEndpointRegistry . "},
{"api_id": 2109, "api_type": 2, "full_declaration": "JmsListenerEndpointRegistry", "qualified_name": "org.springframework.jms.config.JmsListenerEndpointRegistry", "short_description": " Creates the necessary  MessageListenerContainer  instances for the\nregistered  endpoints . "},
{"api_id": 2110, "api_type": 2, "full_declaration": "JmsNamespaceHandler", "qualified_name": "org.springframework.jms.config.JmsNamespaceHandler", "short_description": " A  NamespaceHandler for the JMS namespace. "},
{"api_id": 2111, "api_type": 2, "full_declaration": "MethodJmsListenerEndpoint", "qualified_name": "org.springframework.jms.config.MethodJmsListenerEndpoint", "short_description": " A  JmsListenerEndpoint  providing the method to invoke to process\nan incoming message for this endpoint. "},
{"api_id": 2112, "api_type": 2, "full_declaration": "SimpleJmsListenerContainerFactory", "qualified_name": "org.springframework.jms.config.SimpleJmsListenerContainerFactory", "short_description": " A  JmsListenerContainerFactory  implementation to build a\nstandard  SimpleMessageListenerContainer . "},
{"api_id": 2113, "api_type": 2, "full_declaration": "SimpleJmsListenerEndpoint", "qualified_name": "org.springframework.jms.config.SimpleJmsListenerEndpoint", "short_description": " A  JmsListenerEndpoint  simply providing the  MessageListener  to\ninvoke to process an incoming message for this endpoint. "},
{"api_id": 2114, "api_type": 3, "full_declaration": "ConnectionFactoryUtils.ResourceFactory", "qualified_name": "org.springframework.jms.connection.ConnectionFactoryUtils.ResourceFactory", "short_description": " Callback interface for resource creation. "},
{"api_id": 2115, "api_type": 3, "full_declaration": "SessionProxy", "qualified_name": "org.springframework.jms.connection.SessionProxy", "short_description": " Subinterface of  Session  to be implemented by\nSession proxies. "},
{"api_id": 2116, "api_type": 3, "full_declaration": "SmartConnectionFactory", "qualified_name": "org.springframework.jms.connection.SmartConnectionFactory", "short_description": " Extension of the  javax.jms.ConnectionFactory  interface,\nindicating how to release Connections obtained from it. "},
{"api_id": 2117, "api_type": 2, "full_declaration": "CachingConnectionFactory", "qualified_name": "org.springframework.jms.connection.CachingConnectionFactory", "short_description": " SingleConnectionFactory  subclass that adds  Session caching as well  MessageProducer  caching. "},
{"api_id": 2118, "api_type": 2, "full_declaration": "ChainedExceptionListener", "qualified_name": "org.springframework.jms.connection.ChainedExceptionListener", "short_description": " Implementation of the JMS ExceptionListener interface that supports chaining,\nallowing the addition of multiple ExceptionListener instances in order. "},
{"api_id": 2119, "api_type": 2, "full_declaration": "ConnectionFactoryUtils", "qualified_name": "org.springframework.jms.connection.ConnectionFactoryUtils", "short_description": " Helper class for managing a JMS  ConnectionFactory , in particular\nfor obtaining transactional JMS resources for a given ConnectionFactory. "},
{"api_id": 2120, "api_type": 2, "full_declaration": "DelegatingConnectionFactory", "qualified_name": "org.springframework.jms.connection.DelegatingConnectionFactory", "short_description": " ConnectionFactory  implementation that delegates all calls\nto a given target  ConnectionFactory , adapting specific create(Queue/Topic)Connection  calls to the target ConnectionFactory\nif necessary (e.g. "},
{"api_id": 2121, "api_type": 2, "full_declaration": "JmsResourceHolder", "qualified_name": "org.springframework.jms.connection.JmsResourceHolder", "short_description": " Resource holder wrapping a JMS  Connection  and a JMS  Session . "},
{"api_id": 2122, "api_type": 2, "full_declaration": "JmsTransactionManager", "qualified_name": "org.springframework.jms.connection.JmsTransactionManager", "short_description": " PlatformTransactionManager  implementation\nfor a single JMS  ConnectionFactory . "},
{"api_id": 2123, "api_type": 2, "full_declaration": "SingleConnectionFactory", "qualified_name": "org.springframework.jms.connection.SingleConnectionFactory", "short_description": " A JMS ConnectionFactory adapter that returns the same Connection\nfrom all  SingleConnectionFactory.createConnection()  calls, and ignores calls to Connection.close() . "},
{"api_id": 2124, "api_type": 2, "full_declaration": "TransactionAwareConnectionFactoryProxy", "qualified_name": "org.springframework.jms.connection.TransactionAwareConnectionFactoryProxy", "short_description": " Proxy for a target JMS  ConnectionFactory , adding awareness of\nSpring-managed transactions. "},
{"api_id": 2125, "api_type": 2, "full_declaration": "UserCredentialsConnectionFactoryAdapter", "qualified_name": "org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter", "short_description": " An adapter for a target JMS  ConnectionFactory , applying the\ngiven user credentials to every standard  createConnection()  call,\nthat is, implicitly invoking  createConnection(username, password) on the target. "},
{"api_id": 2126, "api_type": 4, "full_declaration": "SynchedLocalTransactionFailedException", "qualified_name": "org.springframework.jms.connection.SynchedLocalTransactionFailedException", "short_description": " Exception thrown when a synchronized local transaction failed to complete\n(after the main transaction has already completed). "},
{"api_id": 2127, "api_type": 3, "full_declaration": "BrowserCallback", "qualified_name": "org.springframework.jms.core.BrowserCallback", "short_description": " Callback for browsing the messages in a JMS queue. "},
{"api_id": 2128, "api_type": 3, "full_declaration": "JmsMessageOperations", "qualified_name": "org.springframework.jms.core.JmsMessageOperations", "short_description": " A specialization of  MessageSendingOperations ,  MessageReceivingOperations and  MessageRequestReplyOperations  for JMS related operations that allow to specify\na destination name rather than the actual  Destination . "},
{"api_id": 2129, "api_type": 3, "full_declaration": "JmsOperations", "qualified_name": "org.springframework.jms.core.JmsOperations", "short_description": " Specifies a basic set of JMS operations. "},
{"api_id": 2130, "api_type": 3, "full_declaration": "MessageCreator", "qualified_name": "org.springframework.jms.core.MessageCreator", "short_description": " Creates a JMS message given a  Session . "},
{"api_id": 2131, "api_type": 3, "full_declaration": "MessagePostProcessor", "qualified_name": "org.springframework.jms.core.MessagePostProcessor", "short_description": " To be used with JmsTemplate's send method that converts an object to a message. "},
{"api_id": 2132, "api_type": 3, "full_declaration": "ProducerCallback", "qualified_name": "org.springframework.jms.core.ProducerCallback", "short_description": " Callback for sending a message to a JMS destination. "},
{"api_id": 2133, "api_type": 3, "full_declaration": "SessionCallback", "qualified_name": "org.springframework.jms.core.SessionCallback", "short_description": " Callback for executing any number of operations on a provided  Session . "},
{"api_id": 2134, "api_type": 2, "full_declaration": "JmsMessagingTemplate", "qualified_name": "org.springframework.jms.core.JmsMessagingTemplate", "short_description": " An implementation of  JmsMessageOperations . "},
{"api_id": 2135, "api_type": 2, "full_declaration": "JmsTemplate", "qualified_name": "org.springframework.jms.core.JmsTemplate", "short_description": " Helper class that simplifies synchronous JMS access code. "},
{"api_id": 2136, "api_type": 2, "full_declaration": "JmsGatewaySupport", "qualified_name": "org.springframework.jms.core.support.JmsGatewaySupport", "short_description": " Convenient super class for application classes that need JMS access. "},
{"api_id": 2137, "api_type": 3, "full_declaration": "MessageListenerContainer", "qualified_name": "org.springframework.jms.listener.MessageListenerContainer", "short_description": " Internal abstraction used by the framework representing a message\nlistener container. "},
{"api_id": 2138, "api_type": 3, "full_declaration": "SessionAwareMessageListener", "qualified_name": "org.springframework.jms.listener.SessionAwareMessageListener", "short_description": " Variant of the standard JMS  MessageListener  interface,\noffering not only the received Message but also the underlying\nJMS Session object. "},
{"api_id": 2139, "api_type": 3, "full_declaration": "SubscriptionNameProvider", "qualified_name": "org.springframework.jms.listener.SubscriptionNameProvider", "short_description": " Interface to be implemented by message listener objects that suggest a specific\nname for a durable subscription that they might be registered with. "},
{"api_id": 2140, "api_type": 2, "full_declaration": "AbstractJmsListeningContainer", "qualified_name": "org.springframework.jms.listener.AbstractJmsListeningContainer", "short_description": " Common base class for all containers which need to implement listening\nbased on a JMS Connection (either shared or freshly obtained for each attempt). "},
{"api_id": 2141, "api_type": 2, "full_declaration": "AbstractMessageListenerContainer", "qualified_name": "org.springframework.jms.listener.AbstractMessageListenerContainer", "short_description": " Abstract base class for Spring message listener container implementations. "},
{"api_id": 2142, "api_type": 2, "full_declaration": "AbstractPollingMessageListenerContainer", "qualified_name": "org.springframework.jms.listener.AbstractPollingMessageListenerContainer", "short_description": " Base class for listener container implementations which are based on polling. "},
{"api_id": 2143, "api_type": 2, "full_declaration": "DefaultMessageListenerContainer", "qualified_name": "org.springframework.jms.listener.DefaultMessageListenerContainer", "short_description": " Message listener container variant that uses plain JMS client APIs, specifically\na loop of  MessageConsumer.receive()  calls that also allow for\ntransactional reception of messages (registering them with XA transactions). "},
{"api_id": 2144, "api_type": 2, "full_declaration": "SimpleMessageListenerContainer", "qualified_name": "org.springframework.jms.listener.SimpleMessageListenerContainer", "short_description": " Message listener container that uses the plain JMS client API's MessageConsumer.setMessageListener()  method to\ncreate concurrent MessageConsumers for the specified listeners. "},
{"api_id": 2145, "api_type": 4, "full_declaration": "AbstractJmsListeningContainer.SharedConnectionNotInitializedException", "qualified_name": "org.springframework.jms.listener.AbstractJmsListeningContainer.SharedConnectionNotInitializedException", "short_description": " Exception that indicates that the initial setup of this container's\nshared JMS Connection failed. "},
{"api_id": 2146, "api_type": 2, "full_declaration": "AbstractAdaptableMessageListener", "qualified_name": "org.springframework.jms.listener.adapter.AbstractAdaptableMessageListener", "short_description": " An abstract JMS  MessageListener  adapter providing the necessary\ninfrastructure to extract the payload of a JMS  Message . "},
{"api_id": 2147, "api_type": 2, "full_declaration": "JmsResponse", "qualified_name": "org.springframework.jms.listener.adapter.JmsResponse", "short_description": " Return type of any JMS listener method used to indicate the actual response\ndestination alongside the response itself. "},
{"api_id": 2148, "api_type": 2, "full_declaration": "MessageListenerAdapter", "qualified_name": "org.springframework.jms.listener.adapter.MessageListenerAdapter", "short_description": " Message listener adapter that delegates the handling of messages to target\nlistener methods via reflection, with flexible message type conversion. "},
{"api_id": 2149, "api_type": 2, "full_declaration": "MessagingMessageListenerAdapter", "qualified_name": "org.springframework.jms.listener.adapter.MessagingMessageListenerAdapter", "short_description": " A  MessageListener  adapter that invokes a configurable InvocableHandlerMethod . "},
{"api_id": 2150, "api_type": 4, "full_declaration": "ListenerExecutionFailedException", "qualified_name": "org.springframework.jms.listener.adapter.ListenerExecutionFailedException", "short_description": " Exception to be thrown when the execution of a listener method failed. "},
{"api_id": 2151, "api_type": 4, "full_declaration": "ReplyFailureException", "qualified_name": "org.springframework.jms.listener.adapter.ReplyFailureException", "short_description": " Exception to be thrown when the reply of a message failed to be sent. "},
{"api_id": 2152, "api_type": 3, "full_declaration": "JmsActivationSpecFactory", "qualified_name": "org.springframework.jms.listener.endpoint.JmsActivationSpecFactory", "short_description": " Strategy interface for creating JCA 1.5 ActivationSpec objects\nbased on a configured  JmsActivationSpecConfig  object. "},
{"api_id": 2153, "api_type": 2, "full_declaration": "DefaultJmsActivationSpecFactory", "qualified_name": "org.springframework.jms.listener.endpoint.DefaultJmsActivationSpecFactory", "short_description": " Default implementation of the  JmsActivationSpecFactory  interface. "},
{"api_id": 2154, "api_type": 2, "full_declaration": "JmsActivationSpecConfig", "qualified_name": "org.springframework.jms.listener.endpoint.JmsActivationSpecConfig", "short_description": " Common configuration object for activating a JMS message endpoint. "},
{"api_id": 2155, "api_type": 2, "full_declaration": "JmsMessageEndpointFactory", "qualified_name": "org.springframework.jms.listener.endpoint.JmsMessageEndpointFactory", "short_description": " JMS-specific implementation of the JCA 1.7 MessageEndpointFactory  interface,\nproviding transaction management capabilities for a JMS listener object\n(e.g. "},
{"api_id": 2156, "api_type": 2, "full_declaration": "JmsMessageEndpointManager", "qualified_name": "org.springframework.jms.listener.endpoint.JmsMessageEndpointManager", "short_description": " Extension of the generic JCA 1.5 GenericMessageEndpointManager ,\nadding JMS-specific support for ActivationSpec configuration. "},
{"api_id": 2157, "api_type": 2, "full_declaration": "StandardJmsActivationSpecFactory", "qualified_name": "org.springframework.jms.listener.endpoint.StandardJmsActivationSpecFactory", "short_description": " Standard implementation of the  JmsActivationSpecFactory  interface. "},
{"api_id": 2158, "api_type": 4, "full_declaration": "JmsMessageEndpointFactory.JmsResourceException", "qualified_name": "org.springframework.jms.listener.endpoint.JmsMessageEndpointFactory.JmsResourceException", "short_description": " Internal exception thrown when a ResourceException has been encountered\nduring the endpoint invocation. "},
{"api_id": 2159, "api_type": 2, "full_declaration": "JmsInvokerClientInterceptor", "qualified_name": "org.springframework.jms.remoting.JmsInvokerClientInterceptor", "short_description": "Deprecated as of 5.3 (phasing out serialization-based remoting) "},
{"api_id": 2160, "api_type": 2, "full_declaration": "JmsInvokerProxyFactoryBean", "qualified_name": "org.springframework.jms.remoting.JmsInvokerProxyFactoryBean", "short_description": "Deprecated as of 5.3 (phasing out serialization-based remoting) "},
{"api_id": 2161, "api_type": 2, "full_declaration": "JmsInvokerServiceExporter", "qualified_name": "org.springframework.jms.remoting.JmsInvokerServiceExporter", "short_description": "Deprecated as of 5.3 (phasing out serialization-based remoting) "},
{"api_id": 2162, "api_type": 3, "full_declaration": "JmsHeaderMapper", "qualified_name": "org.springframework.jms.support.JmsHeaderMapper", "short_description": " Strategy interface for mapping  Message headers to an outbound JMS  Message  (e.g. "},
{"api_id": 2163, "api_type": 3, "full_declaration": "JmsHeaders", "qualified_name": "org.springframework.jms.support.JmsHeaders", "short_description": " Pre-defined names and prefixes to be used for setting and/or retrieving\nJMS attributes from/to generic message headers. "},
{"api_id": 2164, "api_type": 2, "full_declaration": "JmsAccessor", "qualified_name": "org.springframework.jms.support.JmsAccessor", "short_description": " Base class for  JmsTemplate  and other\nJMS-accessing gateway helpers, defining common properties such as the\nJMS  ConnectionFactory  to operate on. "},
{"api_id": 2165, "api_type": 2, "full_declaration": "JmsMessageHeaderAccessor", "qualified_name": "org.springframework.jms.support.JmsMessageHeaderAccessor", "short_description": " A  MessageHeaderAccessor implementation giving access to JMS-specific headers. "},
{"api_id": 2166, "api_type": 2, "full_declaration": "JmsUtils", "qualified_name": "org.springframework.jms.support.JmsUtils", "short_description": " Generic utility methods for working with JMS. "},
{"api_id": 2167, "api_type": 2, "full_declaration": "QosSettings", "qualified_name": "org.springframework.jms.support.QosSettings", "short_description": " Gather the Quality-of-Service settings that can be used when sending a message. "},
{"api_id": 2168, "api_type": 2, "full_declaration": "SimpleJmsHeaderMapper", "qualified_name": "org.springframework.jms.support.SimpleJmsHeaderMapper", "short_description": " Simple implementation of  JmsHeaderMapper . "},
{"api_id": 2169, "api_type": 3, "full_declaration": "MessageConverter", "qualified_name": "org.springframework.jms.support.converter.MessageConverter", "short_description": " Strategy interface that specifies a converter between Java objects and JMS messages. "},
{"api_id": 2170, "api_type": 3, "full_declaration": "SmartMessageConverter", "qualified_name": "org.springframework.jms.support.converter.SmartMessageConverter", "short_description": " An extended  MessageConverter  SPI with conversion hint support. "},
{"api_id": 2171, "api_type": 2, "full_declaration": "MappingJackson2MessageConverter", "qualified_name": "org.springframework.jms.support.converter.MappingJackson2MessageConverter", "short_description": " Message converter that uses Jackson 2.x to convert messages to and from JSON. "},
{"api_id": 2172, "api_type": 2, "full_declaration": "MarshallingMessageConverter", "qualified_name": "org.springframework.jms.support.converter.MarshallingMessageConverter", "short_description": " Spring JMS  MessageConverter  that uses a  Marshaller  and  Unmarshaller . "},
{"api_id": 2173, "api_type": 2, "full_declaration": "MessagingMessageConverter", "qualified_name": "org.springframework.jms.support.converter.MessagingMessageConverter", "short_description": " Convert a  Message  from the messaging abstraction to and from a Message  using an underlying  MessageConverter for the payload and a  JmsHeaderMapper to map the JMS headers to and from standard message headers. "},
{"api_id": 2174, "api_type": 2, "full_declaration": "SimpleMessageConverter", "qualified_name": "org.springframework.jms.support.converter.SimpleMessageConverter", "short_description": " A simple message converter which is able to handle TextMessages, BytesMessages,\nMapMessages, and ObjectMessages. "},
{"api_id": 2175, "api_type": 8, "full_declaration": "MessageType", "qualified_name": "org.springframework.jms.support.converter.MessageType", "short_description": " Constants that indicate a target message type to convert to: a TextMessage , a  BytesMessage ,\na  MapMessage  or an  ObjectMessage . "},
{"api_id": 2176, "api_type": 4, "full_declaration": "MessageConversionException", "qualified_name": "org.springframework.jms.support.converter.MessageConversionException", "short_description": " Thrown by  MessageConverter  implementations when the conversion\nof an object to/from a  Message  fails. "},
{"api_id": 2177, "api_type": 3, "full_declaration": "CachingDestinationResolver", "qualified_name": "org.springframework.jms.support.destination.CachingDestinationResolver", "short_description": " Extension of the DestinationResolver interface,\nexposing methods for clearing the cache. "},
{"api_id": 2178, "api_type": 3, "full_declaration": "DestinationResolver", "qualified_name": "org.springframework.jms.support.destination.DestinationResolver", "short_description": " Strategy interface for resolving JMS destinations. "},
{"api_id": 2179, "api_type": 2, "full_declaration": "BeanFactoryDestinationResolver", "qualified_name": "org.springframework.jms.support.destination.BeanFactoryDestinationResolver", "short_description": " DestinationResolver  implementation based on a Spring  BeanFactory . "},
{"api_id": 2180, "api_type": 2, "full_declaration": "DynamicDestinationResolver", "qualified_name": "org.springframework.jms.support.destination.DynamicDestinationResolver", "short_description": " Simple  DestinationResolver  implementation resolving destination names\nas dynamic destinations. "},
{"api_id": 2181, "api_type": 2, "full_declaration": "JmsDestinationAccessor", "qualified_name": "org.springframework.jms.support.destination.JmsDestinationAccessor", "short_description": " Base class for  JmsTemplate  and other\nJMS-accessing gateway helpers, adding destination-related properties to JmsAccessor's  common properties. "},
{"api_id": 2182, "api_type": 2, "full_declaration": "JndiDestinationResolver", "qualified_name": "org.springframework.jms.support.destination.JndiDestinationResolver", "short_description": " DestinationResolver  implementation which interprets destination names\nas JNDI locations (with a configurable fallback strategy). "},
{"api_id": 2183, "api_type": 4, "full_declaration": "DestinationResolutionException", "qualified_name": "org.springframework.jms.support.destination.DestinationResolutionException", "short_description": " Thrown by a DestinationResolver when it cannot resolve a destination name. "},
{"api_id": 2184, "api_type": 4, "full_declaration": "JmxException", "qualified_name": "org.springframework.jmx.JmxException", "short_description": " General base exception to be thrown on JMX errors. "},
{"api_id": 2185, "api_type": 4, "full_declaration": "MBeanServerNotFoundException", "qualified_name": "org.springframework.jmx.MBeanServerNotFoundException", "short_description": " Exception thrown when we cannot locate an instance of an  MBeanServer ,\nor when more than one instance is found. "},
{"api_id": 2186, "api_type": 2, "full_declaration": "MBeanClientInterceptor", "qualified_name": "org.springframework.jmx.access.MBeanClientInterceptor", "short_description": " MethodInterceptor  that routes calls to an\nMBean running on the supplied  MBeanServerConnection . "},
{"api_id": 2187, "api_type": 2, "full_declaration": "MBeanProxyFactoryBean", "qualified_name": "org.springframework.jmx.access.MBeanProxyFactoryBean", "short_description": " Creates a proxy to a managed resource running either locally or remotely. "},
{"api_id": 2188, "api_type": 2, "full_declaration": "NotificationListenerRegistrar", "qualified_name": "org.springframework.jmx.access.NotificationListenerRegistrar", "short_description": " Registrar object that associates a specific  NotificationListener with one or more MBeans in an  MBeanServer (typically via a  MBeanServerConnection ). "},
{"api_id": 2189, "api_type": 4, "full_declaration": "InvalidInvocationException", "qualified_name": "org.springframework.jmx.access.InvalidInvocationException", "short_description": " Thrown when trying to invoke an operation on a proxy that is not exposed\nby the proxied MBean resource's management interface. "},
{"api_id": 2190, "api_type": 4, "full_declaration": "InvocationFailureException", "qualified_name": "org.springframework.jmx.access.InvocationFailureException", "short_description": " Thrown when an invocation on an MBean resource failed with an exception (either\na reflection exception or an exception thrown by the target method itself). "},
{"api_id": 2191, "api_type": 4, "full_declaration": "MBeanConnectFailureException", "qualified_name": "org.springframework.jmx.access.MBeanConnectFailureException", "short_description": " Thrown when an invocation failed because of an I/O problem on the\nMBeanServerConnection. "},
{"api_id": 2192, "api_type": 4, "full_declaration": "MBeanInfoRetrievalException", "qualified_name": "org.springframework.jmx.access.MBeanInfoRetrievalException", "short_description": " Thrown if an exception is encountered when trying to retrieve\nMBean metadata. "},
{"api_id": 2193, "api_type": 3, "full_declaration": "MBeanExporterListener", "qualified_name": "org.springframework.jmx.export.MBeanExporterListener", "short_description": " A listener that allows application code to be notified when an MBean is\nregistered and unregistered via an  MBeanExporter . "},
{"api_id": 2194, "api_type": 3, "full_declaration": "MBeanExportOperations", "qualified_name": "org.springframework.jmx.export.MBeanExportOperations", "short_description": " Interface that defines the set of MBean export operations that are intended to be\naccessed by application developers during application runtime. "},
{"api_id": 2195, "api_type": 2, "full_declaration": "MBeanExporter", "qualified_name": "org.springframework.jmx.export.MBeanExporter", "short_description": " JMX exporter that allows for exposing any  Spring-managed bean  to a\nJMX  MBeanServer , without the need to define any\nJMX-specific information in the bean classes. "},
{"api_id": 2196, "api_type": 2, "full_declaration": "NotificationListenerBean", "qualified_name": "org.springframework.jmx.export.NotificationListenerBean", "short_description": " Helper class that aggregates a  NotificationListener ,\na  NotificationFilter , and an arbitrary handback object. "},
{"api_id": 2197, "api_type": 2, "full_declaration": "SpringModelMBean", "qualified_name": "org.springframework.jmx.export.SpringModelMBean", "short_description": " Extension of the  RequiredModelMBean  class that ensures the thread context ClassLoader  is switched\nfor the managed resource's  ClassLoader  before any invocations occur. "},
{"api_id": 2198, "api_type": 4, "full_declaration": "MBeanExportException", "qualified_name": "org.springframework.jmx.export.MBeanExportException", "short_description": " Exception thrown in case of failure when exporting an MBean. "},
{"api_id": 2199, "api_type": 4, "full_declaration": "UnableToRegisterMBeanException", "qualified_name": "org.springframework.jmx.export.UnableToRegisterMBeanException", "short_description": " Exception thrown when we are unable to register an MBean,\nfor example because of a naming conflict. "},
{"api_id": 2200, "api_type": 2, "full_declaration": "AnnotationJmxAttributeSource", "qualified_name": "org.springframework.jmx.export.annotation.AnnotationJmxAttributeSource", "short_description": " Implementation of the  JmxAttributeSource  interface that\nreads annotations and exposes the corresponding attributes. "},
{"api_id": 2201, "api_type": 2, "full_declaration": "AnnotationMBeanExporter", "qualified_name": "org.springframework.jmx.export.annotation.AnnotationMBeanExporter", "short_description": " Convenient subclass of Spring's standard  MBeanExporter ,\nactivating Java 5 annotation usage for JMX exposure of Spring beans: ManagedResource ,  ManagedAttribute ,  ManagedOperation , etc. "},
{"api_id": 2202, "api_type": 9, "full_declaration": "ManagedAttribute", "qualified_name": "org.springframework.jmx.export.annotation.ManagedAttribute", "short_description": " Method-level annotation that indicates to expose a given bean property as a\nJMX attribute, corresponding to the ManagedAttribute . "},
{"api_id": 2203, "api_type": 9, "full_declaration": "ManagedMetric", "qualified_name": "org.springframework.jmx.export.annotation.ManagedMetric", "short_description": " Method-level annotation that indicates to expose a given bean property as a\nJMX attribute, with added descriptor properties to indicate that it is a metric. "},
{"api_id": 2204, "api_type": 9, "full_declaration": "ManagedNotification", "qualified_name": "org.springframework.jmx.export.annotation.ManagedNotification", "short_description": " Type-level annotation that indicates a JMX notification emitted by a bean. "},
{"api_id": 2205, "api_type": 9, "full_declaration": "ManagedNotifications", "qualified_name": "org.springframework.jmx.export.annotation.ManagedNotifications", "short_description": " Type-level annotation that indicates JMX notifications emitted by a bean,\ncontaining multiple  ManagedNotifications . "},
{"api_id": 2206, "api_type": 9, "full_declaration": "ManagedOperation", "qualified_name": "org.springframework.jmx.export.annotation.ManagedOperation", "short_description": " Method-level annotation that indicates to expose a given method as a\nJMX operation, corresponding to the  ManagedOperation  attribute. "},
{"api_id": 2207, "api_type": 9, "full_declaration": "ManagedOperationParameter", "qualified_name": "org.springframework.jmx.export.annotation.ManagedOperationParameter", "short_description": " Method-level annotation used to provide metadata about operation parameters,\ncorresponding to a  ManagedOperationParameter  attribute. "},
{"api_id": 2208, "api_type": 9, "full_declaration": "ManagedOperationParameters", "qualified_name": "org.springframework.jmx.export.annotation.ManagedOperationParameters", "short_description": " Method-level annotation used to provide metadata about operation parameters,\ncorresponding to an array of  ManagedOperationParameter  attributes. "},
{"api_id": 2209, "api_type": 9, "full_declaration": "ManagedResource", "qualified_name": "org.springframework.jmx.export.annotation.ManagedResource", "short_description": " Class-level annotation that indicates to register instances of a class\nwith a JMX server, corresponding to the  ManagedResource  attribute. "},
{"api_id": 2210, "api_type": 3, "full_declaration": "AutodetectCapableMBeanInfoAssembler", "qualified_name": "org.springframework.jmx.export.assembler.AutodetectCapableMBeanInfoAssembler", "short_description": " Extends the  MBeanInfoAssembler  to add autodetection logic. "},
{"api_id": 2211, "api_type": 3, "full_declaration": "MBeanInfoAssembler", "qualified_name": "org.springframework.jmx.export.assembler.MBeanInfoAssembler", "short_description": " Interface to be implemented by all classes that can\ncreate management interface metadata for a managed resource. "},
{"api_id": 2212, "api_type": 2, "full_declaration": "AbstractConfigurableMBeanInfoAssembler", "qualified_name": "org.springframework.jmx.export.assembler.AbstractConfigurableMBeanInfoAssembler", "short_description": " Base class for MBeanInfoAssemblers that support configurable\nJMX notification behavior. "},
{"api_id": 2213, "api_type": 2, "full_declaration": "AbstractMBeanInfoAssembler", "qualified_name": "org.springframework.jmx.export.assembler.AbstractMBeanInfoAssembler", "short_description": " Abstract implementation of the  MBeanInfoAssembler  interface\nthat encapsulates the creation of a  ModelMBeanInfo  instance\nbut delegates the creation of metadata to subclasses. "},
{"api_id": 2214, "api_type": 2, "full_declaration": "AbstractReflectiveMBeanInfoAssembler", "qualified_name": "org.springframework.jmx.export.assembler.AbstractReflectiveMBeanInfoAssembler", "short_description": " Builds on the  AbstractMBeanInfoAssembler  superclass to\nadd a basic algorithm for building metadata based on the\nreflective metadata of the MBean class. "},
{"api_id": 2215, "api_type": 2, "full_declaration": "InterfaceBasedMBeanInfoAssembler", "qualified_name": "org.springframework.jmx.export.assembler.InterfaceBasedMBeanInfoAssembler", "short_description": " Subclass of  AbstractReflectiveMBeanInfoAssembler  that allows for\nthe management interface of a bean to be defined using arbitrary interfaces. "},
{"api_id": 2216, "api_type": 2, "full_declaration": "MetadataMBeanInfoAssembler", "qualified_name": "org.springframework.jmx.export.assembler.MetadataMBeanInfoAssembler", "short_description": " Implementation of the  MBeanInfoAssembler  interface that reads\nthe management interface information from source level metadata. "},
{"api_id": 2217, "api_type": 2, "full_declaration": "MethodExclusionMBeanInfoAssembler", "qualified_name": "org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler", "short_description": " AbstractReflectiveMBeanInfoAssembler  subclass that allows\nmethod names to be explicitly excluded as MBean operations and attributes. "},
{"api_id": 2218, "api_type": 2, "full_declaration": "MethodNameBasedMBeanInfoAssembler", "qualified_name": "org.springframework.jmx.export.assembler.MethodNameBasedMBeanInfoAssembler", "short_description": " Subclass of  AbstractReflectiveMBeanInfoAssembler  that allows\nto specify method names to be exposed as MBean operations and attributes. "},
{"api_id": 2219, "api_type": 2, "full_declaration": "SimpleReflectiveMBeanInfoAssembler", "qualified_name": "org.springframework.jmx.export.assembler.SimpleReflectiveMBeanInfoAssembler", "short_description": " Simple subclass of  AbstractReflectiveMBeanInfoAssembler that always votes yes for method and property inclusion, effectively exposing\nall public methods and properties as operations and attributes. "},
{"api_id": 2220, "api_type": 3, "full_declaration": "JmxAttributeSource", "qualified_name": "org.springframework.jmx.export.metadata.JmxAttributeSource", "short_description": " Interface used by the  MetadataMBeanInfoAssembler  to\nread source-level metadata from a managed resource's class. "},
{"api_id": 2221, "api_type": 2, "full_declaration": "AbstractJmxAttribute", "qualified_name": "org.springframework.jmx.export.metadata.AbstractJmxAttribute", "short_description": " Base class for all JMX metadata classes. "},
{"api_id": 2222, "api_type": 2, "full_declaration": "JmxMetadataUtils", "qualified_name": "org.springframework.jmx.export.metadata.JmxMetadataUtils", "short_description": " Utility methods for converting Spring JMX metadata into their plain JMX equivalents. "},
{"api_id": 2223, "api_type": 2, "full_declaration": "ManagedAttribute", "qualified_name": "org.springframework.jmx.export.metadata.ManagedAttribute", "short_description": " Metadata that indicates to expose a given bean property as JMX attribute. "},
{"api_id": 2224, "api_type": 2, "full_declaration": "ManagedMetric", "qualified_name": "org.springframework.jmx.export.metadata.ManagedMetric", "short_description": " Metadata that indicates to expose a given bean property as a JMX attribute,\nwith additional descriptor properties that indicate that the attribute is a\nmetric. "},
{"api_id": 2225, "api_type": 2, "full_declaration": "ManagedNotification", "qualified_name": "org.springframework.jmx.export.metadata.ManagedNotification", "short_description": " Metadata that indicates a JMX notification emitted by a bean. "},
{"api_id": 2226, "api_type": 2, "full_declaration": "ManagedOperation", "qualified_name": "org.springframework.jmx.export.metadata.ManagedOperation", "short_description": " Metadata that indicates to expose a given method as JMX operation. "},
{"api_id": 2227, "api_type": 2, "full_declaration": "ManagedOperationParameter", "qualified_name": "org.springframework.jmx.export.metadata.ManagedOperationParameter", "short_description": " Metadata about JMX operation parameters. "},
{"api_id": 2228, "api_type": 2, "full_declaration": "ManagedResource", "qualified_name": "org.springframework.jmx.export.metadata.ManagedResource", "short_description": " Metadata indicating that instances of an annotated class\nare to be registered with a JMX server. "},
{"api_id": 2229, "api_type": 4, "full_declaration": "InvalidMetadataException", "qualified_name": "org.springframework.jmx.export.metadata.InvalidMetadataException", "short_description": " Thrown by the  JmxAttributeSource  when it encounters\nincorrect metadata on a managed resource or one of its methods. "},
{"api_id": 2230, "api_type": 3, "full_declaration": "ObjectNamingStrategy", "qualified_name": "org.springframework.jmx.export.naming.ObjectNamingStrategy", "short_description": " Strategy interface that encapsulates the creation of  ObjectName  instances. "},
{"api_id": 2231, "api_type": 3, "full_declaration": "SelfNaming", "qualified_name": "org.springframework.jmx.export.naming.SelfNaming", "short_description": " Interface that allows infrastructure components to provide their own ObjectName s to the  MBeanExporter . "},
{"api_id": 2232, "api_type": 2, "full_declaration": "IdentityNamingStrategy", "qualified_name": "org.springframework.jmx.export.naming.IdentityNamingStrategy", "short_description": " An implementation of the  ObjectNamingStrategy  interface that\ncreates a name based on the identity of a given instance. "},
{"api_id": 2233, "api_type": 2, "full_declaration": "KeyNamingStrategy", "qualified_name": "org.springframework.jmx.export.naming.KeyNamingStrategy", "short_description": " ObjectNamingStrategy  implementation that builds ObjectName  instances from the key used in the\n\"beans\" map passed to  MBeanExporter . "},
{"api_id": 2234, "api_type": 2, "full_declaration": "MetadataNamingStrategy", "qualified_name": "org.springframework.jmx.export.naming.MetadataNamingStrategy", "short_description": " An implementation of the  ObjectNamingStrategy  interface\nthat reads the  ObjectName  from the source-level metadata. "},
{"api_id": 2235, "api_type": 3, "full_declaration": "NotificationPublisher", "qualified_name": "org.springframework.jmx.export.notification.NotificationPublisher", "short_description": " Simple interface allowing Spring-managed MBeans to publish JMX notifications\nwithout being aware of how those notifications are being transmitted to the MBeanServer . "},
{"api_id": 2236, "api_type": 3, "full_declaration": "NotificationPublisherAware", "qualified_name": "org.springframework.jmx.export.notification.NotificationPublisherAware", "short_description": " Interface to be implemented by any Spring-managed resource that is to be\nregistered with an  MBeanServer  and wishes to send\nJMX  javax.management.Notifications . "},
{"api_id": 2237, "api_type": 2, "full_declaration": "ModelMBeanNotificationPublisher", "qualified_name": "org.springframework.jmx.export.notification.ModelMBeanNotificationPublisher", "short_description": " NotificationPublisher  implementation that uses the infrastructure\nprovided by the  ModelMBean  interface to track javax.management.NotificationListeners and send  Notifications  to those listeners. "},
{"api_id": 2238, "api_type": 4, "full_declaration": "UnableToSendNotificationException", "qualified_name": "org.springframework.jmx.export.notification.UnableToSendNotificationException", "short_description": " Thrown when a JMX  Notification  is unable to be sent. "},
{"api_id": 2239, "api_type": 2, "full_declaration": "ConnectorServerFactoryBean", "qualified_name": "org.springframework.jmx.support.ConnectorServerFactoryBean", "short_description": " FactoryBean  that creates a JSR-160  JMXConnectorServer ,\noptionally registers it with the  MBeanServer , and then starts it. "},
{"api_id": 2240, "api_type": 2, "full_declaration": "JmxUtils", "qualified_name": "org.springframework.jmx.support.JmxUtils", "short_description": " Collection of generic utility methods to support Spring JMX. "},
{"api_id": 2241, "api_type": 2, "full_declaration": "MBeanRegistrationSupport", "qualified_name": "org.springframework.jmx.support.MBeanRegistrationSupport", "short_description": " Provides supporting infrastructure for registering MBeans with an MBeanServer . "},
{"api_id": 2242, "api_type": 2, "full_declaration": "MBeanServerConnectionFactoryBean", "qualified_name": "org.springframework.jmx.support.MBeanServerConnectionFactoryBean", "short_description": " FactoryBean  that creates a JMX 1.2  MBeanServerConnection to a remote  MBeanServer  exposed via a  JMXServerConnector . "},
{"api_id": 2243, "api_type": 2, "full_declaration": "MBeanServerFactoryBean", "qualified_name": "org.springframework.jmx.support.MBeanServerFactoryBean", "short_description": " FactoryBean  that obtains a  MBeanServer  reference\nthrough the standard JMX 1.2  MBeanServerFactory API. "},
{"api_id": 2244, "api_type": 2, "full_declaration": "NotificationListenerHolder", "qualified_name": "org.springframework.jmx.support.NotificationListenerHolder", "short_description": " Helper class that aggregates a  NotificationListener ,\na  NotificationFilter , and an arbitrary handback\nobject, as well as the names of MBeans from which the listener wishes\nto receive  Notifications . "},
{"api_id": 2245, "api_type": 2, "full_declaration": "ObjectNameManager", "qualified_name": "org.springframework.jmx.support.ObjectNameManager", "short_description": " Helper class for the creation of  ObjectName  instances. "},
{"api_id": 2246, "api_type": 2, "full_declaration": "WebSphereMBeanServerFactoryBean", "qualified_name": "org.springframework.jmx.support.WebSphereMBeanServerFactoryBean", "short_description": " FactoryBean  that obtains a WebSphere  MBeanServer reference through WebSphere's proprietary  AdminServiceFactory  API,\navailable on WebSphere 5.1 and higher. "},
{"api_id": 2247, "api_type": 8, "full_declaration": "MetricType", "qualified_name": "org.springframework.jmx.support.MetricType", "short_description": " Represents how the measurement values of a  ManagedMetric  will change over time. "},
{"api_id": 2248, "api_type": 8, "full_declaration": "RegistrationPolicy", "qualified_name": "org.springframework.jmx.support.RegistrationPolicy", "short_description": " Indicates registration behavior when attempting to register an MBean that already\nexists. "},
{"api_id": 2249, "api_type": 3, "full_declaration": "JndiCallback", "qualified_name": "org.springframework.jndi.JndiCallback", "short_description": " Callback interface to be implemented by classes that need to perform an\noperation (such as a lookup) in a JNDI context. "},
{"api_id": 2250, "api_type": 2, "full_declaration": "JndiAccessor", "qualified_name": "org.springframework.jndi.JndiAccessor", "short_description": " Convenient superclass for JNDI accessors, providing \"jndiTemplate\"\nand \"jndiEnvironment\" bean properties. "},
{"api_id": 2251, "api_type": 2, "full_declaration": "JndiLocatorDelegate", "qualified_name": "org.springframework.jndi.JndiLocatorDelegate", "short_description": " JndiLocatorSupport  subclass with public lookup methods,\nfor convenient use as a delegate. "},
{"api_id": 2252, "api_type": 2, "full_declaration": "JndiLocatorSupport", "qualified_name": "org.springframework.jndi.JndiLocatorSupport", "short_description": " Convenient superclass for classes that can locate any number of JNDI objects. "},
{"api_id": 2253, "api_type": 2, "full_declaration": "JndiObjectFactoryBean", "qualified_name": "org.springframework.jndi.JndiObjectFactoryBean", "short_description": " FactoryBean  that looks up a\nJNDI object. "},
{"api_id": 2254, "api_type": 2, "full_declaration": "JndiObjectLocator", "qualified_name": "org.springframework.jndi.JndiObjectLocator", "short_description": " Convenient superclass for JNDI-based service locators,\nproviding configurable lookup of a specific JNDI resource. "},
{"api_id": 2255, "api_type": 2, "full_declaration": "JndiObjectTargetSource", "qualified_name": "org.springframework.jndi.JndiObjectTargetSource", "short_description": " AOP  TargetSource  that provides\nconfigurable JNDI lookups for  getTarget()  calls. "},
{"api_id": 2256, "api_type": 2, "full_declaration": "JndiPropertySource", "qualified_name": "org.springframework.jndi.JndiPropertySource", "short_description": " PropertySource  implementation that reads properties from an underlying Spring JndiLocatorDelegate . "},
{"api_id": 2257, "api_type": 2, "full_declaration": "JndiTemplate", "qualified_name": "org.springframework.jndi.JndiTemplate", "short_description": " Helper class that simplifies JNDI operations. "},
{"api_id": 2258, "api_type": 2, "full_declaration": "JndiTemplateEditor", "qualified_name": "org.springframework.jndi.JndiTemplateEditor", "short_description": " Properties editor for JndiTemplate objects. "},
{"api_id": 2259, "api_type": 4, "full_declaration": "JndiLookupFailureException", "qualified_name": "org.springframework.jndi.JndiLookupFailureException", "short_description": " RuntimeException to be thrown in case of JNDI lookup failures,\nin particular from code that does not declare JNDI's checked NamingException : for example, from Spring's JndiObjectTargetSource . "},
{"api_id": 2260, "api_type": 4, "full_declaration": "TypeMismatchNamingException", "qualified_name": "org.springframework.jndi.TypeMismatchNamingException", "short_description": " Exception thrown if a type mismatch is encountered for an object\nlocated in a JNDI environment. "},
{"api_id": 2261, "api_type": 2, "full_declaration": "SimpleJndiBeanFactory", "qualified_name": "org.springframework.jndi.support.SimpleJndiBeanFactory", "short_description": " Simple JNDI-based implementation of Spring's BeanFactory  interface. "},
{"api_id": 2262, "api_type": 9, "full_declaration": "NonNull", "qualified_name": "org.springframework.lang.NonNull", "short_description": " A common Spring annotation to declare that annotated elements cannot be  null . "},
{"api_id": 2263, "api_type": 9, "full_declaration": "NonNullApi", "qualified_name": "org.springframework.lang.NonNullApi", "short_description": " A common Spring annotation to declare that parameters and return values\nare to be considered as non-nullable by default for a given package. "},
{"api_id": 2264, "api_type": 9, "full_declaration": "NonNullFields", "qualified_name": "org.springframework.lang.NonNullFields", "short_description": " A common Spring annotation to declare that fields are to be considered as\nnon-nullable by default for a given package. "},
{"api_id": 2265, "api_type": 9, "full_declaration": "Nullable", "qualified_name": "org.springframework.lang.Nullable", "short_description": " A common Spring annotation to declare that annotated elements can be  null  under\nsome circumstance. "},
{"api_id": 2266, "api_type": 9, "full_declaration": "UsesJava7", "qualified_name": "org.springframework.lang.UsesJava7", "short_description": "Deprecated as of 5.0 since the framework is based on Java 8+ now "},
{"api_id": 2267, "api_type": 9, "full_declaration": "UsesJava8", "qualified_name": "org.springframework.lang.UsesJava8", "short_description": "Deprecated as of 5.0 since the framework is based on Java 8+ now "},
{"api_id": 2268, "api_type": 9, "full_declaration": "UsesSunHttpServer", "qualified_name": "org.springframework.lang.UsesSunHttpServer", "short_description": "Deprecated as of 5.1, along with Spring's Sun HTTP Server support classes "},
{"api_id": 2269, "api_type": 9, "full_declaration": "UsesSunMisc", "qualified_name": "org.springframework.lang.UsesSunMisc", "short_description": " Indicates that the annotated element uses an API from the  sun.misc package. "},
{"api_id": 2270, "api_type": 3, "full_declaration": "MailMessage", "qualified_name": "org.springframework.mail.MailMessage", "short_description": " This is a common interface for mail messages, allowing a user to set key\nvalues required in assembling a mail message, without needing to know if\nthe underlying message is a simple text message or a more sophisticated\nMIME message. "},
{"api_id": 2271, "api_type": 3, "full_declaration": "MailSender", "qualified_name": "org.springframework.mail.MailSender", "short_description": " This interface defines a strategy for sending simple mails. "},
{"api_id": 2272, "api_type": 2, "full_declaration": "SimpleMailMessage", "qualified_name": "org.springframework.mail.SimpleMailMessage", "short_description": " Models a simple mail message, including data such as the from, to, cc, subject,\nand text fields. "},
{"api_id": 2273, "api_type": 4, "full_declaration": "MailAuthenticationException", "qualified_name": "org.springframework.mail.MailAuthenticationException", "short_description": " Exception thrown on failed authentication. "},
{"api_id": 2274, "api_type": 4, "full_declaration": "MailException", "qualified_name": "org.springframework.mail.MailException", "short_description": " Base class for all mail exceptions. "},
{"api_id": 2275, "api_type": 4, "full_declaration": "MailParseException", "qualified_name": "org.springframework.mail.MailParseException", "short_description": " Exception thrown if illegal message properties are encountered. "},
{"api_id": 2276, "api_type": 4, "full_declaration": "MailPreparationException", "qualified_name": "org.springframework.mail.MailPreparationException", "short_description": " Exception to be thrown by user code if a mail cannot be prepared properly,\nfor example when a FreeMarker template cannot be rendered for the mail text. "},
{"api_id": 2277, "api_type": 4, "full_declaration": "MailSendException", "qualified_name": "org.springframework.mail.MailSendException", "short_description": " Exception thrown when a mail sending error is encountered. "},
{"api_id": 2278, "api_type": 3, "full_declaration": "JavaMailSender", "qualified_name": "org.springframework.mail.javamail.JavaMailSender", "short_description": " Extended  MailSender  interface for JavaMail,\nsupporting MIME messages both as direct arguments and through preparation\ncallbacks. "},
{"api_id": 2279, "api_type": 3, "full_declaration": "MimeMessagePreparator", "qualified_name": "org.springframework.mail.javamail.MimeMessagePreparator", "short_description": " Callback interface for the preparation of JavaMail MIME messages. "},
{"api_id": 2280, "api_type": 2, "full_declaration": "ConfigurableMimeFileTypeMap", "qualified_name": "org.springframework.mail.javamail.ConfigurableMimeFileTypeMap", "short_description": " Spring-configurable  FileTypeMap  implementation that will read\nMIME type to file extension mappings from a standard JavaMail MIME type\nmapping file, using a standard  MimetypesFileTypeMap  underneath. "},
{"api_id": 2281, "api_type": 2, "full_declaration": "InternetAddressEditor", "qualified_name": "org.springframework.mail.javamail.InternetAddressEditor", "short_description": " Editor for  java.mail.internet.InternetAddress ,\nto directly populate an InternetAddress property. "},
{"api_id": 2282, "api_type": 2, "full_declaration": "JavaMailSenderImpl", "qualified_name": "org.springframework.mail.javamail.JavaMailSenderImpl", "short_description": " Production implementation of the  JavaMailSender  interface,\nsupporting both JavaMail  MimeMessages  and Spring SimpleMailMessages . "},
{"api_id": 2283, "api_type": 2, "full_declaration": "MimeMailMessage", "qualified_name": "org.springframework.mail.javamail.MimeMailMessage", "short_description": " Implementation of the MailMessage interface for a JavaMail MIME message,\nto let message population code interact with a simple message or a MIME\nmessage through a common interface. "},
{"api_id": 2284, "api_type": 2, "full_declaration": "MimeMessageHelper", "qualified_name": "org.springframework.mail.javamail.MimeMessageHelper", "short_description": " Helper class for populating a  MimeMessage . "},
{"api_id": 2285, "api_type": 3, "full_declaration": "Message", "qualified_name": "org.springframework.messaging.Message", "short_description": " A generic message representation with headers and body. "},
{"api_id": 2286, "api_type": 3, "full_declaration": "MessageChannel", "qualified_name": "org.springframework.messaging.MessageChannel", "short_description": " Defines methods for sending messages. "},
{"api_id": 2287, "api_type": 3, "full_declaration": "MessageHandler", "qualified_name": "org.springframework.messaging.MessageHandler", "short_description": " Simple contract for handling a  Message . "},
{"api_id": 2288, "api_type": 3, "full_declaration": "PollableChannel", "qualified_name": "org.springframework.messaging.PollableChannel", "short_description": " A  MessageChannel  from which messages may be actively received through polling. "},
{"api_id": 2289, "api_type": 3, "full_declaration": "ReactiveMessageHandler", "qualified_name": "org.springframework.messaging.ReactiveMessageHandler", "short_description": " Reactive contract for handling a  Message . "},
{"api_id": 2290, "api_type": 3, "full_declaration": "SubscribableChannel", "qualified_name": "org.springframework.messaging.SubscribableChannel", "short_description": " A  MessageChannel  that maintains a registry of subscribers and invokes\nthem to handle messages sent through this channel. "},
{"api_id": 2291, "api_type": 2, "full_declaration": "MessageHeaders", "qualified_name": "org.springframework.messaging.MessageHeaders", "short_description": " The headers for a  Message . "},
{"api_id": 2292, "api_type": 4, "full_declaration": "MessageDeliveryException", "qualified_name": "org.springframework.messaging.MessageDeliveryException", "short_description": " Exception that indicates an error occurred during message delivery. "},
{"api_id": 2293, "api_type": 4, "full_declaration": "MessageHandlingException", "qualified_name": "org.springframework.messaging.MessageHandlingException", "short_description": " Exception that indicates an error occurred during message handling. "},
{"api_id": 2294, "api_type": 4, "full_declaration": "MessagingException", "qualified_name": "org.springframework.messaging.MessagingException", "short_description": " The base exception for any failures related to messaging. "},
{"api_id": 2295, "api_type": 3, "full_declaration": "ContentTypeResolver", "qualified_name": "org.springframework.messaging.converter.ContentTypeResolver", "short_description": " Resolve the content type for a message. "},
{"api_id": 2296, "api_type": 3, "full_declaration": "MessageConverter", "qualified_name": "org.springframework.messaging.converter.MessageConverter", "short_description": " A converter to turn the payload of a  Message  from serialized form to a typed\nObject and vice versa. "},
{"api_id": 2297, "api_type": 3, "full_declaration": "SmartMessageConverter", "qualified_name": "org.springframework.messaging.converter.SmartMessageConverter", "short_description": " An extended  MessageConverter  SPI with conversion hint support. "},
{"api_id": 2298, "api_type": 2, "full_declaration": "AbstractJsonMessageConverter", "qualified_name": "org.springframework.messaging.converter.AbstractJsonMessageConverter", "short_description": " Common base class for plain JSON converters, e.g. "},
{"api_id": 2299, "api_type": 2, "full_declaration": "AbstractMessageConverter", "qualified_name": "org.springframework.messaging.converter.AbstractMessageConverter", "short_description": " Abstract base class for  SmartMessageConverter  implementations including\nsupport for common properties and a partial implementation of the conversion methods,\nmainly to check if the converter supports the conversion based on the payload class\nand MIME type. "},
{"api_id": 2300, "api_type": 2, "full_declaration": "ByteArrayMessageConverter", "qualified_name": "org.springframework.messaging.converter.ByteArrayMessageConverter", "short_description": " A  MessageConverter  that supports MIME type \"application/octet-stream\" with the\npayload converted to and from a byte[]. "},
{"api_id": 2301, "api_type": 2, "full_declaration": "CompositeMessageConverter", "qualified_name": "org.springframework.messaging.converter.CompositeMessageConverter", "short_description": " A  MessageConverter  that delegates to a list of registered converters\nto be invoked until one of them returns a non-null result. "},
{"api_id": 2302, "api_type": 2, "full_declaration": "DefaultContentTypeResolver", "qualified_name": "org.springframework.messaging.converter.DefaultContentTypeResolver", "short_description": " A default  ContentTypeResolver  that checks the MessageHeaders.CONTENT_TYPE  header or falls back to a default value. "},
{"api_id": 2303, "api_type": 2, "full_declaration": "GenericMessageConverter", "qualified_name": "org.springframework.messaging.converter.GenericMessageConverter", "short_description": " An extension of the  SimpleMessageConverter  that uses a ConversionService  to convert the payload of the message\nto the requested type. "},
{"api_id": 2304, "api_type": 2, "full_declaration": "GsonMessageConverter", "qualified_name": "org.springframework.messaging.converter.GsonMessageConverter", "short_description": " Implementation of  MessageConverter  that can read and write JSON\nusing  Google Gson . "},
{"api_id": 2305, "api_type": 2, "full_declaration": "JsonbMessageConverter", "qualified_name": "org.springframework.messaging.converter.JsonbMessageConverter", "short_description": " Implementation of  MessageConverter  that can read and write JSON\nusing the  JSON Binding API . "},
{"api_id": 2306, "api_type": 2, "full_declaration": "KotlinSerializationJsonMessageConverter", "qualified_name": "org.springframework.messaging.converter.KotlinSerializationJsonMessageConverter", "short_description": " Implementation of  MessageConverter  that can read and write JSON\nusing  kotlinx.serialization . "},
{"api_id": 2307, "api_type": 2, "full_declaration": "MappingJackson2MessageConverter", "qualified_name": "org.springframework.messaging.converter.MappingJackson2MessageConverter", "short_description": " A Jackson 2 based  MessageConverter  implementation. "},
{"api_id": 2308, "api_type": 2, "full_declaration": "MarshallingMessageConverter", "qualified_name": "org.springframework.messaging.converter.MarshallingMessageConverter", "short_description": " Implementation of  MessageConverter  that can read and write XML using Spring's Marshaller  and  Unmarshaller  abstractions. "},
{"api_id": 2309, "api_type": 2, "full_declaration": "ProtobufJsonFormatMessageConverter", "qualified_name": "org.springframework.messaging.converter.ProtobufJsonFormatMessageConverter", "short_description": " Subclass of  ProtobufMessageConverter  for use with the official \"com.google.protobuf:protobuf-java-util\"  library for JSON support. "},
{"api_id": 2310, "api_type": 2, "full_declaration": "ProtobufMessageConverter", "qualified_name": "org.springframework.messaging.converter.ProtobufMessageConverter", "short_description": " An  MessageConverter  that reads and writes com.google.protobuf.Messages  using Google Protocol Buffers . "},
{"api_id": 2311, "api_type": 2, "full_declaration": "SimpleMessageConverter", "qualified_name": "org.springframework.messaging.converter.SimpleMessageConverter", "short_description": " A simple converter that simply unwraps the message payload as long as it matches the\nexpected target class. "},
{"api_id": 2312, "api_type": 2, "full_declaration": "StringMessageConverter", "qualified_name": "org.springframework.messaging.converter.StringMessageConverter", "short_description": " A  MessageConverter  that supports MIME type \"text/plain\" with the\npayload converted to and from a String. "},
{"api_id": 2313, "api_type": 4, "full_declaration": "MessageConversionException", "qualified_name": "org.springframework.messaging.converter.MessageConversionException", "short_description": " An exception raised by  MessageConverter  implementations. "},
{"api_id": 2314, "api_type": 3, "full_declaration": "DestinationResolver", "qualified_name": "org.springframework.messaging.core.DestinationResolver", "short_description": " Strategy for resolving a String destination name to an actual destination\nof type  <D> . "},
{"api_id": 2315, "api_type": 3, "full_declaration": "DestinationResolvingMessageReceivingOperations", "qualified_name": "org.springframework.messaging.core.DestinationResolvingMessageReceivingOperations", "short_description": " Extends  MessageReceivingOperations  and adds operations for receiving messages\nfrom a destination specified as a (resolvable) String name. "},
{"api_id": 2316, "api_type": 3, "full_declaration": "DestinationResolvingMessageRequestReplyOperations", "qualified_name": "org.springframework.messaging.core.DestinationResolvingMessageRequestReplyOperations", "short_description": " Extends  MessageRequestReplyOperations  and adds operations for sending and\nreceiving messages to and from a destination specified as a (resolvable) String name. "},
{"api_id": 2317, "api_type": 3, "full_declaration": "DestinationResolvingMessageSendingOperations", "qualified_name": "org.springframework.messaging.core.DestinationResolvingMessageSendingOperations", "short_description": " Extends  MessageSendingOperations  and adds operations for sending messages\nto a destination specified as a (resolvable) String name. "},
{"api_id": 2318, "api_type": 3, "full_declaration": "MessagePostProcessor", "qualified_name": "org.springframework.messaging.core.MessagePostProcessor", "short_description": " A contract for processing a  Message  after it has been created, either\nreturning a modified (effectively new) message or returning the same. "},
{"api_id": 2319, "api_type": 3, "full_declaration": "MessageReceivingOperations", "qualified_name": "org.springframework.messaging.core.MessageReceivingOperations", "short_description": " Operations for receiving messages from a destination. "},
{"api_id": 2320, "api_type": 3, "full_declaration": "MessageRequestReplyOperations", "qualified_name": "org.springframework.messaging.core.MessageRequestReplyOperations", "short_description": " Operations for sending messages to and receiving the reply from a destination. "},
{"api_id": 2321, "api_type": 3, "full_declaration": "MessageSendingOperations", "qualified_name": "org.springframework.messaging.core.MessageSendingOperations", "short_description": " Operations for sending messages to a destination. "},
{"api_id": 2322, "api_type": 2, "full_declaration": "AbstractDestinationResolvingMessagingTemplate", "qualified_name": "org.springframework.messaging.core.AbstractDestinationResolvingMessagingTemplate", "short_description": " An extension of  AbstractMessagingTemplate  that adds operations for sending\nmessages to a resolvable destination name. "},
{"api_id": 2323, "api_type": 2, "full_declaration": "AbstractMessageReceivingTemplate", "qualified_name": "org.springframework.messaging.core.AbstractMessageReceivingTemplate", "short_description": " An extension of  AbstractMessageSendingTemplate  that adds support for\nreceive style operations as defined by  MessageReceivingOperations . "},
{"api_id": 2324, "api_type": 2, "full_declaration": "AbstractMessageSendingTemplate", "qualified_name": "org.springframework.messaging.core.AbstractMessageSendingTemplate", "short_description": " Abstract base class for implementations of  MessageSendingOperations . "},
{"api_id": 2325, "api_type": 2, "full_declaration": "AbstractMessagingTemplate", "qualified_name": "org.springframework.messaging.core.AbstractMessagingTemplate", "short_description": " An extension of  AbstractMessageReceivingTemplate  that adds support for\nrequest-reply style operations as defined by  MessageRequestReplyOperations . "},
{"api_id": 2326, "api_type": 2, "full_declaration": "BeanFactoryMessageChannelDestinationResolver", "qualified_name": "org.springframework.messaging.core.BeanFactoryMessageChannelDestinationResolver", "short_description": " An implementation of  DestinationResolver  that interprets a destination\nname as the bean name of a  MessageChannel  and looks up the bean in\nthe configured  BeanFactory . "},
{"api_id": 2327, "api_type": 2, "full_declaration": "CachingDestinationResolverProxy", "qualified_name": "org.springframework.messaging.core.CachingDestinationResolverProxy", "short_description": " DestinationResolver  implementation that proxies a target DestinationResolver,\ncaching its  CachingDestinationResolverProxy.resolveDestination(java.lang.String)  results. "},
{"api_id": 2328, "api_type": 2, "full_declaration": "GenericMessagingTemplate", "qualified_name": "org.springframework.messaging.core.GenericMessagingTemplate", "short_description": " A messaging template that resolves destinations names to  MessageChannel 's\nto send and receive messages from. "},
{"api_id": 2329, "api_type": 4, "full_declaration": "DestinationResolutionException", "qualified_name": "org.springframework.messaging.core.DestinationResolutionException", "short_description": " Thrown by a  DestinationResolver  when it cannot resolve a destination. "},
{"api_id": 2330, "api_type": 3, "full_declaration": "MessageCondition", "qualified_name": "org.springframework.messaging.handler.MessageCondition", "short_description": " Contract for mapping conditions to messages. "},
{"api_id": 2331, "api_type": 3, "full_declaration": "MessagingAdviceBean", "qualified_name": "org.springframework.messaging.handler.MessagingAdviceBean", "short_description": " Represents a Spring-managed bean with cross-cutting functionality to be\napplied to one or more Spring beans with annotation-based message\nhandling methods. "},
{"api_id": 2332, "api_type": 2, "full_declaration": "AbstractMessageCondition", "qualified_name": "org.springframework.messaging.handler.AbstractMessageCondition", "short_description": " Base class for  MessageCondition's  that pre-declares abstract methods AbstractMessageCondition.getContent()  and  AbstractMessageCondition.getToStringInfix()  in order to provide\nimplementations of  AbstractMessageCondition.equals(Object) ,  AbstractMessageCondition.hashCode() , and AbstractMessageCondition.toString() . "},
{"api_id": 2333, "api_type": 2, "full_declaration": "CompositeMessageCondition", "qualified_name": "org.springframework.messaging.handler.CompositeMessageCondition", "short_description": " Composite  MessageCondition  that delegates to other message conditions. "},
{"api_id": 2334, "api_type": 2, "full_declaration": "DestinationPatternsMessageCondition", "qualified_name": "org.springframework.messaging.handler.DestinationPatternsMessageCondition", "short_description": " MessageCondition  to match the destination header of a Message\nagainst one or more patterns through a  RouteMatcher . "},
{"api_id": 2335, "api_type": 2, "full_declaration": "HandlerMethod", "qualified_name": "org.springframework.messaging.handler.HandlerMethod", "short_description": " Encapsulates information about a handler method consisting of a method  and a  bean . "},
{"api_id": 2336, "api_type": 3, "full_declaration": "ValueConstants", "qualified_name": "org.springframework.messaging.handler.annotation.ValueConstants", "short_description": " Common annotation value constants. "},
{"api_id": 2337, "api_type": 9, "full_declaration": "DestinationVariable", "qualified_name": "org.springframework.messaging.handler.annotation.DestinationVariable", "short_description": " Annotation that indicates a method parameter should be bound to a template variable\nin a destination template string. "},
{"api_id": 2338, "api_type": 9, "full_declaration": "Header", "qualified_name": "org.springframework.messaging.handler.annotation.Header", "short_description": " Annotation which indicates that a method parameter should be bound to a message header. "},
{"api_id": 2339, "api_type": 9, "full_declaration": "Headers", "qualified_name": "org.springframework.messaging.handler.annotation.Headers", "short_description": " Annotation which indicates that a method parameter should be bound to the headers of a\nmessage. "},
{"api_id": 2340, "api_type": 9, "full_declaration": "MessageExceptionHandler", "qualified_name": "org.springframework.messaging.handler.annotation.MessageExceptionHandler", "short_description": " Annotation for handling exceptions thrown from message-handling methods within a\nspecific handler class. "},
{"api_id": 2341, "api_type": 9, "full_declaration": "MessageMapping", "qualified_name": "org.springframework.messaging.handler.annotation.MessageMapping", "short_description": " Annotation for mapping a  Message  onto a message-handling method by\nmatching the declared  patterns  to a destination extracted\nfrom the message. "},
{"api_id": 2342, "api_type": 9, "full_declaration": "Payload", "qualified_name": "org.springframework.messaging.handler.annotation.Payload", "short_description": " Annotation that binds a method parameter to the payload of a message. "},
{"api_id": 2343, "api_type": 9, "full_declaration": "SendTo", "qualified_name": "org.springframework.messaging.handler.annotation.SendTo", "short_description": " Annotation that indicates a method's return value should be converted to\na  Message  if necessary and sent to the specified destination. "},
{"api_id": 2344, "api_type": 2, "full_declaration": "AbstractNamedValueMethodArgumentResolver", "qualified_name": "org.springframework.messaging.handler.annotation.reactive.AbstractNamedValueMethodArgumentResolver", "short_description": " Abstract base class to resolve method arguments from a named value, e.g. "},
{"api_id": 2345, "api_type": 2, "full_declaration": "AbstractNamedValueMethodArgumentResolver.NamedValueInfo", "qualified_name": "org.springframework.messaging.handler.annotation.reactive.AbstractNamedValueMethodArgumentResolver.NamedValueInfo", "short_description": " Represents a named value declaration. "},
{"api_id": 2346, "api_type": 2, "full_declaration": "ContinuationHandlerMethodArgumentResolver", "qualified_name": "org.springframework.messaging.handler.annotation.reactive.ContinuationHandlerMethodArgumentResolver", "short_description": " No-op resolver for method arguments of type  Continuation . "},
{"api_id": 2347, "api_type": 2, "full_declaration": "DestinationVariableMethodArgumentResolver", "qualified_name": "org.springframework.messaging.handler.annotation.reactive.DestinationVariableMethodArgumentResolver", "short_description": " Resolve for  @DestinationVariable  method parameters. "},
{"api_id": 2348, "api_type": 2, "full_declaration": "HeaderMethodArgumentResolver", "qualified_name": "org.springframework.messaging.handler.annotation.reactive.HeaderMethodArgumentResolver", "short_description": " Resolver for  @Header  arguments. "},
{"api_id": 2349, "api_type": 2, "full_declaration": "HeadersMethodArgumentResolver", "qualified_name": "org.springframework.messaging.handler.annotation.reactive.HeadersMethodArgumentResolver", "short_description": " Argument resolver for headers. "},
{"api_id": 2350, "api_type": 2, "full_declaration": "MessageMappingMessageHandler", "qualified_name": "org.springframework.messaging.handler.annotation.reactive.MessageMappingMessageHandler", "short_description": " Extension of  AbstractMethodMessageHandler  for reactive, non-blocking\nhandling of messages via  @MessageMapping  methods. "},
{"api_id": 2351, "api_type": 2, "full_declaration": "PayloadMethodArgumentResolver", "qualified_name": "org.springframework.messaging.handler.annotation.reactive.PayloadMethodArgumentResolver", "short_description": " A resolver to extract and decode the payload of a message using a Decoder , where the payload is expected to be a  Publisher  of DataBuffer . "},
{"api_id": 2352, "api_type": 3, "full_declaration": "MessageHandlerMethodFactory", "qualified_name": "org.springframework.messaging.handler.annotation.support.MessageHandlerMethodFactory", "short_description": " A factory for  InvocableHandlerMethod  that is suitable to process\nan incoming  Message "},
{"api_id": 2353, "api_type": 2, "full_declaration": "AbstractNamedValueMethodArgumentResolver", "qualified_name": "org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver", "short_description": " Abstract base class to resolve method arguments from a named value, e.g. "},
{"api_id": 2354, "api_type": 2, "full_declaration": "AbstractNamedValueMethodArgumentResolver.NamedValueInfo", "qualified_name": "org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver.NamedValueInfo", "short_description": " Represents a named value declaration. "},
{"api_id": 2355, "api_type": 2, "full_declaration": "AnnotationExceptionHandlerMethodResolver", "qualified_name": "org.springframework.messaging.handler.annotation.support.AnnotationExceptionHandlerMethodResolver", "short_description": " A sub-class of  AbstractExceptionHandlerMethodResolver  that looks for MessageExceptionHandler -annotated methods in a given class. "},
{"api_id": 2356, "api_type": 2, "full_declaration": "DefaultMessageHandlerMethodFactory", "qualified_name": "org.springframework.messaging.handler.annotation.support.DefaultMessageHandlerMethodFactory", "short_description": " The default  MessageHandlerMethodFactory  implementation creating an InvocableHandlerMethod  with the necessary HandlerMethodArgumentResolver  instances to detect and process\nmost of the use cases defined by MessageMapping . "},
{"api_id": 2357, "api_type": 2, "full_declaration": "DestinationVariableMethodArgumentResolver", "qualified_name": "org.springframework.messaging.handler.annotation.support.DestinationVariableMethodArgumentResolver", "short_description": " Resolve for  @DestinationVariable  method parameters. "},
{"api_id": 2358, "api_type": 2, "full_declaration": "HeaderMethodArgumentResolver", "qualified_name": "org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver", "short_description": " Resolver for  @Header  arguments. "},
{"api_id": 2359, "api_type": 2, "full_declaration": "HeadersMethodArgumentResolver", "qualified_name": "org.springframework.messaging.handler.annotation.support.HeadersMethodArgumentResolver", "short_description": " Argument resolver for headers. "},
{"api_id": 2360, "api_type": 2, "full_declaration": "MessageMethodArgumentResolver", "qualified_name": "org.springframework.messaging.handler.annotation.support.MessageMethodArgumentResolver", "short_description": " HandlerMethodArgumentResolver  for  Message  method arguments. "},
{"api_id": 2361, "api_type": 2, "full_declaration": "PayloadArgumentResolver", "qualified_name": "org.springframework.messaging.handler.annotation.support.PayloadArgumentResolver", "short_description": "Deprecated as of 5.2, in favor of  PayloadMethodArgumentResolver "},
{"api_id": 2362, "api_type": 2, "full_declaration": "PayloadMethodArgumentResolver", "qualified_name": "org.springframework.messaging.handler.annotation.support.PayloadMethodArgumentResolver", "short_description": " A resolver to extract and convert the payload of a message using a MessageConverter . "},
{"api_id": 2363, "api_type": 4, "full_declaration": "MethodArgumentNotValidException", "qualified_name": "org.springframework.messaging.handler.annotation.support.MethodArgumentNotValidException", "short_description": " Exception to be thrown when a method argument fails validation perhaps as a\nresult of  @Valid  style validation, or perhaps because it is required. "},
{"api_id": 2364, "api_type": 4, "full_declaration": "MethodArgumentTypeMismatchException", "qualified_name": "org.springframework.messaging.handler.annotation.support.MethodArgumentTypeMismatchException", "short_description": " Exception that indicates that a method argument has not the expected type. "},
{"api_id": 2365, "api_type": 3, "full_declaration": "AsyncHandlerMethodReturnValueHandler", "qualified_name": "org.springframework.messaging.handler.invocation.AsyncHandlerMethodReturnValueHandler", "short_description": " An extension of  HandlerMethodReturnValueHandler  for handling async,\nFuture-like return value types that support success and error callbacks. "},
{"api_id": 2366, "api_type": 3, "full_declaration": "HandlerMethodArgumentResolver", "qualified_name": "org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolver", "short_description": " Strategy interface for resolving method parameters into argument values\nin the context of a given  Message . "},
{"api_id": 2367, "api_type": 3, "full_declaration": "HandlerMethodReturnValueHandler", "qualified_name": "org.springframework.messaging.handler.invocation.HandlerMethodReturnValueHandler", "short_description": " Strategy interface to handle the value returned from the invocation of a\nmethod handling a  Message . "},
{"api_id": 2368, "api_type": 2, "full_declaration": "AbstractAsyncReturnValueHandler", "qualified_name": "org.springframework.messaging.handler.invocation.AbstractAsyncReturnValueHandler", "short_description": " Convenient base class for  AsyncHandlerMethodReturnValueHandler implementations that support only asynchronous (Future-like) return values\nand merely serve as adapters of such types to Spring's ListenableFuture . "},
{"api_id": 2369, "api_type": 2, "full_declaration": "AbstractExceptionHandlerMethodResolver", "qualified_name": "org.springframework.messaging.handler.invocation.AbstractExceptionHandlerMethodResolver", "short_description": " Cache exception handling method mappings and provide options to look up a method\nthat should handle an exception. "},
{"api_id": 2370, "api_type": 2, "full_declaration": "AbstractMethodMessageHandler", "qualified_name": "org.springframework.messaging.handler.invocation.AbstractMethodMessageHandler", "short_description": " Abstract base class for HandlerMethod-based message handling. "},
{"api_id": 2371, "api_type": 2, "full_declaration": "CompletableFutureReturnValueHandler", "qualified_name": "org.springframework.messaging.handler.invocation.CompletableFutureReturnValueHandler", "short_description": " Support for  CompletableFuture  (and as of 4.3.7 also  CompletionStage )\nas a return value type. "},
{"api_id": 2372, "api_type": 2, "full_declaration": "HandlerMethodArgumentResolverComposite", "qualified_name": "org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolverComposite", "short_description": " Resolves method parameters by delegating to a list of registered HandlerMethodArgumentResolvers . "},
{"api_id": 2373, "api_type": 2, "full_declaration": "HandlerMethodReturnValueHandlerComposite", "qualified_name": "org.springframework.messaging.handler.invocation.HandlerMethodReturnValueHandlerComposite", "short_description": " A HandlerMethodReturnValueHandler that wraps and delegates to others. "},
{"api_id": 2374, "api_type": 2, "full_declaration": "InvocableHandlerMethod", "qualified_name": "org.springframework.messaging.handler.invocation.InvocableHandlerMethod", "short_description": " Extension of  HandlerMethod  that invokes the underlying method with\nargument values resolved from the current HTTP request through a list of HandlerMethodArgumentResolver . "},
{"api_id": 2375, "api_type": 2, "full_declaration": "ListenableFutureReturnValueHandler", "qualified_name": "org.springframework.messaging.handler.invocation.ListenableFutureReturnValueHandler", "short_description": " Support for  ListenableFuture  as a return value type. "},
{"api_id": 2376, "api_type": 2, "full_declaration": "ReactiveReturnValueHandler", "qualified_name": "org.springframework.messaging.handler.invocation.ReactiveReturnValueHandler", "short_description": " Support for single-value reactive types (like  Mono  or  Single )\nas a return value type. "},
{"api_id": 2377, "api_type": 4, "full_declaration": "MethodArgumentResolutionException", "qualified_name": "org.springframework.messaging.handler.invocation.MethodArgumentResolutionException", "short_description": " Common exception resulting from the invocation of HandlerMethodArgumentResolver . "},
{"api_id": 2378, "api_type": 3, "full_declaration": "HandlerMethodArgumentResolver", "qualified_name": "org.springframework.messaging.handler.invocation.reactive.HandlerMethodArgumentResolver", "short_description": " Strategy interface for resolving method parameters into argument values\nin the context of a given  Message . "},
{"api_id": 2379, "api_type": 3, "full_declaration": "HandlerMethodReturnValueHandler", "qualified_name": "org.springframework.messaging.handler.invocation.reactive.HandlerMethodReturnValueHandler", "short_description": " Handle the return value from the invocation of an annotated  Message handling method. "},
{"api_id": 2380, "api_type": 3, "full_declaration": "SyncHandlerMethodArgumentResolver", "qualified_name": "org.springframework.messaging.handler.invocation.reactive.SyncHandlerMethodArgumentResolver", "short_description": " An extension of  HandlerMethodArgumentResolver  for implementations\nthat are synchronous in nature and do not block to resolve values. "},
{"api_id": 2381, "api_type": 2, "full_declaration": "AbstractEncoderMethodReturnValueHandler", "qualified_name": "org.springframework.messaging.handler.invocation.reactive.AbstractEncoderMethodReturnValueHandler", "short_description": " Base class for a return value handler that encodes return values to Flux<DataBuffer>  through the configured  Encoder s. "},
{"api_id": 2382, "api_type": 2, "full_declaration": "AbstractMethodMessageHandler", "qualified_name": "org.springframework.messaging.handler.invocation.reactive.AbstractMethodMessageHandler", "short_description": " Abstract base class for reactive HandlerMethod-based message handling. "},
{"api_id": 2383, "api_type": 2, "full_declaration": "ArgumentResolverConfigurer", "qualified_name": "org.springframework.messaging.handler.invocation.reactive.ArgumentResolverConfigurer", "short_description": " Assist with configuration for handler method argument resolvers. "},
{"api_id": 2384, "api_type": 2, "full_declaration": "HandlerMethodArgumentResolverComposite", "qualified_name": "org.springframework.messaging.handler.invocation.reactive.HandlerMethodArgumentResolverComposite", "short_description": " Resolves method parameters by delegating to a list of registered HandlerMethodArgumentResolvers . "},
{"api_id": 2385, "api_type": 2, "full_declaration": "HandlerMethodReturnValueHandlerComposite", "qualified_name": "org.springframework.messaging.handler.invocation.reactive.HandlerMethodReturnValueHandlerComposite", "short_description": " A HandlerMethodReturnValueHandler that wraps and delegates to others. "},
{"api_id": 2386, "api_type": 2, "full_declaration": "InvocableHandlerMethod", "qualified_name": "org.springframework.messaging.handler.invocation.reactive.InvocableHandlerMethod", "short_description": " Extension of  HandlerMethod  that invokes the underlying method with\nargument values resolved from the current HTTP request through a list of HandlerMethodArgumentResolver . "},
{"api_id": 2387, "api_type": 2, "full_declaration": "ReturnValueHandlerConfigurer", "qualified_name": "org.springframework.messaging.handler.invocation.reactive.ReturnValueHandlerConfigurer", "short_description": " Assist with configuration for handler method return value handlers. "},
{"api_id": 2388, "api_type": 3, "full_declaration": "MetadataExtractor", "qualified_name": "org.springframework.messaging.rsocket.MetadataExtractor", "short_description": " Strategy to extract a map of value(s) from  Payload  metadata, which\ncould be composite metadata with multiple entries. "},
{"api_id": 2389, "api_type": 3, "full_declaration": "MetadataExtractorRegistry", "qualified_name": "org.springframework.messaging.rsocket.MetadataExtractorRegistry", "short_description": " Stores registrations of extractors for metadata entries. "},
{"api_id": 2390, "api_type": 3, "full_declaration": "RSocketConnectorConfigurer", "qualified_name": "org.springframework.messaging.rsocket.RSocketConnectorConfigurer", "short_description": " Strategy to apply configuration to an  RSocketConnector . "},
{"api_id": 2391, "api_type": 3, "full_declaration": "RSocketRequester", "qualified_name": "org.springframework.messaging.rsocket.RSocketRequester", "short_description": " A thin wrapper around a sending  RSocket  with a fluent API accepting\nand returning higher level Objects for input and for output, along with\nmethods to prepare routing and other metadata. "},
{"api_id": 2392, "api_type": 3, "full_declaration": "RSocketRequester.Builder", "qualified_name": "org.springframework.messaging.rsocket.RSocketRequester.Builder", "short_description": " Builder to create a requester by connecting to a server. "},
{"api_id": 2393, "api_type": 3, "full_declaration": "RSocketRequester.MetadataSpec", "qualified_name": "org.springframework.messaging.rsocket.RSocketRequester.MetadataSpec", "short_description": " Spec for providing additional composite metadata entries. "},
{"api_id": 2394, "api_type": 3, "full_declaration": "RSocketRequester.RequestSpec", "qualified_name": "org.springframework.messaging.rsocket.RSocketRequester.RequestSpec", "short_description": " Spec to declare the input for an RSocket request. "},
{"api_id": 2395, "api_type": 3, "full_declaration": "RSocketRequester.RetrieveSpec", "qualified_name": "org.springframework.messaging.rsocket.RSocketRequester.RetrieveSpec", "short_description": " Spec to declare the expected output for an RSocket request. "},
{"api_id": 2396, "api_type": 3, "full_declaration": "RSocketStrategies", "qualified_name": "org.springframework.messaging.rsocket.RSocketStrategies", "short_description": " Access to strategies for use by RSocket requester and responder components. "},
{"api_id": 2397, "api_type": 3, "full_declaration": "RSocketStrategies.Builder", "qualified_name": "org.springframework.messaging.rsocket.RSocketStrategies.Builder", "short_description": " The builder options for creating  RSocketStrategies . "},
{"api_id": 2398, "api_type": 2, "full_declaration": "DefaultMetadataExtractor", "qualified_name": "org.springframework.messaging.rsocket.DefaultMetadataExtractor", "short_description": " Default  MetadataExtractor  implementation that relies on Decoder s to deserialize the content of metadata entries. "},
{"api_id": 2399, "api_type": 2, "full_declaration": "PayloadUtils", "qualified_name": "org.springframework.messaging.rsocket.PayloadUtils", "short_description": " Static utility methods to create  Payload  from  DataBuffer s\nand vice versa. "},
{"api_id": 2400, "api_type": 9, "full_declaration": "ConnectMapping", "qualified_name": "org.springframework.messaging.rsocket.annotation.ConnectMapping", "short_description": " Annotation to map the initial  ConnectionSetupPayload  and subsequent\nmetadata pushes onto a handler method. "},
{"api_id": 2401, "api_type": 2, "full_declaration": "RSocketFrameTypeMessageCondition", "qualified_name": "org.springframework.messaging.rsocket.annotation.support.RSocketFrameTypeMessageCondition", "short_description": " A condition to assist with mapping onto handler methods based on the RSocket\nframe type. "},
{"api_id": 2402, "api_type": 2, "full_declaration": "RSocketMessageHandler", "qualified_name": "org.springframework.messaging.rsocket.annotation.support.RSocketMessageHandler", "short_description": " Extension of  MessageMappingMessageHandler  for handling RSocket\nrequests with  @ConnectMapping  and @MessageMapping  methods. "},
{"api_id": 2403, "api_type": 2, "full_declaration": "RSocketPayloadReturnValueHandler", "qualified_name": "org.springframework.messaging.rsocket.annotation.support.RSocketPayloadReturnValueHandler", "short_description": " Extension of  AbstractEncoderMethodReturnValueHandler  that handles  encoded content by wrapping data buffers\nas RSocket payloads and by passing those through the  RSocketPayloadReturnValueHandler.RESPONSE_HEADER header. "},
{"api_id": 2404, "api_type": 2, "full_declaration": "RSocketRequesterMethodArgumentResolver", "qualified_name": "org.springframework.messaging.rsocket.annotation.support.RSocketRequesterMethodArgumentResolver", "short_description": " Resolves arguments of type  RSocket  that can be used for making\nrequests to the remote peer. "},
{"api_id": 2405, "api_type": 3, "full_declaration": "SimpMessageSendingOperations", "qualified_name": "org.springframework.messaging.simp.SimpMessageSendingOperations", "short_description": " A specialization of  MessageSendingOperations  with methods for use with\nthe Spring Framework support for Simple Messaging Protocols (like STOMP). "},
{"api_id": 2406, "api_type": 2, "full_declaration": "SimpAttributes", "qualified_name": "org.springframework.messaging.simp.SimpAttributes", "short_description": " A wrapper class for access to attributes associated with a SiMP session\n(e.g. "},
{"api_id": 2407, "api_type": 2, "full_declaration": "SimpAttributesContextHolder", "qualified_name": "org.springframework.messaging.simp.SimpAttributesContextHolder", "short_description": " Holder class to expose SiMP attributes associated with a session (e.g. "},
{"api_id": 2408, "api_type": 2, "full_declaration": "SimpLogging", "qualified_name": "org.springframework.messaging.simp.SimpLogging", "short_description": " Holds the shared logger named \"org.springframework.web.SimpLogging\" to use\nfor STOMP over WebSocket messaging when logging for\n\"org.springframework.messaging.simp\" is off but logging for\n\"org.springframework.web\" is on. "},
{"api_id": 2409, "api_type": 2, "full_declaration": "SimpMessageHeaderAccessor", "qualified_name": "org.springframework.messaging.simp.SimpMessageHeaderAccessor", "short_description": " A base class for working with message headers in simple messaging protocols that\nsupport basic messaging patterns. "},
{"api_id": 2410, "api_type": 2, "full_declaration": "SimpMessageMappingInfo", "qualified_name": "org.springframework.messaging.simp.SimpMessageMappingInfo", "short_description": " MessageCondition  for SImple Messaging Protocols. "},
{"api_id": 2411, "api_type": 2, "full_declaration": "SimpMessageTypeMessageCondition", "qualified_name": "org.springframework.messaging.simp.SimpMessageTypeMessageCondition", "short_description": " MessageCondition  that matches by the message type obtained via SimpMessageHeaderAccessor.getMessageType(Map) . "},
{"api_id": 2412, "api_type": 2, "full_declaration": "SimpMessagingTemplate", "qualified_name": "org.springframework.messaging.simp.SimpMessagingTemplate", "short_description": " An implementation of SimpMessageSendingOperations . "},
{"api_id": 2413, "api_type": 2, "full_declaration": "SimpSessionScope", "qualified_name": "org.springframework.messaging.simp.SimpSessionScope", "short_description": " A  Scope  implementation exposing the attributes of a SiMP session\n(e.g. "},
{"api_id": 2414, "api_type": 8, "full_declaration": "SimpMessageType", "qualified_name": "org.springframework.messaging.simp.SimpMessageType", "short_description": " A generic representation of different kinds of messages found in simple messaging\nprotocols like STOMP. "},
{"api_id": 2415, "api_type": 9, "full_declaration": "SendToUser", "qualified_name": "org.springframework.messaging.simp.annotation.SendToUser", "short_description": " Indicates the return value of a message-handling method should be sent as a Message  to the specified destination(s)\nfurther prepended with  \"/user/{username}\"  where the user name\nis extracted from the headers of the input message being handled. "},
{"api_id": 2416, "api_type": 9, "full_declaration": "SubscribeMapping", "qualified_name": "org.springframework.messaging.simp.annotation.SubscribeMapping", "short_description": " Annotation for mapping subscription messages onto specific handler methods based\non the destination of a subscription. "},
{"api_id": 2417, "api_type": 2, "full_declaration": "PrincipalMethodArgumentResolver", "qualified_name": "org.springframework.messaging.simp.annotation.support.PrincipalMethodArgumentResolver", "short_description": " Resolver for arguments of type  Principal , including  Optional<Principal> . "},
{"api_id": 2418, "api_type": 2, "full_declaration": "SendToMethodReturnValueHandler", "qualified_name": "org.springframework.messaging.simp.annotation.support.SendToMethodReturnValueHandler", "short_description": " A  HandlerMethodReturnValueHandler  for sending to destinations specified in a SendTo  or  SendToUser  method-level annotations. "},
{"api_id": 2419, "api_type": 2, "full_declaration": "SimpAnnotationMethodMessageHandler", "qualified_name": "org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler", "short_description": " A handler for messages delegating to  @MessageMapping and  @SubscribeMapping  annotated methods. "},
{"api_id": 2420, "api_type": 2, "full_declaration": "SubscriptionMethodReturnValueHandler", "qualified_name": "org.springframework.messaging.simp.annotation.support.SubscriptionMethodReturnValueHandler", "short_description": " HandlerMethodReturnValueHandler  for replying directly to a\nsubscription. "},
{"api_id": 2421, "api_type": 4, "full_declaration": "MissingSessionUserException", "qualified_name": "org.springframework.messaging.simp.annotation.support.MissingSessionUserException", "short_description": " MessagingException  thrown when a session is missing. "},
{"api_id": 2422, "api_type": 3, "full_declaration": "SubscriptionRegistry", "qualified_name": "org.springframework.messaging.simp.broker.SubscriptionRegistry", "short_description": " A registry of subscription by session that allows looking up subscriptions. "},
{"api_id": 2423, "api_type": 2, "full_declaration": "AbstractBrokerMessageHandler", "qualified_name": "org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler", "short_description": " Abstract base class for a  MessageHandler  that broker messages to\nregistered subscribers. "},
{"api_id": 2424, "api_type": 2, "full_declaration": "AbstractSubscriptionRegistry", "qualified_name": "org.springframework.messaging.simp.broker.AbstractSubscriptionRegistry", "short_description": " Abstract base class for implementations of  SubscriptionRegistry  that\nlooks up information in messages but delegates to abstract methods for the\nactual storage and retrieval. "},
{"api_id": 2425, "api_type": 2, "full_declaration": "BrokerAvailabilityEvent", "qualified_name": "org.springframework.messaging.simp.broker.BrokerAvailabilityEvent", "short_description": " Event raised when a broker's availability changes. "},
{"api_id": 2426, "api_type": 2, "full_declaration": "DefaultSubscriptionRegistry", "qualified_name": "org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry", "short_description": " Implementation of  SubscriptionRegistry  that stores subscriptions\nin memory and uses a  PathMatcher for matching destinations. "},
{"api_id": 2427, "api_type": 2, "full_declaration": "OrderedMessageChannelDecorator", "qualified_name": "org.springframework.messaging.simp.broker.OrderedMessageChannelDecorator", "short_description": " Decorator for an  ExecutorSubscribableChannel  that ensures messages\nare processed in the order they were published to the channel. "},
{"api_id": 2428, "api_type": 2, "full_declaration": "SimpleBrokerMessageHandler", "qualified_name": "org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler", "short_description": " A \"simple\" message broker that recognizes the message types defined in SimpMessageType , keeps track of subscriptions with the help of a SubscriptionRegistry  and sends messages to subscribers. "},
{"api_id": 2429, "api_type": 2, "full_declaration": "AbstractBrokerRegistration", "qualified_name": "org.springframework.messaging.simp.config.AbstractBrokerRegistration", "short_description": " Base class for message broker registration classes. "},
{"api_id": 2430, "api_type": 2, "full_declaration": "AbstractMessageBrokerConfiguration", "qualified_name": "org.springframework.messaging.simp.config.AbstractMessageBrokerConfiguration", "short_description": " Provides essential configuration for handling messages with simple messaging\nprotocols such as STOMP. "},
{"api_id": 2431, "api_type": 2, "full_declaration": "ChannelRegistration", "qualified_name": "org.springframework.messaging.simp.config.ChannelRegistration", "short_description": " A registration class for customizing the configuration for a MessageChannel . "},
{"api_id": 2432, "api_type": 2, "full_declaration": "MessageBrokerRegistry", "qualified_name": "org.springframework.messaging.simp.config.MessageBrokerRegistry", "short_description": " A registry for configuring message broker options. "},
{"api_id": 2433, "api_type": 2, "full_declaration": "SimpleBrokerRegistration", "qualified_name": "org.springframework.messaging.simp.config.SimpleBrokerRegistration", "short_description": " Registration class for configuring a  SimpleBrokerMessageHandler . "},
{"api_id": 2434, "api_type": 2, "full_declaration": "StompBrokerRelayRegistration", "qualified_name": "org.springframework.messaging.simp.config.StompBrokerRelayRegistration", "short_description": " Registration class for configuring a  StompBrokerRelayMessageHandler . "},
{"api_id": 2435, "api_type": 2, "full_declaration": "TaskExecutorRegistration", "qualified_name": "org.springframework.messaging.simp.config.TaskExecutorRegistration", "short_description": " A registration class for customizing the properties of  ThreadPoolTaskExecutor . "},
{"api_id": 2436, "api_type": 3, "full_declaration": "ConnectionHandlingStompSession", "qualified_name": "org.springframework.messaging.simp.stomp.ConnectionHandlingStompSession", "short_description": " A  StompSession  that implements TcpConnectionHandler  in order to send and receive messages. "},
{"api_id": 2437, "api_type": 3, "full_declaration": "StompBrokerRelayMessageHandler.Stats", "qualified_name": "org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler.Stats", "short_description": " Contract for access to session counters. "},
{"api_id": 2438, "api_type": 3, "full_declaration": "StompFrameHandler", "qualified_name": "org.springframework.messaging.simp.stomp.StompFrameHandler", "short_description": " Contract to handle a STOMP frame. "},
{"api_id": 2439, "api_type": 3, "full_declaration": "StompSession", "qualified_name": "org.springframework.messaging.simp.stomp.StompSession", "short_description": " Represents a STOMP session with operations to send messages,\ncreate subscriptions and receive messages on those subscriptions. "},
{"api_id": 2440, "api_type": 3, "full_declaration": "StompSession.Receiptable", "qualified_name": "org.springframework.messaging.simp.stomp.StompSession.Receiptable", "short_description": " A handle to use to track receipts. "},
{"api_id": 2441, "api_type": 3, "full_declaration": "StompSession.Subscription", "qualified_name": "org.springframework.messaging.simp.stomp.StompSession.Subscription", "short_description": " A handle to use to unsubscribe or to track a receipt. "},
{"api_id": 2442, "api_type": 3, "full_declaration": "StompSessionHandler", "qualified_name": "org.springframework.messaging.simp.stomp.StompSessionHandler", "short_description": " A contract for client STOMP session lifecycle events including a callback\nwhen the session is established and notifications of transport or message\nhandling failures. "},
{"api_id": 2443, "api_type": 3, "full_declaration": "StompTcpConnectionHandler", "qualified_name": "org.springframework.messaging.simp.stomp.StompTcpConnectionHandler", "short_description": " A  TcpConnectionHandler  for use with STOMP connections, exposing\nfurther information about the connection. "},
{"api_id": 2444, "api_type": 2, "full_declaration": "BufferingStompDecoder", "qualified_name": "org.springframework.messaging.simp.stomp.BufferingStompDecoder", "short_description": " An extension of  StompDecoder that buffers content remaining in the input ByteBuffer after the parent\nclass has read all (complete) STOMP frames from it. "},
{"api_id": 2445, "api_type": 2, "full_declaration": "DefaultStompSession", "qualified_name": "org.springframework.messaging.simp.stomp.DefaultStompSession", "short_description": " Default implementation of  ConnectionHandlingStompSession . "},
{"api_id": 2446, "api_type": 2, "full_declaration": "ReactorNettyTcpStompClient", "qualified_name": "org.springframework.messaging.simp.stomp.ReactorNettyTcpStompClient", "short_description": " A STOMP over TCP client that uses  ReactorNettyTcpClient . "},
{"api_id": 2447, "api_type": 2, "full_declaration": "StompBrokerRelayMessageHandler", "qualified_name": "org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler", "short_description": " A  MessageHandler  that handles messages by\nforwarding them to a STOMP broker. "},
{"api_id": 2448, "api_type": 2, "full_declaration": "StompClientSupport", "qualified_name": "org.springframework.messaging.simp.stomp.StompClientSupport", "short_description": " Base class for STOMP client implementations. "},
{"api_id": 2449, "api_type": 2, "full_declaration": "StompDecoder", "qualified_name": "org.springframework.messaging.simp.stomp.StompDecoder", "short_description": " Decodes one or more STOMP frames contained in a  ByteBuffer . "},
{"api_id": 2450, "api_type": 2, "full_declaration": "StompEncoder", "qualified_name": "org.springframework.messaging.simp.stomp.StompEncoder", "short_description": " An encoder for STOMP frames. "},
{"api_id": 2451, "api_type": 2, "full_declaration": "StompHeaderAccessor", "qualified_name": "org.springframework.messaging.simp.stomp.StompHeaderAccessor", "short_description": " A  MessageHeaderAccessor  to use when creating a  Message  from\na decoded STOMP frame, or when encoding a  Message  to a STOMP frame. "},
{"api_id": 2452, "api_type": 2, "full_declaration": "StompHeaders", "qualified_name": "org.springframework.messaging.simp.stomp.StompHeaders", "short_description": " Represents STOMP frame headers. "},
{"api_id": 2453, "api_type": 2, "full_declaration": "StompReactorNettyCodec", "qualified_name": "org.springframework.messaging.simp.stomp.StompReactorNettyCodec", "short_description": " Simple delegation to StompDecoder and StompEncoder. "},
{"api_id": 2454, "api_type": 2, "full_declaration": "StompSessionHandlerAdapter", "qualified_name": "org.springframework.messaging.simp.stomp.StompSessionHandlerAdapter", "short_description": " Abstract adapter class for  StompSessionHandler  with mostly empty\nimplementation methods except for  StompSessionHandlerAdapter.getPayloadType(org.springframework.messaging.simp.stomp.StompHeaders)  which returns String\nas the default Object type expected for STOMP ERROR frame payloads. "},
{"api_id": 2455, "api_type": 8, "full_declaration": "StompCommand", "qualified_name": "org.springframework.messaging.simp.stomp.StompCommand", "short_description": " Represents a STOMP command. "},
{"api_id": 2456, "api_type": 4, "full_declaration": "ConnectionLostException", "qualified_name": "org.springframework.messaging.simp.stomp.ConnectionLostException", "short_description": " Raised when the connection for a STOMP session is lost rather than closed. "},
{"api_id": 2457, "api_type": 4, "full_declaration": "StompConversionException", "qualified_name": "org.springframework.messaging.simp.stomp.StompConversionException", "short_description": " Raised after a failure to encode or decode a STOMP message. "},
{"api_id": 2458, "api_type": 3, "full_declaration": "DestinationUserNameProvider", "qualified_name": "org.springframework.messaging.simp.user.DestinationUserNameProvider", "short_description": " A  Principal  can also implement this contract when getName()  isn't globally unique\nand therefore not suited for use with \"user\" destinations. "},
{"api_id": 2459, "api_type": 3, "full_declaration": "SimpSession", "qualified_name": "org.springframework.messaging.simp.user.SimpSession", "short_description": " Represents a session of connected user. "},
{"api_id": 2460, "api_type": 3, "full_declaration": "SimpSubscription", "qualified_name": "org.springframework.messaging.simp.user.SimpSubscription", "short_description": " Represents a subscription within a user session. "},
{"api_id": 2461, "api_type": 3, "full_declaration": "SimpSubscriptionMatcher", "qualified_name": "org.springframework.messaging.simp.user.SimpSubscriptionMatcher", "short_description": " A strategy for matching subscriptions. "},
{"api_id": 2462, "api_type": 3, "full_declaration": "SimpUser", "qualified_name": "org.springframework.messaging.simp.user.SimpUser", "short_description": " Represents a connected user. "},
{"api_id": 2463, "api_type": 3, "full_declaration": "SimpUserRegistry", "qualified_name": "org.springframework.messaging.simp.user.SimpUserRegistry", "short_description": " A registry of currently connected users. "},
{"api_id": 2464, "api_type": 3, "full_declaration": "UserDestinationResolver", "qualified_name": "org.springframework.messaging.simp.user.UserDestinationResolver", "short_description": " A strategy for resolving a \"user\" destination by translating it to one or more\nactual destinations one per active user session. "},
{"api_id": 2465, "api_type": 2, "full_declaration": "DefaultUserDestinationResolver", "qualified_name": "org.springframework.messaging.simp.user.DefaultUserDestinationResolver", "short_description": " A default implementation of  UserDestinationResolver  that relies\non a  SimpUserRegistry  to find active sessions for a user. "},
{"api_id": 2466, "api_type": 2, "full_declaration": "MultiServerUserRegistry", "qualified_name": "org.springframework.messaging.simp.user.MultiServerUserRegistry", "short_description": " SimpUserRegistry  that looks up users in a \"local\" user registry as\nwell as a set of \"remote\" user registries. "},
{"api_id": 2467, "api_type": 2, "full_declaration": "UserDestinationMessageHandler", "qualified_name": "org.springframework.messaging.simp.user.UserDestinationMessageHandler", "short_description": " MessageHandler  with support for \"user\" destinations. "},
{"api_id": 2468, "api_type": 2, "full_declaration": "UserDestinationResult", "qualified_name": "org.springframework.messaging.simp.user.UserDestinationResult", "short_description": " Contains the result from parsing a \"user\" destination from a source message\nand translating it to target destinations (one per active user session). "},
{"api_id": 2469, "api_type": 2, "full_declaration": "UserRegistryMessageHandler", "qualified_name": "org.springframework.messaging.simp.user.UserRegistryMessageHandler", "short_description": " MessageHandler  that handles user registry broadcasts from other\napplication servers and periodically broadcasts the content of the local\nuser registry. "},
{"api_id": 2470, "api_type": 3, "full_declaration": "ChannelInterceptor", "qualified_name": "org.springframework.messaging.support.ChannelInterceptor", "short_description": " Interface for interceptors that are able to view and/or modify the Messages  being sent-to and/or received-from a MessageChannel . "},
{"api_id": 2471, "api_type": 3, "full_declaration": "ExecutorChannelInterceptor", "qualified_name": "org.springframework.messaging.support.ExecutorChannelInterceptor", "short_description": " An extension of  ChannelInterceptor  with callbacks to intercept the\nasynchronous sending of a  Message  to\na specific subscriber through an  Executor . "},
{"api_id": 2472, "api_type": 3, "full_declaration": "HeaderMapper", "qualified_name": "org.springframework.messaging.support.HeaderMapper", "short_description": " Generic strategy interface for mapping  MessageHeaders  to and from other\ntypes of objects. "},
{"api_id": 2473, "api_type": 3, "full_declaration": "InterceptableChannel", "qualified_name": "org.springframework.messaging.support.InterceptableChannel", "short_description": " A  MessageChannel  that\nmaintains a list  ChannelInterceptors  and allows interception of message sending. "},
{"api_id": 2474, "api_type": 3, "full_declaration": "MessageHandlingRunnable", "qualified_name": "org.springframework.messaging.support.MessageHandlingRunnable", "short_description": " Extension of the  Runnable  interface with methods to obtain the MessageHandler  and  Message  to be handled. "},
{"api_id": 2475, "api_type": 3, "full_declaration": "MessageHeaderInitializer", "qualified_name": "org.springframework.messaging.support.MessageHeaderInitializer", "short_description": " Callback interface for initializing a  MessageHeaderAccessor . "},
{"api_id": 2476, "api_type": 2, "full_declaration": "AbstractHeaderMapper", "qualified_name": "org.springframework.messaging.support.AbstractHeaderMapper", "short_description": " A base  HeaderMapper  implementation. "},
{"api_id": 2477, "api_type": 2, "full_declaration": "AbstractMessageChannel", "qualified_name": "org.springframework.messaging.support.AbstractMessageChannel", "short_description": " Abstract base class for  MessageChannel  implementations. "},
{"api_id": 2478, "api_type": 2, "full_declaration": "AbstractSubscribableChannel", "qualified_name": "org.springframework.messaging.support.AbstractSubscribableChannel", "short_description": " Abstract base class for  SubscribableChannel  implementations. "},
{"api_id": 2479, "api_type": 2, "full_declaration": "ChannelInterceptorAdapter", "qualified_name": "org.springframework.messaging.support.ChannelInterceptorAdapter", "short_description": "Deprecated as of 5.0.7  ChannelInterceptor  has default methods (made\npossible by a Java 8 baseline) and can be implemented directly without the\nneed for this no-op adapter "},
{"api_id": 2480, "api_type": 2, "full_declaration": "ErrorMessage", "qualified_name": "org.springframework.messaging.support.ErrorMessage", "short_description": " A  GenericMessage  with a  Throwable  payload. "},
{"api_id": 2481, "api_type": 2, "full_declaration": "ExecutorSubscribableChannel", "qualified_name": "org.springframework.messaging.support.ExecutorSubscribableChannel", "short_description": " A  SubscribableChannel  that sends messages to each of its subscribers. "},
{"api_id": 2482, "api_type": 2, "full_declaration": "GenericMessage", "qualified_name": "org.springframework.messaging.support.GenericMessage", "short_description": " An implementation of  Message  with a generic payload. "},
{"api_id": 2483, "api_type": 2, "full_declaration": "IdTimestampMessageHeaderInitializer", "qualified_name": "org.springframework.messaging.support.IdTimestampMessageHeaderInitializer", "short_description": " A  MessageHeaderInitializer to customize the strategy for ID and TIMESTAMP message header generation. "},
{"api_id": 2484, "api_type": 2, "full_declaration": "ImmutableMessageChannelInterceptor", "qualified_name": "org.springframework.messaging.support.ImmutableMessageChannelInterceptor", "short_description": " A simpler interceptor that calls  MessageHeaderAccessor.setImmutable() on the headers of messages passed through the preSend method. "},
{"api_id": 2485, "api_type": 2, "full_declaration": "MessageBuilder", "qualified_name": "org.springframework.messaging.support.MessageBuilder", "short_description": " A builder for creating a  GenericMessage (or  ErrorMessage  if the payload is of type  Throwable ). "},
{"api_id": 2486, "api_type": 2, "full_declaration": "MessageHeaderAccessor", "qualified_name": "org.springframework.messaging.support.MessageHeaderAccessor", "short_description": " Wrapper around  MessageHeaders  that provides extra features such as\nstrongly typed accessors for specific headers, the ability to leave headers\nin a  Message  mutable, and the option to suppress automatic generation\nof  id  and  timesteamp  headers. "},
{"api_id": 2487, "api_type": 2, "full_declaration": "NativeMessageHeaderAccessor", "qualified_name": "org.springframework.messaging.support.NativeMessageHeaderAccessor", "short_description": " MessageHeaderAccessor  sub-class that supports storage and access of\nheaders from an external source such as a message broker. "},
{"api_id": 2488, "api_type": 3, "full_declaration": "ReconnectStrategy", "qualified_name": "org.springframework.messaging.tcp.ReconnectStrategy", "short_description": " A contract to determine the frequency of reconnect attempts after connection failure. "},
{"api_id": 2489, "api_type": 3, "full_declaration": "TcpConnection", "qualified_name": "org.springframework.messaging.tcp.TcpConnection", "short_description": " A contract for sending messages and managing a TCP connection. "},
{"api_id": 2490, "api_type": 3, "full_declaration": "TcpConnectionHandler", "qualified_name": "org.springframework.messaging.tcp.TcpConnectionHandler", "short_description": " A contract for managing lifecycle events for a TCP connection including\nthe handling of incoming messages. "},
{"api_id": 2491, "api_type": 3, "full_declaration": "TcpOperations", "qualified_name": "org.springframework.messaging.tcp.TcpOperations", "short_description": " A contract for establishing TCP connections. "},
{"api_id": 2492, "api_type": 2, "full_declaration": "FixedIntervalReconnectStrategy", "qualified_name": "org.springframework.messaging.tcp.FixedIntervalReconnectStrategy", "short_description": " A simple strategy for making reconnect attempts at a fixed interval. "},
{"api_id": 2493, "api_type": 3, "full_declaration": "ReactorNettyCodec", "qualified_name": "org.springframework.messaging.tcp.reactor.ReactorNettyCodec", "short_description": " Simple holder for a decoding  Function  and an encoding BiConsumer  to use with Reactor Netty. "},
{"api_id": 2494, "api_type": 2, "full_declaration": "AbstractNioBufferReactorNettyCodec", "qualified_name": "org.springframework.messaging.tcp.reactor.AbstractNioBufferReactorNettyCodec", "short_description": " Convenient base class for  ReactorNettyCodec  implementations that need\nto work with NIO  ByteBuffers . "},
{"api_id": 2495, "api_type": 2, "full_declaration": "ReactorNettyTcpClient", "qualified_name": "org.springframework.messaging.tcp.reactor.ReactorNettyTcpClient", "short_description": " Reactor Netty based implementation of  TcpOperations . "},
{"api_id": 2496, "api_type": 2, "full_declaration": "ReactorNettyTcpConnection", "qualified_name": "org.springframework.messaging.tcp.reactor.ReactorNettyTcpConnection", "short_description": " Reactor Netty based implementation of  TcpConnection . "},
{"api_id": 2497, "api_type": 2, "full_declaration": "MockEnvironment", "qualified_name": "org.springframework.mock.env.MockEnvironment", "short_description": " Simple  ConfigurableEnvironment  implementation exposing\n  MockEnvironment.setProperty(String, String)  and  MockEnvironment.withProperty(String, String) methods for testing purposes. "},
{"api_id": 2498, "api_type": 2, "full_declaration": "MockPropertySource", "qualified_name": "org.springframework.mock.env.MockPropertySource", "short_description": " Simple  PropertySource  implementation for use in testing. "},
{"api_id": 2499, "api_type": 2, "full_declaration": "MockHttpInputMessage", "qualified_name": "org.springframework.mock.http.MockHttpInputMessage", "short_description": " Mock implementation of  HttpInputMessage . "},
{"api_id": 2500, "api_type": 2, "full_declaration": "MockHttpOutputMessage", "qualified_name": "org.springframework.mock.http.MockHttpOutputMessage", "short_description": " Mock implementation of  HttpOutputMessage . "},
{"api_id": 2501, "api_type": 2, "full_declaration": "MockAsyncClientHttpRequest", "qualified_name": "org.springframework.mock.http.client.MockAsyncClientHttpRequest", "short_description": "Deprecated as of Spring 5.0, with no direct replacement "},
{"api_id": 2502, "api_type": 2, "full_declaration": "MockClientHttpRequest", "qualified_name": "org.springframework.mock.http.client.MockClientHttpRequest", "short_description": " Mock implementation of  ClientHttpRequest . "},
{"api_id": 2503, "api_type": 2, "full_declaration": "MockClientHttpResponse", "qualified_name": "org.springframework.mock.http.client.MockClientHttpResponse", "short_description": " Mock implementation of  ClientHttpResponse . "},
{"api_id": 2504, "api_type": 2, "full_declaration": "MockClientHttpRequest", "qualified_name": "org.springframework.mock.http.client.reactive.MockClientHttpRequest", "short_description": " Mock implementation of  ClientHttpRequest . "},
{"api_id": 2505, "api_type": 2, "full_declaration": "MockClientHttpResponse", "qualified_name": "org.springframework.mock.http.client.reactive.MockClientHttpResponse", "short_description": " Mock implementation of  ClientHttpResponse . "},
{"api_id": 2506, "api_type": 3, "full_declaration": "MockServerHttpRequest.BaseBuilder", "qualified_name": "org.springframework.mock.http.server.reactive.MockServerHttpRequest.BaseBuilder", "short_description": " Request builder exposing properties not related to the body. "},
{"api_id": 2507, "api_type": 3, "full_declaration": "MockServerHttpRequest.BodyBuilder", "qualified_name": "org.springframework.mock.http.server.reactive.MockServerHttpRequest.BodyBuilder", "short_description": " A builder that adds a body to the request. "},
{"api_id": 2508, "api_type": 2, "full_declaration": "MockServerHttpRequest", "qualified_name": "org.springframework.mock.http.server.reactive.MockServerHttpRequest", "short_description": " Mock extension of  AbstractServerHttpRequest  for use in tests without\nan actual server. "},
{"api_id": 2509, "api_type": 2, "full_declaration": "MockServerHttpResponse", "qualified_name": "org.springframework.mock.http.server.reactive.MockServerHttpResponse", "short_description": " Mock extension of  AbstractServerHttpResponse  for use in tests without\nan actual server. "},
{"api_id": 2510, "api_type": 2, "full_declaration": "ExpectedLookupTemplate", "qualified_name": "org.springframework.mock.jndi.ExpectedLookupTemplate", "short_description": "Deprecated Deprecated as of Spring Framework 5.2 in favor of complete solutions from\nthird parties such as  Simple-JNDI "},
{"api_id": 2511, "api_type": 2, "full_declaration": "SimpleNamingContext", "qualified_name": "org.springframework.mock.jndi.SimpleNamingContext", "short_description": "Deprecated Deprecated as of Spring Framework 5.2 in favor of complete solutions from\nthird parties such as  Simple-JNDI "},
{"api_id": 2512, "api_type": 2, "full_declaration": "SimpleNamingContextBuilder", "qualified_name": "org.springframework.mock.jndi.SimpleNamingContextBuilder", "short_description": "Deprecated Deprecated as of Spring Framework 5.2 in favor of complete solutions from\nthird parties such as  Simple-JNDI "},
{"api_id": 2513, "api_type": 2, "full_declaration": "DelegatingServletInputStream", "qualified_name": "org.springframework.mock.web.DelegatingServletInputStream", "short_description": " Delegating implementation of  ServletInputStream . "},
{"api_id": 2514, "api_type": 2, "full_declaration": "DelegatingServletOutputStream", "qualified_name": "org.springframework.mock.web.DelegatingServletOutputStream", "short_description": " Delegating implementation of  ServletOutputStream . "},
{"api_id": 2515, "api_type": 2, "full_declaration": "MockAsyncContext", "qualified_name": "org.springframework.mock.web.MockAsyncContext", "short_description": " Mock implementation of the  AsyncContext  interface. "},
{"api_id": 2516, "api_type": 2, "full_declaration": "MockBodyContent", "qualified_name": "org.springframework.mock.web.MockBodyContent", "short_description": " Mock implementation of the  BodyContent  class. "},
{"api_id": 2517, "api_type": 2, "full_declaration": "MockCookie", "qualified_name": "org.springframework.mock.web.MockCookie", "short_description": " Extension of  Cookie  with extra attributes, as defined in RFC 6265 . "},
{"api_id": 2518, "api_type": 2, "full_declaration": "MockExpressionEvaluator", "qualified_name": "org.springframework.mock.web.MockExpressionEvaluator", "short_description": " Mock implementation of the JSP 2.0  ExpressionEvaluator interface, delegating to the Apache JSTL  ExpressionEvaluatorManager . "},
{"api_id": 2519, "api_type": 2, "full_declaration": "MockFilterChain", "qualified_name": "org.springframework.mock.web.MockFilterChain", "short_description": " Mock implementation of the  FilterChain  interface. "},
{"api_id": 2520, "api_type": 2, "full_declaration": "MockFilterConfig", "qualified_name": "org.springframework.mock.web.MockFilterConfig", "short_description": " Mock implementation of the  FilterConfig  interface. "},
{"api_id": 2521, "api_type": 2, "full_declaration": "MockHttpServletRequest", "qualified_name": "org.springframework.mock.web.MockHttpServletRequest", "short_description": " Mock implementation of the  HttpServletRequest  interface. "},
{"api_id": 2522, "api_type": 2, "full_declaration": "MockHttpServletResponse", "qualified_name": "org.springframework.mock.web.MockHttpServletResponse", "short_description": " Mock implementation of the  HttpServletResponse  interface. "},
{"api_id": 2523, "api_type": 2, "full_declaration": "MockHttpSession", "qualified_name": "org.springframework.mock.web.MockHttpSession", "short_description": " Mock implementation of the  HttpSession  interface. "},
{"api_id": 2524, "api_type": 2, "full_declaration": "MockJspWriter", "qualified_name": "org.springframework.mock.web.MockJspWriter", "short_description": " Mock implementation of the  JspWriter  class. "},
{"api_id": 2525, "api_type": 2, "full_declaration": "MockMultipartFile", "qualified_name": "org.springframework.mock.web.MockMultipartFile", "short_description": " Mock implementation of the  MultipartFile interface. "},
{"api_id": 2526, "api_type": 2, "full_declaration": "MockMultipartHttpServletRequest", "qualified_name": "org.springframework.mock.web.MockMultipartHttpServletRequest", "short_description": " Mock implementation of the MultipartHttpServletRequest  interface. "},
{"api_id": 2527, "api_type": 2, "full_declaration": "MockPageContext", "qualified_name": "org.springframework.mock.web.MockPageContext", "short_description": " Mock implementation of the  PageContext  interface. "},
{"api_id": 2528, "api_type": 2, "full_declaration": "MockPart", "qualified_name": "org.springframework.mock.web.MockPart", "short_description": " Mock implementation of  javax.servlet.http.Part . "},
{"api_id": 2529, "api_type": 2, "full_declaration": "MockRequestDispatcher", "qualified_name": "org.springframework.mock.web.MockRequestDispatcher", "short_description": " Mock implementation of the  RequestDispatcher  interface. "},
{"api_id": 2530, "api_type": 2, "full_declaration": "MockServletConfig", "qualified_name": "org.springframework.mock.web.MockServletConfig", "short_description": " Mock implementation of the  ServletConfig  interface. "},
{"api_id": 2531, "api_type": 2, "full_declaration": "MockServletContext", "qualified_name": "org.springframework.mock.web.MockServletContext", "short_description": " Mock implementation of the  ServletContext  interface. "},
{"api_id": 2532, "api_type": 2, "full_declaration": "MockSessionCookieConfig", "qualified_name": "org.springframework.mock.web.MockSessionCookieConfig", "short_description": " Mock implementation of the  SessionCookieConfig  interface. "},
{"api_id": 2533, "api_type": 2, "full_declaration": "PassThroughFilterChain", "qualified_name": "org.springframework.mock.web.PassThroughFilterChain", "short_description": " Implementation of the  FilterConfig  interface which\nsimply passes the call through to a given Filter/FilterChain combination\n(indicating the next Filter in the chain along with the FilterChain that it is\nsupposed to work on) or to a given Servlet (indicating the end of the chain). "},
{"api_id": 2534, "api_type": 3, "full_declaration": "MockServerRequest.Builder", "qualified_name": "org.springframework.mock.web.reactive.function.server.MockServerRequest.Builder", "short_description": " Builder for  MockServerRequest . "},
{"api_id": 2535, "api_type": 2, "full_declaration": "MockServerRequest", "qualified_name": "org.springframework.mock.web.reactive.function.server.MockServerRequest", "short_description": " Mock implementation of  ServerRequest . "},
{"api_id": 2536, "api_type": 2, "full_declaration": "MockServerWebExchange", "qualified_name": "org.springframework.mock.web.server.MockServerWebExchange", "short_description": " Extension of  DefaultServerWebExchange  for use in tests, along with MockServerHttpRequest  and  MockServerHttpResponse . "},
{"api_id": 2537, "api_type": 2, "full_declaration": "MockServerWebExchange.Builder", "qualified_name": "org.springframework.mock.web.server.MockServerWebExchange.Builder", "short_description": " Builder for a  MockServerWebExchange . "},
{"api_id": 2538, "api_type": 2, "full_declaration": "MockWebSession", "qualified_name": "org.springframework.mock.web.server.MockWebSession", "short_description": " Implementation of  WebSession  that delegates to a session instance\nobtained via  InMemoryWebSessionStore . "},
{"api_id": 2539, "api_type": 2, "full_declaration": "SpringObjenesis", "qualified_name": "org.springframework.objenesis.SpringObjenesis", "short_description": " Spring-specific variant of  ObjenesisStd  /  ObjenesisBase ,\nproviding a cache based on  Class  keys instead of class names,\nand allowing for selective use of the cache. "},
{"api_id": 2540, "api_type": 4, "full_declaration": "ObjectOptimisticLockingFailureException", "qualified_name": "org.springframework.orm.ObjectOptimisticLockingFailureException", "short_description": " Exception thrown on an optimistic locking violation for a mapped object. "},
{"api_id": 2541, "api_type": 4, "full_declaration": "ObjectRetrievalFailureException", "qualified_name": "org.springframework.orm.ObjectRetrievalFailureException", "short_description": " Exception thrown if a mapped object could not be retrieved via its identifier. "},
{"api_id": 2542, "api_type": 3, "full_declaration": "HibernateCallback", "qualified_name": "org.springframework.orm.hibernate5.HibernateCallback", "short_description": " Callback interface for Hibernate code. "},
{"api_id": 2543, "api_type": 3, "full_declaration": "HibernateOperations", "qualified_name": "org.springframework.orm.hibernate5.HibernateOperations", "short_description": " Interface that specifies a common set of Hibernate operations as well as\na general  HibernateOperations.execute(org.springframework.orm.hibernate5.HibernateCallback<T>)  method for Session-based lambda expressions. "},
{"api_id": 2544, "api_type": 2, "full_declaration": "HibernateExceptionTranslator", "qualified_name": "org.springframework.orm.hibernate5.HibernateExceptionTranslator", "short_description": " PersistenceExceptionTranslator  capable of translating  HibernateException instances to Spring's  DataAccessException  hierarchy. "},
{"api_id": 2545, "api_type": 2, "full_declaration": "HibernateTemplate", "qualified_name": "org.springframework.orm.hibernate5.HibernateTemplate", "short_description": " Helper class that simplifies Hibernate data access code. "},
{"api_id": 2546, "api_type": 2, "full_declaration": "HibernateTransactionManager", "qualified_name": "org.springframework.orm.hibernate5.HibernateTransactionManager", "short_description": " PlatformTransactionManager implementation for a single Hibernate  SessionFactory . "},
{"api_id": 2547, "api_type": 2, "full_declaration": "LocalSessionFactoryBean", "qualified_name": "org.springframework.orm.hibernate5.LocalSessionFactoryBean", "short_description": " FactoryBean  that creates a Hibernate  SessionFactory . "},
{"api_id": 2548, "api_type": 2, "full_declaration": "LocalSessionFactoryBuilder", "qualified_name": "org.springframework.orm.hibernate5.LocalSessionFactoryBuilder", "short_description": " A Spring-provided extension of the standard Hibernate  Configuration  class,\nadding  SpringSessionContext  as a default and providing convenient ways\nto specify a JDBC  DataSource  and an application class loader. "},
{"api_id": 2549, "api_type": 2, "full_declaration": "SessionFactoryUtils", "qualified_name": "org.springframework.orm.hibernate5.SessionFactoryUtils", "short_description": " Helper class featuring methods for Hibernate Session handling. "},
{"api_id": 2550, "api_type": 2, "full_declaration": "SessionHolder", "qualified_name": "org.springframework.orm.hibernate5.SessionHolder", "short_description": " Resource holder wrapping a Hibernate  Session  (plus an optional  Transaction ). "},
{"api_id": 2551, "api_type": 2, "full_declaration": "SpringBeanContainer", "qualified_name": "org.springframework.orm.hibernate5.SpringBeanContainer", "short_description": " Spring's implementation of Hibernate 5.3's  BeanContainer  SPI,\ndelegating to a Spring  ConfigurableListableBeanFactory . "},
{"api_id": 2552, "api_type": 2, "full_declaration": "SpringFlushSynchronization", "qualified_name": "org.springframework.orm.hibernate5.SpringFlushSynchronization", "short_description": " Simple synchronization adapter that propagates a  flush()  call\nto the underlying Hibernate Session. "},
{"api_id": 2553, "api_type": 2, "full_declaration": "SpringJtaSessionContext", "qualified_name": "org.springframework.orm.hibernate5.SpringJtaSessionContext", "short_description": " Spring-specific subclass of Hibernate's JTASessionContext,\nsetting  FlushMode.MANUAL  for read-only transactions. "},
{"api_id": 2554, "api_type": 2, "full_declaration": "SpringSessionContext", "qualified_name": "org.springframework.orm.hibernate5.SpringSessionContext", "short_description": " Implementation of Hibernate 3.1's  CurrentSessionContext  interface\nthat delegates to Spring's  SessionFactoryUtils  for providing a\nSpring-managed current  Session . "},
{"api_id": 2555, "api_type": 2, "full_declaration": "SpringSessionSynchronization", "qualified_name": "org.springframework.orm.hibernate5.SpringSessionSynchronization", "short_description": " Callback for resource cleanup at the end of a Spring-managed transaction\nfor a pre-bound Hibernate Session. "},
{"api_id": 2556, "api_type": 4, "full_declaration": "HibernateJdbcException", "qualified_name": "org.springframework.orm.hibernate5.HibernateJdbcException", "short_description": " Hibernate-specific subclass of UncategorizedDataAccessException,\nfor JDBC exceptions that Hibernate wrapped. "},
{"api_id": 2557, "api_type": 4, "full_declaration": "HibernateObjectRetrievalFailureException", "qualified_name": "org.springframework.orm.hibernate5.HibernateObjectRetrievalFailureException", "short_description": " Hibernate-specific subclass of ObjectRetrievalFailureException. "},
{"api_id": 2558, "api_type": 4, "full_declaration": "HibernateOptimisticLockingFailureException", "qualified_name": "org.springframework.orm.hibernate5.HibernateOptimisticLockingFailureException", "short_description": " Hibernate-specific subclass of ObjectOptimisticLockingFailureException. "},
{"api_id": 2559, "api_type": 4, "full_declaration": "HibernateQueryException", "qualified_name": "org.springframework.orm.hibernate5.HibernateQueryException", "short_description": " Hibernate-specific subclass of InvalidDataAccessResourceUsageException,\nthrown on invalid HQL query syntax. "},
{"api_id": 2560, "api_type": 4, "full_declaration": "HibernateSystemException", "qualified_name": "org.springframework.orm.hibernate5.HibernateSystemException", "short_description": " Hibernate-specific subclass of UncategorizedDataAccessException,\nfor Hibernate system errors that do not match any concrete org.springframework.dao  exceptions. "},
{"api_id": 2561, "api_type": 2, "full_declaration": "HibernateDaoSupport", "qualified_name": "org.springframework.orm.hibernate5.support.HibernateDaoSupport", "short_description": " Convenient super class for Hibernate-based data access objects. "},
{"api_id": 2562, "api_type": 2, "full_declaration": "OpenSessionInterceptor", "qualified_name": "org.springframework.orm.hibernate5.support.OpenSessionInterceptor", "short_description": " Simple AOP Alliance  MethodInterceptor  implementation that binds a new\nHibernate  Session  for each method invocation, if none bound before. "},
{"api_id": 2563, "api_type": 2, "full_declaration": "OpenSessionInViewFilter", "qualified_name": "org.springframework.orm.hibernate5.support.OpenSessionInViewFilter", "short_description": " Servlet Filter that binds a Hibernate Session to the thread for the entire\nprocessing of the request. "},
{"api_id": 2564, "api_type": 2, "full_declaration": "OpenSessionInViewInterceptor", "qualified_name": "org.springframework.orm.hibernate5.support.OpenSessionInViewInterceptor", "short_description": " Spring web request interceptor that binds a Hibernate  Session  to the\nthread for the entire processing of the request. "},
{"api_id": 2565, "api_type": 3, "full_declaration": "EntityManagerFactoryInfo", "qualified_name": "org.springframework.orm.jpa.EntityManagerFactoryInfo", "short_description": " Metadata interface for a Spring-managed JPA  EntityManagerFactory . "},
{"api_id": 2566, "api_type": 3, "full_declaration": "EntityManagerProxy", "qualified_name": "org.springframework.orm.jpa.EntityManagerProxy", "short_description": " Subinterface of  EntityManager  to be implemented by\nEntityManager proxies. "},
{"api_id": 2567, "api_type": 3, "full_declaration": "JpaDialect", "qualified_name": "org.springframework.orm.jpa.JpaDialect", "short_description": " SPI strategy that encapsulates certain functionality that standard JPA 2.1 does\nnot offer, such as access to the underlying JDBC Connection. "},
{"api_id": 2568, "api_type": 3, "full_declaration": "JpaVendorAdapter", "qualified_name": "org.springframework.orm.jpa.JpaVendorAdapter", "short_description": " SPI interface that allows to plug in vendor-specific behavior\ninto Spring's EntityManagerFactory creators. "},
{"api_id": 2569, "api_type": 2, "full_declaration": "AbstractEntityManagerFactoryBean", "qualified_name": "org.springframework.orm.jpa.AbstractEntityManagerFactoryBean", "short_description": " Abstract  FactoryBean  that creates\na local JPA  EntityManagerFactory  instance within\na Spring application context. "},
{"api_id": 2570, "api_type": 2, "full_declaration": "DefaultJpaDialect", "qualified_name": "org.springframework.orm.jpa.DefaultJpaDialect", "short_description": " Default implementation of the  JpaDialect  interface. "},
{"api_id": 2571, "api_type": 2, "full_declaration": "EntityManagerFactoryAccessor", "qualified_name": "org.springframework.orm.jpa.EntityManagerFactoryAccessor", "short_description": " Base class for any class that needs to access a JPA  EntityManagerFactory ,\nusually in order to obtain a JPA  EntityManager . "},
{"api_id": 2572, "api_type": 2, "full_declaration": "EntityManagerFactoryUtils", "qualified_name": "org.springframework.orm.jpa.EntityManagerFactoryUtils", "short_description": " Helper class featuring methods for JPA EntityManager handling,\nallowing for reuse of EntityManager instances within transactions. "},
{"api_id": 2573, "api_type": 2, "full_declaration": "EntityManagerHolder", "qualified_name": "org.springframework.orm.jpa.EntityManagerHolder", "short_description": " Resource holder wrapping a JPA  EntityManager . "},
{"api_id": 2574, "api_type": 2, "full_declaration": "ExtendedEntityManagerCreator", "qualified_name": "org.springframework.orm.jpa.ExtendedEntityManagerCreator", "short_description": " Delegate for creating a variety of  EntityManager proxies that follow the JPA spec's semantics for \"extended\" EntityManagers. "},
{"api_id": 2575, "api_type": 2, "full_declaration": "JpaTransactionManager", "qualified_name": "org.springframework.orm.jpa.JpaTransactionManager", "short_description": " PlatformTransactionManager  implementation\nfor a single JPA  EntityManagerFactory . "},
{"api_id": 2576, "api_type": 2, "full_declaration": "LocalContainerEntityManagerFactoryBean", "qualified_name": "org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean", "short_description": " FactoryBean  that creates a JPA EntityManagerFactory  according to JPA's standard container  bootstrap contract. "},
{"api_id": 2577, "api_type": 2, "full_declaration": "LocalEntityManagerFactoryBean", "qualified_name": "org.springframework.orm.jpa.LocalEntityManagerFactoryBean", "short_description": " FactoryBean  that creates a JPA EntityManagerFactory  according to JPA's standard standalone  bootstrap contract. "},
{"api_id": 2578, "api_type": 2, "full_declaration": "SharedEntityManagerCreator", "qualified_name": "org.springframework.orm.jpa.SharedEntityManagerCreator", "short_description": " Delegate for creating a shareable JPA  EntityManager reference for a given  EntityManagerFactory . "},
{"api_id": 2579, "api_type": 4, "full_declaration": "JpaObjectRetrievalFailureException", "qualified_name": "org.springframework.orm.jpa.JpaObjectRetrievalFailureException", "short_description": " JPA-specific subclass of ObjectRetrievalFailureException. "},
{"api_id": 2580, "api_type": 4, "full_declaration": "JpaOptimisticLockingFailureException", "qualified_name": "org.springframework.orm.jpa.JpaOptimisticLockingFailureException", "short_description": " JPA-specific subclass of ObjectOptimisticLockingFailureException. "},
{"api_id": 2581, "api_type": 4, "full_declaration": "JpaSystemException", "qualified_name": "org.springframework.orm.jpa.JpaSystemException", "short_description": " JPA-specific subclass of UncategorizedDataAccessException,\nfor JPA system errors that do not match any concrete org.springframework.dao  exceptions. "},
{"api_id": 2582, "api_type": 3, "full_declaration": "PersistenceUnitManager", "qualified_name": "org.springframework.orm.jpa.persistenceunit.PersistenceUnitManager", "short_description": " Interface that defines an abstraction for finding and managing\nJPA PersistenceUnitInfos. "},
{"api_id": 2583, "api_type": 3, "full_declaration": "PersistenceUnitPostProcessor", "qualified_name": "org.springframework.orm.jpa.persistenceunit.PersistenceUnitPostProcessor", "short_description": " Callback interface for post-processing a JPA PersistenceUnitInfo. "},
{"api_id": 2584, "api_type": 3, "full_declaration": "SmartPersistenceUnitInfo", "qualified_name": "org.springframework.orm.jpa.persistenceunit.SmartPersistenceUnitInfo", "short_description": " Extension of the standard JPA PersistenceUnitInfo interface, for advanced collaboration\nbetween Spring's  LocalContainerEntityManagerFactoryBean and  PersistenceUnitManager  implementations. "},
{"api_id": 2585, "api_type": 2, "full_declaration": "DefaultPersistenceUnitManager", "qualified_name": "org.springframework.orm.jpa.persistenceunit.DefaultPersistenceUnitManager", "short_description": " Default implementation of the  PersistenceUnitManager  interface. "},
{"api_id": 2586, "api_type": 2, "full_declaration": "MutablePersistenceUnitInfo", "qualified_name": "org.springframework.orm.jpa.persistenceunit.MutablePersistenceUnitInfo", "short_description": " Spring's base implementation of the JPA PersistenceUnitInfo  interface,\nused to bootstrap an  EntityManagerFactory  in a container. "},
{"api_id": 2587, "api_type": 2, "full_declaration": "OpenEntityManagerInViewFilter", "qualified_name": "org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter", "short_description": " Servlet Filter that binds a JPA EntityManager to the thread for the\nentire processing of the request. "},
{"api_id": 2588, "api_type": 2, "full_declaration": "OpenEntityManagerInViewInterceptor", "qualified_name": "org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor", "short_description": " Spring web request interceptor that binds a JPA EntityManager to the\nthread for the entire processing of the request. "},
{"api_id": 2589, "api_type": 2, "full_declaration": "PersistenceAnnotationBeanPostProcessor", "qualified_name": "org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor", "short_description": " BeanPostProcessor that processes  PersistenceUnit and  PersistenceContext  annotations, for injection of\nthe corresponding JPA resources  EntityManagerFactory and  EntityManager . "},
{"api_id": 2590, "api_type": 2, "full_declaration": "SharedEntityManagerBean", "qualified_name": "org.springframework.orm.jpa.support.SharedEntityManagerBean", "short_description": " FactoryBean  that exposes a shared JPA  EntityManager reference for a given EntityManagerFactory. "},
{"api_id": 2591, "api_type": 2, "full_declaration": "AbstractJpaVendorAdapter", "qualified_name": "org.springframework.orm.jpa.vendor.AbstractJpaVendorAdapter", "short_description": " Abstract  JpaVendorAdapter  implementation that defines common properties,\nto be translated into vendor-specific JPA properties by concrete subclasses. "},
{"api_id": 2592, "api_type": 2, "full_declaration": "EclipseLinkJpaDialect", "qualified_name": "org.springframework.orm.jpa.vendor.EclipseLinkJpaDialect", "short_description": " JpaDialect  implementation for Eclipse\nPersistence Services (EclipseLink). "},
{"api_id": 2593, "api_type": 2, "full_declaration": "EclipseLinkJpaVendorAdapter", "qualified_name": "org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter", "short_description": " JpaVendorAdapter  implementation for Eclipse\nPersistence Services (EclipseLink). "},
{"api_id": 2594, "api_type": 2, "full_declaration": "HibernateJpaDialect", "qualified_name": "org.springframework.orm.jpa.vendor.HibernateJpaDialect", "short_description": " JpaDialect  implementation for\nHibernate EntityManager. "},
{"api_id": 2595, "api_type": 2, "full_declaration": "HibernateJpaSessionFactoryBean", "qualified_name": "org.springframework.orm.jpa.vendor.HibernateJpaSessionFactoryBean", "short_description": "Deprecated as of Spring Framework 4.3.12 against Hibernate 5.2, in favor of a custom solution\nbased on  EntityManagerFactory.unwrap(java.lang.Class<T>)  with explicit qualifiers and/or primary markers "},
{"api_id": 2596, "api_type": 2, "full_declaration": "HibernateJpaVendorAdapter", "qualified_name": "org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter", "short_description": " JpaVendorAdapter  implementation for Hibernate\nEntityManager. "},
{"api_id": 2597, "api_type": 8, "full_declaration": "Database", "qualified_name": "org.springframework.orm.jpa.vendor.Database", "short_description": " Enumeration for common database platforms. "},
{"api_id": 2598, "api_type": 3, "full_declaration": "GenericMarshaller", "qualified_name": "org.springframework.oxm.GenericMarshaller", "short_description": " Subinterface of  Marshaller  that has support for Java 5 generics. "},
{"api_id": 2599, "api_type": 3, "full_declaration": "GenericUnmarshaller", "qualified_name": "org.springframework.oxm.GenericUnmarshaller", "short_description": " Subinterface of  Unmarshaller  that has support for Java 5 generics. "},
{"api_id": 2600, "api_type": 3, "full_declaration": "Marshaller", "qualified_name": "org.springframework.oxm.Marshaller", "short_description": " Defines the contract for Object XML Mapping Marshallers. "},
{"api_id": 2601, "api_type": 3, "full_declaration": "Unmarshaller", "qualified_name": "org.springframework.oxm.Unmarshaller", "short_description": " Defines the contract for Object XML Mapping unmarshallers. "},
{"api_id": 2602, "api_type": 4, "full_declaration": "MarshallingException", "qualified_name": "org.springframework.oxm.MarshallingException", "short_description": " Base class for exception thrown when a marshalling or unmarshalling error occurs. "},
{"api_id": 2603, "api_type": 4, "full_declaration": "MarshallingFailureException", "qualified_name": "org.springframework.oxm.MarshallingFailureException", "short_description": " Exception thrown on marshalling failure. "},
{"api_id": 2604, "api_type": 4, "full_declaration": "UncategorizedMappingException", "qualified_name": "org.springframework.oxm.UncategorizedMappingException", "short_description": " Exception that indicates that the cause cannot be distinguished further. "},
{"api_id": 2605, "api_type": 4, "full_declaration": "UnmarshallingFailureException", "qualified_name": "org.springframework.oxm.UnmarshallingFailureException", "short_description": " Exception thrown on unmarshalling failure. "},
{"api_id": 2606, "api_type": 4, "full_declaration": "ValidationFailureException", "qualified_name": "org.springframework.oxm.ValidationFailureException", "short_description": " Exception thrown on marshalling validation failure. "},
{"api_id": 2607, "api_type": 4, "full_declaration": "XmlMappingException", "qualified_name": "org.springframework.oxm.XmlMappingException", "short_description": " Root of the hierarchy of Object XML Mapping exceptions. "},
{"api_id": 2608, "api_type": 2, "full_declaration": "OxmNamespaceHandler", "qualified_name": "org.springframework.oxm.config.OxmNamespaceHandler", "short_description": " NamespaceHandler  for the ' oxm ' namespace. "},
{"api_id": 2609, "api_type": 2, "full_declaration": "Jaxb2Marshaller", "qualified_name": "org.springframework.oxm.jaxb.Jaxb2Marshaller", "short_description": " Implementation of the  GenericMarshaller  interface for JAXB 2.2. "},
{"api_id": 2610, "api_type": 2, "full_declaration": "JibxMarshaller", "qualified_name": "org.springframework.oxm.jibx.JibxMarshaller", "short_description": "Deprecated as of Spring Framework 5.1.5, due to the lack of activity on the JiBX project "},
{"api_id": 2611, "api_type": 3, "full_declaration": "MimeContainer", "qualified_name": "org.springframework.oxm.mime.MimeContainer", "short_description": " Represents a container for MIME attachments\nConcrete implementations might adapt a SOAPMessage or an email message. "},
{"api_id": 2612, "api_type": 3, "full_declaration": "MimeMarshaller", "qualified_name": "org.springframework.oxm.mime.MimeMarshaller", "short_description": " Subinterface of  Marshaller  that can use MIME attachments to optimize\nstorage of binary data. "},
{"api_id": 2613, "api_type": 3, "full_declaration": "MimeUnmarshaller", "qualified_name": "org.springframework.oxm.mime.MimeUnmarshaller", "short_description": " Subinterface of  Unmarshaller  that can use MIME attachments\nto optimize storage of binary data. "},
{"api_id": 2614, "api_type": 2, "full_declaration": "AbstractMarshaller", "qualified_name": "org.springframework.oxm.support.AbstractMarshaller", "short_description": " Abstract implementation of the  Marshaller  and  Unmarshaller  interface. "},
{"api_id": 2615, "api_type": 2, "full_declaration": "MarshallingSource", "qualified_name": "org.springframework.oxm.support.MarshallingSource", "short_description": " Source  implementation that uses a  Marshaller .Can be constructed with a Marshaller  and an object to be marshalled. "},
{"api_id": 2616, "api_type": 2, "full_declaration": "SaxResourceUtils", "qualified_name": "org.springframework.oxm.support.SaxResourceUtils", "short_description": " Convenient utility methods for dealing with SAX. "},
{"api_id": 2617, "api_type": 2, "full_declaration": "CatchAllConverter", "qualified_name": "org.springframework.oxm.xstream.CatchAllConverter", "short_description": " XStream  Converter  that supports all classes, but throws exceptions for\n(un)marshalling. "},
{"api_id": 2618, "api_type": 2, "full_declaration": "XStreamMarshaller", "qualified_name": "org.springframework.oxm.xstream.XStreamMarshaller", "short_description": " Implementation of the  Marshaller  interface for XStream. "},
{"api_id": 2619, "api_type": 4, "full_declaration": "BadSqlGrammarException", "qualified_name": "org.springframework.r2dbc.BadSqlGrammarException", "short_description": " Exception thrown when SQL specified is invalid. "},
{"api_id": 2620, "api_type": 4, "full_declaration": "UncategorizedR2dbcException", "qualified_name": "org.springframework.r2dbc.UncategorizedR2dbcException", "short_description": " Exception thrown when we can't classify a  R2dbcException  into\none of our generic data access exceptions. "},
{"api_id": 2621, "api_type": 2, "full_declaration": "ConnectionFactoryUtils", "qualified_name": "org.springframework.r2dbc.connection.ConnectionFactoryUtils", "short_description": " Helper class that provides static methods for obtaining R2DBC Connections from\na  ConnectionFactory . "},
{"api_id": 2622, "api_type": 2, "full_declaration": "ConnectionHolder", "qualified_name": "org.springframework.r2dbc.connection.ConnectionHolder", "short_description": " Resource holder wrapping a R2DBC  Connection . "},
{"api_id": 2623, "api_type": 2, "full_declaration": "DelegatingConnectionFactory", "qualified_name": "org.springframework.r2dbc.connection.DelegatingConnectionFactory", "short_description": " R2DBC  ConnectionFactory  implementation that delegates\nall calls to a given target  ConnectionFactory . "},
{"api_id": 2624, "api_type": 2, "full_declaration": "R2dbcTransactionManager", "qualified_name": "org.springframework.r2dbc.connection.R2dbcTransactionManager", "short_description": " ReactiveTransactionManager implementation for a single R2DBC  ConnectionFactory . "},
{"api_id": 2625, "api_type": 2, "full_declaration": "SingleConnectionFactory", "qualified_name": "org.springframework.r2dbc.connection.SingleConnectionFactory", "short_description": " Implementation of  DelegatingConnectionFactory  that wraps a\nsingle R2DBC Connection which is not closed after use. "},
{"api_id": 2626, "api_type": 2, "full_declaration": "TransactionAwareConnectionFactoryProxy", "qualified_name": "org.springframework.r2dbc.connection.TransactionAwareConnectionFactoryProxy", "short_description": " Proxy for a target R2DBC  ConnectionFactory , adding awareness\nof Spring-managed transactions. "},
{"api_id": 2627, "api_type": 3, "full_declaration": "DatabasePopulator", "qualified_name": "org.springframework.r2dbc.connection.init.DatabasePopulator", "short_description": " Strategy used to populate, initialize, or clean up a database. "},
{"api_id": 2628, "api_type": 2, "full_declaration": "CompositeDatabasePopulator", "qualified_name": "org.springframework.r2dbc.connection.init.CompositeDatabasePopulator", "short_description": " Composite  DatabasePopulator  that delegates to a list of given DatabasePopulator  implementations, executing all scripts. "},
{"api_id": 2629, "api_type": 2, "full_declaration": "ConnectionFactoryInitializer", "qualified_name": "org.springframework.r2dbc.connection.init.ConnectionFactoryInitializer", "short_description": " Used to  set up  a database during\ninitialization and  clean up  a database during\ndestruction. "},
{"api_id": 2630, "api_type": 2, "full_declaration": "ResourceDatabasePopulator", "qualified_name": "org.springframework.r2dbc.connection.init.ResourceDatabasePopulator", "short_description": " Populates, initializes, or cleans up a database using SQL\nscripts defined in external resources. "},
{"api_id": 2631, "api_type": 2, "full_declaration": "ScriptUtils", "qualified_name": "org.springframework.r2dbc.connection.init.ScriptUtils", "short_description": " Generic utility methods for working with SQL scripts. "},
{"api_id": 2632, "api_type": 4, "full_declaration": "CannotReadScriptException", "qualified_name": "org.springframework.r2dbc.connection.init.CannotReadScriptException", "short_description": " Thrown by  ScriptUtils  if an SQL script cannot be read. "},
{"api_id": 2633, "api_type": 4, "full_declaration": "ScriptException", "qualified_name": "org.springframework.r2dbc.connection.init.ScriptException", "short_description": " Root of the hierarchy of data access exceptions that are related to processing of SQL scripts. "},
{"api_id": 2634, "api_type": 4, "full_declaration": "ScriptParseException", "qualified_name": "org.springframework.r2dbc.connection.init.ScriptParseException", "short_description": " Thrown by  ScriptUtils  if an SQL script cannot be properly parsed. "},
{"api_id": 2635, "api_type": 4, "full_declaration": "ScriptStatementFailedException", "qualified_name": "org.springframework.r2dbc.connection.init.ScriptStatementFailedException", "short_description": " Thrown by  ScriptUtils  if a statement in an SQL script failed when\nexecuting it against the target database. "},
{"api_id": 2636, "api_type": 4, "full_declaration": "UncategorizedScriptException", "qualified_name": "org.springframework.r2dbc.connection.init.UncategorizedScriptException", "short_description": " Thrown when we cannot determine anything more specific than \"something went wrong while\nprocessing an SQL script\": for example, a  R2dbcException  from\nR2DBC that we cannot pinpoint more precisely. "},
{"api_id": 2637, "api_type": 3, "full_declaration": "ConnectionFactoryLookup", "qualified_name": "org.springframework.r2dbc.connection.lookup.ConnectionFactoryLookup", "short_description": " Strategy interface for looking up  ConnectionFactory  by name. "},
{"api_id": 2638, "api_type": 2, "full_declaration": "AbstractRoutingConnectionFactory", "qualified_name": "org.springframework.r2dbc.connection.lookup.AbstractRoutingConnectionFactory", "short_description": " Abstract  ConnectionFactory  implementation that routes AbstractRoutingConnectionFactory.create()  calls to one of various target factories  based on a lookup key. "},
{"api_id": 2639, "api_type": 2, "full_declaration": "BeanFactoryConnectionFactoryLookup", "qualified_name": "org.springframework.r2dbc.connection.lookup.BeanFactoryConnectionFactoryLookup", "short_description": " ConnectionFactoryLookup  implementation based on a\nSpring  BeanFactory . "},
{"api_id": 2640, "api_type": 2, "full_declaration": "MapConnectionFactoryLookup", "qualified_name": "org.springframework.r2dbc.connection.lookup.MapConnectionFactoryLookup", "short_description": " Simple  ConnectionFactoryLookup  implementation that relies\non a map for doing lookups. "},
{"api_id": 2641, "api_type": 2, "full_declaration": "SingleConnectionFactoryLookup", "qualified_name": "org.springframework.r2dbc.connection.lookup.SingleConnectionFactoryLookup", "short_description": " An implementation of  ConnectionFactoryLookup  that\nsimply wraps a single given  ConnectionFactory returned for any connection factory name. "},
{"api_id": 2642, "api_type": 4, "full_declaration": "ConnectionFactoryLookupFailureException", "qualified_name": "org.springframework.r2dbc.connection.lookup.ConnectionFactoryLookupFailureException", "short_description": " Exception to be thrown by a  ConnectionFactoryLookup  implementation,\nindicating that the specified  ConnectionFactory  could\nnot be obtained. "},
{"api_id": 2643, "api_type": 3, "full_declaration": "ConnectionAccessor", "qualified_name": "org.springframework.r2dbc.core.ConnectionAccessor", "short_description": " Interface declaring methods that accept callback  Function to operate within the scope of a  Connection . "},
{"api_id": 2644, "api_type": 3, "full_declaration": "DatabaseClient", "qualified_name": "org.springframework.r2dbc.core.DatabaseClient", "short_description": " A non-blocking, reactive client for performing database calls requests with\nReactive Streams back pressure. "},
{"api_id": 2645, "api_type": 3, "full_declaration": "DatabaseClient.Builder", "qualified_name": "org.springframework.r2dbc.core.DatabaseClient.Builder", "short_description": " A mutable builder for creating a  DatabaseClient . "},
{"api_id": 2646, "api_type": 3, "full_declaration": "DatabaseClient.GenericExecuteSpec", "qualified_name": "org.springframework.r2dbc.core.DatabaseClient.GenericExecuteSpec", "short_description": " Contract for specifying an SQL call along with options leading to the execution. "},
{"api_id": 2647, "api_type": 3, "full_declaration": "ExecuteFunction", "qualified_name": "org.springframework.r2dbc.core.ExecuteFunction", "short_description": " Represents a function that executes a  Statement  for a (delayed) Result  stream. "},
{"api_id": 2648, "api_type": 3, "full_declaration": "FetchSpec", "qualified_name": "org.springframework.r2dbc.core.FetchSpec", "short_description": " Union type for fetching results. "},
{"api_id": 2649, "api_type": 3, "full_declaration": "PreparedOperation", "qualified_name": "org.springframework.r2dbc.core.PreparedOperation", "short_description": " Extension to  QueryOperation  for a prepared SQL query Supplier  with bound parameters. "},
{"api_id": 2650, "api_type": 3, "full_declaration": "QueryOperation", "qualified_name": "org.springframework.r2dbc.core.QueryOperation", "short_description": " Interface declaring a query operation that can be represented\nwith a query string. "},
{"api_id": 2651, "api_type": 3, "full_declaration": "RowsFetchSpec", "qualified_name": "org.springframework.r2dbc.core.RowsFetchSpec", "short_description": " Contract for fetching tabular results. "},
{"api_id": 2652, "api_type": 3, "full_declaration": "SqlProvider", "qualified_name": "org.springframework.r2dbc.core.SqlProvider", "short_description": " Interface to be implemented by objects that can provide SQL strings. "},
{"api_id": 2653, "api_type": 3, "full_declaration": "StatementFilterFunction", "qualified_name": "org.springframework.r2dbc.core.StatementFilterFunction", "short_description": " Represents a function that filters an  execute function . "},
{"api_id": 2654, "api_type": 3, "full_declaration": "UpdatedRowsFetchSpec", "qualified_name": "org.springframework.r2dbc.core.UpdatedRowsFetchSpec", "short_description": " Contract for fetching the number of affected rows. "},
{"api_id": 2655, "api_type": 2, "full_declaration": "ColumnMapRowMapper", "qualified_name": "org.springframework.r2dbc.core.ColumnMapRowMapper", "short_description": " Mapping function  implementation that creates a java.util.Map  for each row, representing all columns as\nkey-value pairs: one entry for each column, with the column name as key. "},
{"api_id": 2656, "api_type": 2, "full_declaration": "Parameter", "qualified_name": "org.springframework.r2dbc.core.Parameter", "short_description": " A database value that can be set in a statement. "},
{"api_id": 2657, "api_type": 3, "full_declaration": "BindMarker", "qualified_name": "org.springframework.r2dbc.core.binding.BindMarker", "short_description": " A bind marker represents a single bindable parameter within a query. "},
{"api_id": 2658, "api_type": 3, "full_declaration": "BindMarkers", "qualified_name": "org.springframework.r2dbc.core.binding.BindMarkers", "short_description": " Bind markers represent placeholders in SQL queries for substitution\nfor an actual parameter. "},
{"api_id": 2659, "api_type": 3, "full_declaration": "BindMarkersFactory", "qualified_name": "org.springframework.r2dbc.core.binding.BindMarkersFactory", "short_description": " This class creates new  BindMarkers  instances to bind\nparameter to a specific  Statement . "},
{"api_id": 2660, "api_type": 3, "full_declaration": "BindMarkersFactoryResolver.BindMarkerFactoryProvider", "qualified_name": "org.springframework.r2dbc.core.binding.BindMarkersFactoryResolver.BindMarkerFactoryProvider", "short_description": " SPI to extend Spring's default R2DBC BindMarkersFactory discovery mechanism. "},
{"api_id": 2661, "api_type": 3, "full_declaration": "BindTarget", "qualified_name": "org.springframework.r2dbc.core.binding.BindTarget", "short_description": " Target to apply bindings to. "},
{"api_id": 2662, "api_type": 2, "full_declaration": "Bindings", "qualified_name": "org.springframework.r2dbc.core.binding.Bindings", "short_description": " Value object representing value and  null  bindings\nfor a  Statement  using  BindMarkers . "},
{"api_id": 2663, "api_type": 2, "full_declaration": "Bindings.Binding", "qualified_name": "org.springframework.r2dbc.core.binding.Bindings.Binding", "short_description": " Base class for value objects representing a value or a  NULL  binding. "},
{"api_id": 2664, "api_type": 2, "full_declaration": "BindMarkersFactoryResolver", "qualified_name": "org.springframework.r2dbc.core.binding.BindMarkersFactoryResolver", "short_description": " Resolves a  BindMarkersFactory  from a  ConnectionFactory  using BindMarkersFactoryResolver.BindMarkerFactoryProvider . "},
{"api_id": 2665, "api_type": 2, "full_declaration": "MutableBindings", "qualified_name": "org.springframework.r2dbc.core.binding.MutableBindings", "short_description": " Mutable extension to  Bindings  for Value and  null  bindings\nfor a  Statement  using  BindMarkers . "},
{"api_id": 2666, "api_type": 4, "full_declaration": "BindMarkersFactoryResolver.NoBindMarkersFactoryException", "qualified_name": "org.springframework.r2dbc.core.binding.BindMarkersFactoryResolver.NoBindMarkersFactoryException", "short_description": " Exception thrown when  BindMarkersFactoryResolver  cannot resolve a BindMarkersFactory . "},
{"api_id": 2667, "api_type": 4, "full_declaration": "RemoteAccessException", "qualified_name": "org.springframework.remoting.RemoteAccessException", "short_description": " Generic remote access exception. "},
{"api_id": 2668, "api_type": 4, "full_declaration": "RemoteConnectFailureException", "qualified_name": "org.springframework.remoting.RemoteConnectFailureException", "short_description": " RemoteAccessException subclass to be thrown when no connection\ncould be established with a remote service. "},
{"api_id": 2669, "api_type": 4, "full_declaration": "RemoteInvocationFailureException", "qualified_name": "org.springframework.remoting.RemoteInvocationFailureException", "short_description": " RemoteAccessException subclass to be thrown when the execution\nof the target method failed on the server side, for example\nwhen a method was not found on the target object. "},
{"api_id": 2670, "api_type": 4, "full_declaration": "RemoteLookupFailureException", "qualified_name": "org.springframework.remoting.RemoteLookupFailureException", "short_description": " RemoteAccessException subclass to be thrown in case of a lookup failure,\ntypically if the lookup happens on demand for each method invocation. "},
{"api_id": 2671, "api_type": 4, "full_declaration": "RemoteProxyFailureException", "qualified_name": "org.springframework.remoting.RemoteProxyFailureException", "short_description": " RemoteAccessException subclass to be thrown in case of a failure\nwithin the client-side proxy for a remote service, for example\nwhen a method was not found on the underlying RMI stub. "},
{"api_id": 2672, "api_type": 4, "full_declaration": "RemoteTimeoutException", "qualified_name": "org.springframework.remoting.RemoteTimeoutException", "short_description": " RemoteAccessException subclass to be thrown when the execution\nof the target method did not complete before a configurable\ntimeout, for example when a reply message was not received. "},
{"api_id": 2673, "api_type": 2, "full_declaration": "HessianClientInterceptor", "qualified_name": "org.springframework.remoting.caucho.HessianClientInterceptor", "short_description": "Deprecated as of 5.3 (phasing out serialization-based remoting) "},
{"api_id": 2674, "api_type": 2, "full_declaration": "HessianExporter", "qualified_name": "org.springframework.remoting.caucho.HessianExporter", "short_description": "Deprecated as of 5.3 (phasing out serialization-based remoting) "},
{"api_id": 2675, "api_type": 2, "full_declaration": "HessianProxyFactoryBean", "qualified_name": "org.springframework.remoting.caucho.HessianProxyFactoryBean", "short_description": "Deprecated as of 5.3 (phasing out serialization-based remoting) "},
{"api_id": 2676, "api_type": 2, "full_declaration": "HessianServiceExporter", "qualified_name": "org.springframework.remoting.caucho.HessianServiceExporter", "short_description": "Deprecated as of 5.3 (phasing out serialization-based remoting) "},
{"api_id": 2677, "api_type": 2, "full_declaration": "SimpleHessianServiceExporter", "qualified_name": "org.springframework.remoting.caucho.SimpleHessianServiceExporter", "short_description": "Deprecated as of Spring Framework 5.1, in favor of  HessianServiceExporter "},
{"api_id": 2678, "api_type": 3, "full_declaration": "HttpInvokerClientConfiguration", "qualified_name": "org.springframework.remoting.httpinvoker.HttpInvokerClientConfiguration", "short_description": "Deprecated as of 5.3 (phasing out serialization-based remoting) "},
{"api_id": 2679, "api_type": 3, "full_declaration": "HttpInvokerRequestExecutor", "qualified_name": "org.springframework.remoting.httpinvoker.HttpInvokerRequestExecutor", "short_description": "Deprecated as of 5.3 (phasing out serialization-based remoting) "},
{"api_id": 2680, "api_type": 2, "full_declaration": "AbstractHttpInvokerRequestExecutor", "qualified_name": "org.springframework.remoting.httpinvoker.AbstractHttpInvokerRequestExecutor", "short_description": "Deprecated as of 5.3 (phasing out serialization-based remoting) "},
{"api_id": 2681, "api_type": 2, "full_declaration": "HttpComponentsHttpInvokerRequestExecutor", "qualified_name": "org.springframework.remoting.httpinvoker.HttpComponentsHttpInvokerRequestExecutor", "short_description": "Deprecated as of 5.3 (phasing out serialization-based remoting) "},
{"api_id": 2682, "api_type": 2, "full_declaration": "HttpInvokerClientInterceptor", "qualified_name": "org.springframework.remoting.httpinvoker.HttpInvokerClientInterceptor", "short_description": "Deprecated as of 5.3 (phasing out serialization-based remoting) "},
{"api_id": 2683, "api_type": 2, "full_declaration": "HttpInvokerProxyFactoryBean", "qualified_name": "org.springframework.remoting.httpinvoker.HttpInvokerProxyFactoryBean", "short_description": "Deprecated as of 5.3 (phasing out serialization-based remoting) "},
{"api_id": 2684, "api_type": 2, "full_declaration": "HttpInvokerServiceExporter", "qualified_name": "org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter", "short_description": "Deprecated as of 5.3 (phasing out serialization-based remoting) "},
{"api_id": 2685, "api_type": 2, "full_declaration": "SimpleHttpInvokerRequestExecutor", "qualified_name": "org.springframework.remoting.httpinvoker.SimpleHttpInvokerRequestExecutor", "short_description": "Deprecated as of 5.3 (phasing out serialization-based remoting) "},
{"api_id": 2686, "api_type": 2, "full_declaration": "SimpleHttpInvokerServiceExporter", "qualified_name": "org.springframework.remoting.httpinvoker.SimpleHttpInvokerServiceExporter", "short_description": "Deprecated as of Spring Framework 5.1, in favor of  HttpInvokerServiceExporter "},
{"api_id": 2687, "api_type": 2, "full_declaration": "AbstractJaxWsServiceExporter", "qualified_name": "org.springframework.remoting.jaxws.AbstractJaxWsServiceExporter", "short_description": " Abstract exporter for JAX-WS services, autodetecting annotated service beans\n(through the JAX-WS  WebService  annotation). "},
{"api_id": 2688, "api_type": 2, "full_declaration": "JaxWsPortClientInterceptor", "qualified_name": "org.springframework.remoting.jaxws.JaxWsPortClientInterceptor", "short_description": " MethodInterceptor  for accessing a\nspecific port of a JAX-WS service. "},
{"api_id": 2689, "api_type": 2, "full_declaration": "JaxWsPortProxyFactoryBean", "qualified_name": "org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean", "short_description": " FactoryBean  for a specific port of a\nJAX-WS service. "},
{"api_id": 2690, "api_type": 2, "full_declaration": "LocalJaxWsServiceFactory", "qualified_name": "org.springframework.remoting.jaxws.LocalJaxWsServiceFactory", "short_description": " Factory for locally defined JAX-WS  Service  references. "},
{"api_id": 2691, "api_type": 2, "full_declaration": "LocalJaxWsServiceFactoryBean", "qualified_name": "org.springframework.remoting.jaxws.LocalJaxWsServiceFactoryBean", "short_description": " FactoryBean  for locally\ndefined JAX-WS Service references. "},
{"api_id": 2692, "api_type": 2, "full_declaration": "SimpleHttpServerJaxWsServiceExporter", "qualified_name": "org.springframework.remoting.jaxws.SimpleHttpServerJaxWsServiceExporter", "short_description": "Deprecated as of Spring Framework 5.1, in favor of  SimpleJaxWsServiceExporter "},
{"api_id": 2693, "api_type": 2, "full_declaration": "SimpleJaxWsServiceExporter", "qualified_name": "org.springframework.remoting.jaxws.SimpleJaxWsServiceExporter", "short_description": " Simple exporter for JAX-WS services, autodetecting annotated service beans\n(through the JAX-WS  WebService  annotation) and exporting\nthem with a configured base address (by default \"http://localhost:8080/\")\nusing the JAX-WS provider's built-in publication support. "},
{"api_id": 2694, "api_type": 4, "full_declaration": "JaxWsSoapFaultException", "qualified_name": "org.springframework.remoting.jaxws.JaxWsSoapFaultException", "short_description": " Spring SoapFaultException adapter for the JAX-WS SOAPFaultException  class. "},
{"api_id": 2695, "api_type": 3, "full_declaration": "RmiInvocationHandler", "qualified_name": "org.springframework.remoting.rmi.RmiInvocationHandler", "short_description": "Deprecated as of 5.3 (phasing out serialization-based remoting) "},
{"api_id": 2696, "api_type": 2, "full_declaration": "CodebaseAwareObjectInputStream", "qualified_name": "org.springframework.remoting.rmi.CodebaseAwareObjectInputStream", "short_description": "Deprecated as of 5.3 (phasing out serialization-based remoting) "},
{"api_id": 2697, "api_type": 2, "full_declaration": "JndiRmiClientInterceptor", "qualified_name": "org.springframework.remoting.rmi.JndiRmiClientInterceptor", "short_description": "Deprecated as of 5.3 (phasing out serialization-based remoting) "},
{"api_id": 2698, "api_type": 2, "full_declaration": "JndiRmiProxyFactoryBean", "qualified_name": "org.springframework.remoting.rmi.JndiRmiProxyFactoryBean", "short_description": "Deprecated as of 5.3 (phasing out serialization-based remoting) "},
{"api_id": 2699, "api_type": 2, "full_declaration": "JndiRmiServiceExporter", "qualified_name": "org.springframework.remoting.rmi.JndiRmiServiceExporter", "short_description": "Deprecated as of 5.3 (phasing out serialization-based remoting) "},
{"api_id": 2700, "api_type": 2, "full_declaration": "RemoteInvocationSerializingExporter", "qualified_name": "org.springframework.remoting.rmi.RemoteInvocationSerializingExporter", "short_description": "Deprecated as of 5.3 (phasing out serialization-based remoting) "},
{"api_id": 2701, "api_type": 2, "full_declaration": "RmiBasedExporter", "qualified_name": "org.springframework.remoting.rmi.RmiBasedExporter", "short_description": "Deprecated as of 5.3 (phasing out serialization-based remoting) "},
{"api_id": 2702, "api_type": 2, "full_declaration": "RmiClientInterceptor", "qualified_name": "org.springframework.remoting.rmi.RmiClientInterceptor", "short_description": "Deprecated as of 5.3 (phasing out serialization-based remoting) "},
{"api_id": 2703, "api_type": 2, "full_declaration": "RmiClientInterceptorUtils", "qualified_name": "org.springframework.remoting.rmi.RmiClientInterceptorUtils", "short_description": "Deprecated as of 5.3 (phasing out serialization-based remoting) "},
{"api_id": 2704, "api_type": 2, "full_declaration": "RmiProxyFactoryBean", "qualified_name": "org.springframework.remoting.rmi.RmiProxyFactoryBean", "short_description": "Deprecated as of 5.3 (phasing out serialization-based remoting) "},
{"api_id": 2705, "api_type": 2, "full_declaration": "RmiRegistryFactoryBean", "qualified_name": "org.springframework.remoting.rmi.RmiRegistryFactoryBean", "short_description": "Deprecated as of 5.3 (phasing out serialization-based remoting) "},
{"api_id": 2706, "api_type": 2, "full_declaration": "RmiServiceExporter", "qualified_name": "org.springframework.remoting.rmi.RmiServiceExporter", "short_description": "Deprecated as of 5.3 (phasing out serialization-based remoting) "},
{"api_id": 2707, "api_type": 4, "full_declaration": "SoapFaultException", "qualified_name": "org.springframework.remoting.soap.SoapFaultException", "short_description": " RemoteInvocationFailureException subclass that provides the details\nof a SOAP fault. "},
{"api_id": 2708, "api_type": 3, "full_declaration": "RemoteInvocationExecutor", "qualified_name": "org.springframework.remoting.support.RemoteInvocationExecutor", "short_description": " Strategy interface for executing a  RemoteInvocation  on a target object. "},
{"api_id": 2709, "api_type": 3, "full_declaration": "RemoteInvocationFactory", "qualified_name": "org.springframework.remoting.support.RemoteInvocationFactory", "short_description": " Strategy interface for creating a  RemoteInvocation  from an AOP Alliance MethodInvocation . "},
{"api_id": 2710, "api_type": 2, "full_declaration": "DefaultRemoteInvocationExecutor", "qualified_name": "org.springframework.remoting.support.DefaultRemoteInvocationExecutor", "short_description": " Default implementation of the  RemoteInvocationExecutor  interface. "},
{"api_id": 2711, "api_type": 2, "full_declaration": "DefaultRemoteInvocationFactory", "qualified_name": "org.springframework.remoting.support.DefaultRemoteInvocationFactory", "short_description": " Default implementation of the  RemoteInvocationFactory  interface. "},
{"api_id": 2712, "api_type": 2, "full_declaration": "RemoteAccessor", "qualified_name": "org.springframework.remoting.support.RemoteAccessor", "short_description": " Abstract base class for classes that access a remote service. "},
{"api_id": 2713, "api_type": 2, "full_declaration": "RemoteExporter", "qualified_name": "org.springframework.remoting.support.RemoteExporter", "short_description": " Abstract base class for classes that export a remote service. "},
{"api_id": 2714, "api_type": 2, "full_declaration": "RemoteInvocation", "qualified_name": "org.springframework.remoting.support.RemoteInvocation", "short_description": " Encapsulates a remote invocation, providing core method invocation properties\nin a serializable fashion. "},
{"api_id": 2715, "api_type": 2, "full_declaration": "RemoteInvocationBasedAccessor", "qualified_name": "org.springframework.remoting.support.RemoteInvocationBasedAccessor", "short_description": " Abstract base class for remote service accessors that are based\non serialization of  RemoteInvocation  objects. "},
{"api_id": 2716, "api_type": 2, "full_declaration": "RemoteInvocationBasedExporter", "qualified_name": "org.springframework.remoting.support.RemoteInvocationBasedExporter", "short_description": " Abstract base class for remote service exporters that are based\non deserialization of  RemoteInvocation  objects. "},
{"api_id": 2717, "api_type": 2, "full_declaration": "RemoteInvocationResult", "qualified_name": "org.springframework.remoting.support.RemoteInvocationResult", "short_description": " Encapsulates a remote invocation result, holding a result value or an exception. "},
{"api_id": 2718, "api_type": 2, "full_declaration": "RemoteInvocationTraceInterceptor", "qualified_name": "org.springframework.remoting.support.RemoteInvocationTraceInterceptor", "short_description": " AOP Alliance MethodInterceptor for tracing remote invocations. "},
{"api_id": 2719, "api_type": 2, "full_declaration": "RemoteInvocationUtils", "qualified_name": "org.springframework.remoting.support.RemoteInvocationUtils", "short_description": " General utilities for handling remote invocations. "},
{"api_id": 2720, "api_type": 2, "full_declaration": "RemotingSupport", "qualified_name": "org.springframework.remoting.support.RemotingSupport", "short_description": " Generic support base class for remote accessor and exporters,\nproviding common bean ClassLoader handling. "},
{"api_id": 2721, "api_type": 2, "full_declaration": "SimpleHttpServerFactoryBean", "qualified_name": "org.springframework.remoting.support.SimpleHttpServerFactoryBean", "short_description": "Deprecated as of Spring Framework 5.1, in favor of embedded Tomcat/Jetty/Undertow "},
{"api_id": 2722, "api_type": 2, "full_declaration": "UrlBasedRemoteAccessor", "qualified_name": "org.springframework.remoting.support.UrlBasedRemoteAccessor", "short_description": " Abstract base class for classes that access remote services via URLs. "},
{"api_id": 2723, "api_type": 3, "full_declaration": "SchedulingAwareRunnable", "qualified_name": "org.springframework.scheduling.SchedulingAwareRunnable", "short_description": " Extension of the Runnable interface, adding special callbacks\nfor long-running operations. "},
{"api_id": 2724, "api_type": 3, "full_declaration": "SchedulingTaskExecutor", "qualified_name": "org.springframework.scheduling.SchedulingTaskExecutor", "short_description": " A  TaskExecutor  extension exposing\nscheduling characteristics that are relevant to potential task submitters. "},
{"api_id": 2725, "api_type": 3, "full_declaration": "TaskScheduler", "qualified_name": "org.springframework.scheduling.TaskScheduler", "short_description": " Task scheduler interface that abstracts the scheduling of Runnables  based on different kinds of triggers. "},
{"api_id": 2726, "api_type": 3, "full_declaration": "Trigger", "qualified_name": "org.springframework.scheduling.Trigger", "short_description": " Common interface for trigger objects that determine the next execution time\nof a task that they get associated with. "},
{"api_id": 2727, "api_type": 3, "full_declaration": "TriggerContext", "qualified_name": "org.springframework.scheduling.TriggerContext", "short_description": " Context object encapsulating last execution times and last completion time\nof a given task. "},
{"api_id": 2728, "api_type": 4, "full_declaration": "SchedulingException", "qualified_name": "org.springframework.scheduling.SchedulingException", "short_description": " General exception to be thrown on scheduling failures,\nsuch as the scheduler already having shut down. "},
{"api_id": 2729, "api_type": 3, "full_declaration": "AsyncConfigurer", "qualified_name": "org.springframework.scheduling.annotation.AsyncConfigurer", "short_description": " Interface to be implemented by @ Configuration  classes annotated with @ EnableAsync  that wish to customize the Executor  instance used when processing async method invocations or the AsyncUncaughtExceptionHandler  instance used to process exception thrown from\nasync method with  void  return type. "},
{"api_id": 2730, "api_type": 3, "full_declaration": "SchedulingConfigurer", "qualified_name": "org.springframework.scheduling.annotation.SchedulingConfigurer", "short_description": " Optional interface to be implemented by @ Configuration  classes annotated\nwith @ EnableScheduling . "},
{"api_id": 2731, "api_type": 2, "full_declaration": "AbstractAsyncConfiguration", "qualified_name": "org.springframework.scheduling.annotation.AbstractAsyncConfiguration", "short_description": " Abstract base  Configuration  class providing common structure for enabling\nSpring's asynchronous method execution capability. "},
{"api_id": 2732, "api_type": 2, "full_declaration": "AnnotationAsyncExecutionInterceptor", "qualified_name": "org.springframework.scheduling.annotation.AnnotationAsyncExecutionInterceptor", "short_description": " Specialization of  AsyncExecutionInterceptor  that delegates method execution to\nan  Executor  based on the  Async  annotation. "},
{"api_id": 2733, "api_type": 2, "full_declaration": "AsyncAnnotationAdvisor", "qualified_name": "org.springframework.scheduling.annotation.AsyncAnnotationAdvisor", "short_description": " Advisor that activates asynchronous method execution through the  Async annotation. "},
{"api_id": 2734, "api_type": 2, "full_declaration": "AsyncAnnotationBeanPostProcessor", "qualified_name": "org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor", "short_description": " Bean post-processor that automatically applies asynchronous invocation\nbehavior to any bean that carries the  Async  annotation at class or\nmethod-level by adding a corresponding  AsyncAnnotationAdvisor  to the\nexposed proxy (either an existing AOP proxy or a newly generated proxy that\nimplements all of the target's interfaces). "},
{"api_id": 2735, "api_type": 2, "full_declaration": "AsyncConfigurationSelector", "qualified_name": "org.springframework.scheduling.annotation.AsyncConfigurationSelector", "short_description": " Selects which implementation of  AbstractAsyncConfiguration  should\nbe used based on the value of  EnableAsync.mode()  on the importing @Configuration  class. "},
{"api_id": 2736, "api_type": 2, "full_declaration": "AsyncConfigurerSupport", "qualified_name": "org.springframework.scheduling.annotation.AsyncConfigurerSupport", "short_description": " A convenience  AsyncConfigurer  that implements all methods\nso that the defaults are used. "},
{"api_id": 2737, "api_type": 2, "full_declaration": "AsyncResult", "qualified_name": "org.springframework.scheduling.annotation.AsyncResult", "short_description": " A pass-through  Future  handle that can be used for method signatures\nwhich are declared with a  Future  return type for asynchronous execution. "},
{"api_id": 2738, "api_type": 2, "full_declaration": "ProxyAsyncConfiguration", "qualified_name": "org.springframework.scheduling.annotation.ProxyAsyncConfiguration", "short_description": " @Configuration  class that registers the Spring infrastructure beans necessary\nto enable proxy-based asynchronous method execution. "},
{"api_id": 2739, "api_type": 2, "full_declaration": "ScheduledAnnotationBeanPostProcessor", "qualified_name": "org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor", "short_description": " Bean post-processor that registers methods annotated with @ Scheduled to be invoked by a  TaskScheduler  according\nto the \"fixedRate\", \"fixedDelay\", or \"cron\" expression provided via the annotation. "},
{"api_id": 2740, "api_type": 2, "full_declaration": "SchedulingConfiguration", "qualified_name": "org.springframework.scheduling.annotation.SchedulingConfiguration", "short_description": " @Configuration  class that registers a  ScheduledAnnotationBeanPostProcessor bean capable of processing Spring's @ Scheduled  annotation. "},
{"api_id": 2741, "api_type": 9, "full_declaration": "Async", "qualified_name": "org.springframework.scheduling.annotation.Async", "short_description": " Annotation that marks a method as a candidate for  asynchronous  execution. "},
{"api_id": 2742, "api_type": 9, "full_declaration": "EnableAsync", "qualified_name": "org.springframework.scheduling.annotation.EnableAsync", "short_description": " Enables Spring's asynchronous method execution capability, similar to functionality\nfound in Spring's  <task:*>  XML namespace. "},
{"api_id": 2743, "api_type": 9, "full_declaration": "EnableScheduling", "qualified_name": "org.springframework.scheduling.annotation.EnableScheduling", "short_description": " Enables Spring's scheduled task execution capability, similar to\nfunctionality found in Spring's  <task:*>  XML namespace. "},
{"api_id": 2744, "api_type": 9, "full_declaration": "Scheduled", "qualified_name": "org.springframework.scheduling.annotation.Scheduled", "short_description": " Annotation that marks a method to be scheduled. "},
{"api_id": 2745, "api_type": 9, "full_declaration": "Schedules", "qualified_name": "org.springframework.scheduling.annotation.Schedules", "short_description": " Container annotation that aggregates several  Scheduled  annotations. "},
{"api_id": 2746, "api_type": 2, "full_declaration": "AspectJAsyncConfiguration", "qualified_name": "org.springframework.scheduling.aspectj.AspectJAsyncConfiguration", "short_description": " @Configuration  class that registers the Spring infrastructure beans necessary\nto enable AspectJ-based asynchronous method execution. "},
{"api_id": 2747, "api_type": 2, "full_declaration": "DelegatingTimerListener", "qualified_name": "org.springframework.scheduling.commonj.DelegatingTimerListener", "short_description": "Deprecated as of 5.1, in favor of EE 7's DefaultManagedTaskScheduler "},
{"api_id": 2748, "api_type": 2, "full_declaration": "DelegatingWork", "qualified_name": "org.springframework.scheduling.commonj.DelegatingWork", "short_description": "Deprecated as of 5.1, in favor of EE 7's DefaultManagedTaskExecutor "},
{"api_id": 2749, "api_type": 2, "full_declaration": "ScheduledTimerListener", "qualified_name": "org.springframework.scheduling.commonj.ScheduledTimerListener", "short_description": "Deprecated as of 5.1, in favor of EE 7's DefaultManagedTaskScheduler "},
{"api_id": 2750, "api_type": 2, "full_declaration": "TimerManagerAccessor", "qualified_name": "org.springframework.scheduling.commonj.TimerManagerAccessor", "short_description": "Deprecated as of 5.1, in favor of EE 7's DefaultManagedTaskScheduler "},
{"api_id": 2751, "api_type": 2, "full_declaration": "TimerManagerFactoryBean", "qualified_name": "org.springframework.scheduling.commonj.TimerManagerFactoryBean", "short_description": "Deprecated as of 5.1, in favor of EE 7's DefaultManagedTaskScheduler "},
{"api_id": 2752, "api_type": 2, "full_declaration": "TimerManagerTaskScheduler", "qualified_name": "org.springframework.scheduling.commonj.TimerManagerTaskScheduler", "short_description": "Deprecated as of 5.1, in favor of EE 7's DefaultManagedTaskScheduler "},
{"api_id": 2753, "api_type": 2, "full_declaration": "WorkManagerTaskExecutor", "qualified_name": "org.springframework.scheduling.commonj.WorkManagerTaskExecutor", "short_description": "Deprecated as of 5.1, in favor of the EE 7/8 based DefaultManagedTaskExecutor "},
{"api_id": 2754, "api_type": 2, "full_declaration": "ConcurrentTaskExecutor", "qualified_name": "org.springframework.scheduling.concurrent.ConcurrentTaskExecutor", "short_description": " Adapter that takes a  java.util.concurrent.Executor  and exposes\na Spring  TaskExecutor  for it. "},
{"api_id": 2755, "api_type": 2, "full_declaration": "ConcurrentTaskExecutor.ManagedTaskBuilder", "qualified_name": "org.springframework.scheduling.concurrent.ConcurrentTaskExecutor.ManagedTaskBuilder", "short_description": " Delegate that wraps a given Runnable/Callable with a JSR-236 ManagedTask,\nexposing a long-running hint based on  SchedulingAwareRunnable and a given identity name. "},
{"api_id": 2756, "api_type": 2, "full_declaration": "ConcurrentTaskScheduler", "qualified_name": "org.springframework.scheduling.concurrent.ConcurrentTaskScheduler", "short_description": " Adapter that takes a  java.util.concurrent.ScheduledExecutorService  and\nexposes a Spring  TaskScheduler  for it. "},
{"api_id": 2757, "api_type": 2, "full_declaration": "CustomizableThreadFactory", "qualified_name": "org.springframework.scheduling.concurrent.CustomizableThreadFactory", "short_description": " Implementation of the  ThreadFactory  interface,\nallowing for customizing the created threads (name, priority, etc). "},
{"api_id": 2758, "api_type": 2, "full_declaration": "DefaultManagedAwareThreadFactory", "qualified_name": "org.springframework.scheduling.concurrent.DefaultManagedAwareThreadFactory", "short_description": " JNDI-based variant of  CustomizableThreadFactory , performing a default lookup\nfor JSR-236's \"java:comp/DefaultManagedThreadFactory\" in a Java EE 7 environment,\nfalling back to the local  CustomizableThreadFactory  setup if not found. "},
{"api_id": 2759, "api_type": 2, "full_declaration": "DefaultManagedTaskExecutor", "qualified_name": "org.springframework.scheduling.concurrent.DefaultManagedTaskExecutor", "short_description": " JNDI-based variant of  ConcurrentTaskExecutor , performing a default lookup for\nJSR-236's \"java:comp/DefaultManagedExecutorService\" in a Java EE 7/8 environment. "},
{"api_id": 2760, "api_type": 2, "full_declaration": "DefaultManagedTaskScheduler", "qualified_name": "org.springframework.scheduling.concurrent.DefaultManagedTaskScheduler", "short_description": " JNDI-based variant of  ConcurrentTaskScheduler , performing a default lookup for\nJSR-236's \"java:comp/DefaultManagedScheduledExecutorService\" in a Java EE 7 environment. "},
{"api_id": 2761, "api_type": 2, "full_declaration": "ExecutorConfigurationSupport", "qualified_name": "org.springframework.scheduling.concurrent.ExecutorConfigurationSupport", "short_description": " Base class for setting up a  ExecutorService (typically a  ThreadPoolExecutor  or ScheduledThreadPoolExecutor ). "},
{"api_id": 2762, "api_type": 2, "full_declaration": "ForkJoinPoolFactoryBean", "qualified_name": "org.springframework.scheduling.concurrent.ForkJoinPoolFactoryBean", "short_description": " A Spring  FactoryBean  that builds and exposes a preconfigured  ForkJoinPool . "},
{"api_id": 2763, "api_type": 2, "full_declaration": "ScheduledExecutorFactoryBean", "qualified_name": "org.springframework.scheduling.concurrent.ScheduledExecutorFactoryBean", "short_description": " FactoryBean  that sets up\na  ScheduledExecutorService (by default: a  ScheduledThreadPoolExecutor )\nand exposes it for bean references. "},
{"api_id": 2764, "api_type": 2, "full_declaration": "ScheduledExecutorTask", "qualified_name": "org.springframework.scheduling.concurrent.ScheduledExecutorTask", "short_description": " JavaBean that describes a scheduled executor task, consisting of the Runnable  and a delay plus period. "},
{"api_id": 2765, "api_type": 2, "full_declaration": "ThreadPoolExecutorFactoryBean", "qualified_name": "org.springframework.scheduling.concurrent.ThreadPoolExecutorFactoryBean", "short_description": " JavaBean that allows for configuring a  ThreadPoolExecutor in bean style (through its \"corePoolSize\", \"maxPoolSize\", \"keepAliveSeconds\",\n\"queueCapacity\" properties) and exposing it as a bean reference of its native ExecutorService  type. "},
{"api_id": 2766, "api_type": 2, "full_declaration": "ThreadPoolTaskExecutor", "qualified_name": "org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor", "short_description": " JavaBean that allows for configuring a  ThreadPoolExecutor in bean style (through its \"corePoolSize\", \"maxPoolSize\", \"keepAliveSeconds\", \"queueCapacity\"\nproperties) and exposing it as a Spring  TaskExecutor . "},
{"api_id": 2767, "api_type": 2, "full_declaration": "ThreadPoolTaskScheduler", "qualified_name": "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler", "short_description": " Implementation of Spring's  TaskScheduler  interface, wrapping\na native  ScheduledThreadPoolExecutor . "},
{"api_id": 2768, "api_type": 3, "full_declaration": "ScheduledTaskHolder", "qualified_name": "org.springframework.scheduling.config.ScheduledTaskHolder", "short_description": " Common interface for exposing locally scheduled tasks. "},
{"api_id": 2769, "api_type": 2, "full_declaration": "AnnotationDrivenBeanDefinitionParser", "qualified_name": "org.springframework.scheduling.config.AnnotationDrivenBeanDefinitionParser", "short_description": " Parser for the 'annotation-driven' element of the 'task' namespace. "},
{"api_id": 2770, "api_type": 2, "full_declaration": "ContextLifecycleScheduledTaskRegistrar", "qualified_name": "org.springframework.scheduling.config.ContextLifecycleScheduledTaskRegistrar", "short_description": " ScheduledTaskRegistrar  subclass which redirects the actual scheduling\nof tasks to the  ContextLifecycleScheduledTaskRegistrar.afterSingletonsInstantiated()  callback (as of 4.1.2). "},
{"api_id": 2771, "api_type": 2, "full_declaration": "CronTask", "qualified_name": "org.springframework.scheduling.config.CronTask", "short_description": " TriggerTask  implementation defining a  Runnable  to be executed according\nto a  standard\ncron expression . "},
{"api_id": 2772, "api_type": 2, "full_declaration": "ExecutorBeanDefinitionParser", "qualified_name": "org.springframework.scheduling.config.ExecutorBeanDefinitionParser", "short_description": " Parser for the 'executor' element of the 'task' namespace. "},
{"api_id": 2773, "api_type": 2, "full_declaration": "FixedDelayTask", "qualified_name": "org.springframework.scheduling.config.FixedDelayTask", "short_description": " Specialization of  IntervalTask  for fixed-delay semantics. "},
{"api_id": 2774, "api_type": 2, "full_declaration": "FixedRateTask", "qualified_name": "org.springframework.scheduling.config.FixedRateTask", "short_description": " Specialization of  IntervalTask  for fixed-rate semantics. "},
{"api_id": 2775, "api_type": 2, "full_declaration": "IntervalTask", "qualified_name": "org.springframework.scheduling.config.IntervalTask", "short_description": " Task  implementation defining a  Runnable  to be executed at a given\nmillisecond interval which may be treated as fixed-rate or fixed-delay depending on\ncontext. "},
{"api_id": 2776, "api_type": 2, "full_declaration": "ScheduledTask", "qualified_name": "org.springframework.scheduling.config.ScheduledTask", "short_description": " A representation of a scheduled task at runtime,\nused as a return value for scheduling methods. "},
{"api_id": 2777, "api_type": 2, "full_declaration": "ScheduledTaskRegistrar", "qualified_name": "org.springframework.scheduling.config.ScheduledTaskRegistrar", "short_description": " Helper bean for registering tasks with a  TaskScheduler , typically using cron\nexpressions. "},
{"api_id": 2778, "api_type": 2, "full_declaration": "ScheduledTasksBeanDefinitionParser", "qualified_name": "org.springframework.scheduling.config.ScheduledTasksBeanDefinitionParser", "short_description": " Parser for the 'scheduled-tasks' element of the scheduling namespace. "},
{"api_id": 2779, "api_type": 2, "full_declaration": "SchedulerBeanDefinitionParser", "qualified_name": "org.springframework.scheduling.config.SchedulerBeanDefinitionParser", "short_description": " Parser for the 'scheduler' element of the 'task' namespace. "},
{"api_id": 2780, "api_type": 2, "full_declaration": "Task", "qualified_name": "org.springframework.scheduling.config.Task", "short_description": " Holder class defining a  Runnable  to be executed as a task, typically at a\nscheduled time or interval. "},
{"api_id": 2781, "api_type": 2, "full_declaration": "TaskExecutorFactoryBean", "qualified_name": "org.springframework.scheduling.config.TaskExecutorFactoryBean", "short_description": " FactoryBean  for creating  ThreadPoolTaskExecutor  instances,\nprimarily used behind the XML task namespace. "},
{"api_id": 2782, "api_type": 2, "full_declaration": "TaskManagementConfigUtils", "qualified_name": "org.springframework.scheduling.config.TaskManagementConfigUtils", "short_description": " Configuration constants for internal sharing across subpackages. "},
{"api_id": 2783, "api_type": 2, "full_declaration": "TaskNamespaceHandler", "qualified_name": "org.springframework.scheduling.config.TaskNamespaceHandler", "short_description": " NamespaceHandler  for the 'task' namespace. "},
{"api_id": 2784, "api_type": 2, "full_declaration": "TriggerTask", "qualified_name": "org.springframework.scheduling.config.TriggerTask", "short_description": " Task  implementation defining a  Runnable  to be executed\naccording to a given  Trigger . "},
{"api_id": 2785, "api_type": 3, "full_declaration": "SchedulerContextAware", "qualified_name": "org.springframework.scheduling.quartz.SchedulerContextAware", "short_description": " Callback interface to be implemented by Spring-managed\nQuartz artifacts that need access to the SchedulerContext\n(without having natural access to it). "},
{"api_id": 2786, "api_type": 2, "full_declaration": "AdaptableJobFactory", "qualified_name": "org.springframework.scheduling.quartz.AdaptableJobFactory", "short_description": " JobFactory  implementation that supports  Runnable objects as well as standard Quartz  Job  instances. "},
{"api_id": 2787, "api_type": 2, "full_declaration": "CronTriggerFactoryBean", "qualified_name": "org.springframework.scheduling.quartz.CronTriggerFactoryBean", "short_description": " A Spring  FactoryBean  for creating a Quartz  CronTrigger instance, supporting bean-style usage for trigger configuration. "},
{"api_id": 2788, "api_type": 2, "full_declaration": "DelegatingJob", "qualified_name": "org.springframework.scheduling.quartz.DelegatingJob", "short_description": " Simple Quartz  Job  adapter that delegates to a\ngiven  Runnable  instance. "},
{"api_id": 2789, "api_type": 2, "full_declaration": "JobDetailFactoryBean", "qualified_name": "org.springframework.scheduling.quartz.JobDetailFactoryBean", "short_description": " A Spring  FactoryBean  for creating a Quartz  JobDetail instance, supporting bean-style usage for JobDetail configuration. "},
{"api_id": 2790, "api_type": 2, "full_declaration": "LocalDataSourceJobStore", "qualified_name": "org.springframework.scheduling.quartz.LocalDataSourceJobStore", "short_description": " Subclass of Quartz's  JobStoreCMT  class that delegates to a Spring-managed DataSource  instead of using a Quartz-managed JDBC connection pool. "},
{"api_id": 2791, "api_type": 2, "full_declaration": "LocalTaskExecutorThreadPool", "qualified_name": "org.springframework.scheduling.quartz.LocalTaskExecutorThreadPool", "short_description": " Quartz  ThreadPool  adapter that delegates to a Spring-managed Executor  instance, specified on  SchedulerFactoryBean . "},
{"api_id": 2792, "api_type": 2, "full_declaration": "MethodInvokingJobDetailFactoryBean", "qualified_name": "org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean", "short_description": " FactoryBean  that exposes a JobDetail  object which delegates job execution to a\nspecified (static or non-static) method. "},
{"api_id": 2793, "api_type": 2, "full_declaration": "MethodInvokingJobDetailFactoryBean.MethodInvokingJob", "qualified_name": "org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean.MethodInvokingJob", "short_description": " Quartz Job implementation that invokes a specified method. "},
{"api_id": 2794, "api_type": 2, "full_declaration": "MethodInvokingJobDetailFactoryBean.StatefulMethodInvokingJob", "qualified_name": "org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean.StatefulMethodInvokingJob", "short_description": " Extension of the MethodInvokingJob, implementing the StatefulJob interface. "},
{"api_id": 2795, "api_type": 2, "full_declaration": "QuartzJobBean", "qualified_name": "org.springframework.scheduling.quartz.QuartzJobBean", "short_description": " Simple implementation of the Quartz Job interface, applying the\npassed-in JobDataMap and also the SchedulerContext as bean property\nvalues. "},
{"api_id": 2796, "api_type": 2, "full_declaration": "ResourceLoaderClassLoadHelper", "qualified_name": "org.springframework.scheduling.quartz.ResourceLoaderClassLoadHelper", "short_description": " Wrapper that adapts from the Quartz  ClassLoadHelper  interface\nonto Spring's  ResourceLoader  interface. "},
{"api_id": 2797, "api_type": 2, "full_declaration": "SchedulerAccessor", "qualified_name": "org.springframework.scheduling.quartz.SchedulerAccessor", "short_description": " Common base class for accessing a Quartz Scheduler, i.e. "},
{"api_id": 2798, "api_type": 2, "full_declaration": "SchedulerAccessorBean", "qualified_name": "org.springframework.scheduling.quartz.SchedulerAccessorBean", "short_description": " Spring bean-style class for accessing a Quartz Scheduler, i.e. "},
{"api_id": 2799, "api_type": 2, "full_declaration": "SchedulerFactoryBean", "qualified_name": "org.springframework.scheduling.quartz.SchedulerFactoryBean", "short_description": " FactoryBean  that creates and configures a Quartz  Scheduler ,\nmanages its lifecycle as part of the Spring application context, and exposes the\nScheduler as bean reference for dependency injection. "},
{"api_id": 2800, "api_type": 2, "full_declaration": "SimpleThreadPoolTaskExecutor", "qualified_name": "org.springframework.scheduling.quartz.SimpleThreadPoolTaskExecutor", "short_description": " Subclass of Quartz's SimpleThreadPool that implements Spring's TaskExecutor  interface\nand listens to Spring lifecycle callbacks. "},
{"api_id": 2801, "api_type": 2, "full_declaration": "SimpleTriggerFactoryBean", "qualified_name": "org.springframework.scheduling.quartz.SimpleTriggerFactoryBean", "short_description": " A Spring  FactoryBean  for creating a Quartz  SimpleTrigger instance, supporting bean-style usage for trigger configuration. "},
{"api_id": 2802, "api_type": 2, "full_declaration": "SpringBeanJobFactory", "qualified_name": "org.springframework.scheduling.quartz.SpringBeanJobFactory", "short_description": " Subclass of  AdaptableJobFactory  that also supports Spring-style\ndependency injection on bean properties. "},
{"api_id": 2803, "api_type": 4, "full_declaration": "JobMethodInvocationFailedException", "qualified_name": "org.springframework.scheduling.quartz.JobMethodInvocationFailedException", "short_description": " Unchecked exception that wraps an exception thrown from a target method. "},
{"api_id": 2804, "api_type": 2, "full_declaration": "CronExpression", "qualified_name": "org.springframework.scheduling.support.CronExpression", "short_description": " Representation of a crontab expression that can calculate the next time it matches. "},
{"api_id": 2805, "api_type": 2, "full_declaration": "CronSequenceGenerator", "qualified_name": "org.springframework.scheduling.support.CronSequenceGenerator", "short_description": "Deprecated as of 5.3, in favor of  CronExpression "},
{"api_id": 2806, "api_type": 2, "full_declaration": "CronTrigger", "qualified_name": "org.springframework.scheduling.support.CronTrigger", "short_description": " Trigger  implementation for cron expressions. "},
{"api_id": 2807, "api_type": 2, "full_declaration": "DelegatingErrorHandlingRunnable", "qualified_name": "org.springframework.scheduling.support.DelegatingErrorHandlingRunnable", "short_description": " Runnable wrapper that catches any exception or error thrown from its\ndelegate Runnable and allows an  ErrorHandler  to handle it. "},
{"api_id": 2808, "api_type": 2, "full_declaration": "MethodInvokingRunnable", "qualified_name": "org.springframework.scheduling.support.MethodInvokingRunnable", "short_description": " Adapter that implements the  Runnable  interface as a configurable\nmethod invocation based on Spring's MethodInvoker. "},
{"api_id": 2809, "api_type": 2, "full_declaration": "PeriodicTrigger", "qualified_name": "org.springframework.scheduling.support.PeriodicTrigger", "short_description": " A trigger for periodic task execution. "},
{"api_id": 2810, "api_type": 2, "full_declaration": "ScheduledMethodRunnable", "qualified_name": "org.springframework.scheduling.support.ScheduledMethodRunnable", "short_description": " Variant of  MethodInvokingRunnable  meant to be used for processing\nof no-arg scheduled methods. "},
{"api_id": 2811, "api_type": 2, "full_declaration": "SimpleTriggerContext", "qualified_name": "org.springframework.scheduling.support.SimpleTriggerContext", "short_description": " Simple data holder implementation of the  TriggerContext  interface. "},
{"api_id": 2812, "api_type": 2, "full_declaration": "TaskUtils", "qualified_name": "org.springframework.scheduling.support.TaskUtils", "short_description": " Utility methods for decorating tasks with error handling. "},
{"api_id": 2813, "api_type": 3, "full_declaration": "ScriptEvaluator", "qualified_name": "org.springframework.scripting.ScriptEvaluator", "short_description": " Spring's strategy interface for evaluating a script. "},
{"api_id": 2814, "api_type": 3, "full_declaration": "ScriptFactory", "qualified_name": "org.springframework.scripting.ScriptFactory", "short_description": " Script definition interface, encapsulating the configuration\nof a specific script as well as a factory method for\ncreating the actual scripted Java  Object . "},
{"api_id": 2815, "api_type": 3, "full_declaration": "ScriptSource", "qualified_name": "org.springframework.scripting.ScriptSource", "short_description": " Interface that defines the source of a script. "},
{"api_id": 2816, "api_type": 4, "full_declaration": "ScriptCompilationException", "qualified_name": "org.springframework.scripting.ScriptCompilationException", "short_description": " Exception to be thrown on script compilation failure. "},
{"api_id": 2817, "api_type": 2, "full_declaration": "BshScriptEvaluator", "qualified_name": "org.springframework.scripting.bsh.BshScriptEvaluator", "short_description": " BeanShell-based implementation of Spring's  ScriptEvaluator  strategy interface. "},
{"api_id": 2818, "api_type": 2, "full_declaration": "BshScriptFactory", "qualified_name": "org.springframework.scripting.bsh.BshScriptFactory", "short_description": " ScriptFactory  implementation\nfor a BeanShell script. "},
{"api_id": 2819, "api_type": 2, "full_declaration": "BshScriptUtils", "qualified_name": "org.springframework.scripting.bsh.BshScriptUtils", "short_description": " Utility methods for handling BeanShell-scripted objects. "},
{"api_id": 2820, "api_type": 4, "full_declaration": "BshScriptUtils.BshExecutionException", "qualified_name": "org.springframework.scripting.bsh.BshScriptUtils.BshExecutionException", "short_description": " Exception to be thrown on script execution failure. "},
{"api_id": 2821, "api_type": 2, "full_declaration": "LangNamespaceHandler", "qualified_name": "org.springframework.scripting.config.LangNamespaceHandler", "short_description": " NamespaceHandler  that supports the wiring of\nobjects backed by dynamic languages such as Groovy, JRuby and\nBeanShell. "},
{"api_id": 2822, "api_type": 2, "full_declaration": "LangNamespaceUtils", "qualified_name": "org.springframework.scripting.config.LangNamespaceUtils", "short_description": " Utilities for use with  LangNamespaceHandler . "},
{"api_id": 2823, "api_type": 3, "full_declaration": "GroovyObjectCustomizer", "qualified_name": "org.springframework.scripting.groovy.GroovyObjectCustomizer", "short_description": " Strategy used by  GroovyScriptFactory  to allow the customization of\na created  GroovyObject . "},
{"api_id": 2824, "api_type": 2, "full_declaration": "GroovyScriptEvaluator", "qualified_name": "org.springframework.scripting.groovy.GroovyScriptEvaluator", "short_description": " Groovy-based implementation of Spring's  ScriptEvaluator  strategy interface. "},
{"api_id": 2825, "api_type": 2, "full_declaration": "GroovyScriptFactory", "qualified_name": "org.springframework.scripting.groovy.GroovyScriptFactory", "short_description": " ScriptFactory  implementation\nfor a Groovy script. "},
{"api_id": 2826, "api_type": 2, "full_declaration": "RefreshableScriptTargetSource", "qualified_name": "org.springframework.scripting.support.RefreshableScriptTargetSource", "short_description": " Subclass of  BeanFactoryRefreshableTargetSource  that determines whether\na refresh is required through the given  ScriptFactory . "},
{"api_id": 2827, "api_type": 2, "full_declaration": "ResourceScriptSource", "qualified_name": "org.springframework.scripting.support.ResourceScriptSource", "short_description": " ScriptSource  implementation\nbased on Spring's  Resource abstraction. "},
{"api_id": 2828, "api_type": 2, "full_declaration": "ScriptFactoryPostProcessor", "qualified_name": "org.springframework.scripting.support.ScriptFactoryPostProcessor", "short_description": " BeanPostProcessor  that\nhandles  ScriptFactory  definitions,\nreplacing each factory with the actual scripted Java object generated by it. "},
{"api_id": 2829, "api_type": 2, "full_declaration": "StandardScriptEvaluator", "qualified_name": "org.springframework.scripting.support.StandardScriptEvaluator", "short_description": " javax.script  (JSR-223) based implementation of Spring's  ScriptEvaluator strategy interface. "},
{"api_id": 2830, "api_type": 2, "full_declaration": "StandardScriptFactory", "qualified_name": "org.springframework.scripting.support.StandardScriptFactory", "short_description": " ScriptFactory  implementation based\non the JSR-223 script engine abstraction (as included in Java 6+). "},
{"api_id": 2831, "api_type": 2, "full_declaration": "StandardScriptUtils", "qualified_name": "org.springframework.scripting.support.StandardScriptUtils", "short_description": " Common operations for dealing with a JSR-223  ScriptEngine . "},
{"api_id": 2832, "api_type": 2, "full_declaration": "StaticScriptSource", "qualified_name": "org.springframework.scripting.support.StaticScriptSource", "short_description": " Static implementation of the ScriptSource  interface,\nencapsulating a given String that contains the script source text. "},
{"api_id": 2833, "api_type": 4, "full_declaration": "StandardScriptEvalException", "qualified_name": "org.springframework.scripting.support.StandardScriptEvalException", "short_description": " Exception decorating a  ScriptException  coming out of\nJSR-223 script evaluation, i.e. "},
{"api_id": 2834, "api_type": 9, "full_declaration": "Component", "qualified_name": "org.springframework.stereotype.Component", "short_description": " Indicates that an annotated class is a \"component\". "},
{"api_id": 2835, "api_type": 9, "full_declaration": "Controller", "qualified_name": "org.springframework.stereotype.Controller", "short_description": " Indicates that an annotated class is a \"Controller\" (e.g. "},
{"api_id": 2836, "api_type": 9, "full_declaration": "Indexed", "qualified_name": "org.springframework.stereotype.Indexed", "short_description": " Indicate that the annotated element represents a stereotype for the index. "},
{"api_id": 2837, "api_type": 9, "full_declaration": "Repository", "qualified_name": "org.springframework.stereotype.Repository", "short_description": " Indicates that an annotated class is a \"Repository\", originally defined by\nDomain-Driven Design (Evans, 2003) as \"a mechanism for encapsulating storage,\nretrieval, and search behavior which emulates a collection of objects\". "},
{"api_id": 2838, "api_type": 9, "full_declaration": "Service", "qualified_name": "org.springframework.stereotype.Service", "short_description": " Indicates that an annotated class is a \"Service\", originally defined by Domain-Driven\nDesign (Evans, 2003) as \"an operation offered as an interface that stands alone in the\nmodel, with no encapsulated state.\" "},
{"api_id": 2839, "api_type": 3, "full_declaration": "ProfileValueSource", "qualified_name": "org.springframework.test.annotation.ProfileValueSource", "short_description": " Strategy interface for retrieving  profile values  for a given\ntesting environment. "},
{"api_id": 2840, "api_type": 2, "full_declaration": "ProfileValueUtils", "qualified_name": "org.springframework.test.annotation.ProfileValueUtils", "short_description": " General utility methods for working with  profile values . "},
{"api_id": 2841, "api_type": 2, "full_declaration": "SystemProfileValueSource", "qualified_name": "org.springframework.test.annotation.SystemProfileValueSource", "short_description": " Implementation of  ProfileValueSource  which uses system properties as\nthe underlying source. "},
{"api_id": 2842, "api_type": 2, "full_declaration": "TestAnnotationUtils", "qualified_name": "org.springframework.test.annotation.TestAnnotationUtils", "short_description": " Collection of utility methods for working with Spring's core testing annotations. "},
{"api_id": 2843, "api_type": 8, "full_declaration": "DirtiesContext.ClassMode", "qualified_name": "org.springframework.test.annotation.DirtiesContext.ClassMode", "short_description": " Defines  modes  which determine how  @DirtiesContext  is\ninterpreted when used to annotate a test class. "},
{"api_id": 2844, "api_type": 8, "full_declaration": "DirtiesContext.HierarchyMode", "qualified_name": "org.springframework.test.annotation.DirtiesContext.HierarchyMode", "short_description": " Defines  modes  which determine how the context cache is cleared\nwhen  @DirtiesContext  is used in a test whose context is\nconfigured as part of a hierarchy via @ContextHierarchy . "},
{"api_id": 2845, "api_type": 8, "full_declaration": "DirtiesContext.MethodMode", "qualified_name": "org.springframework.test.annotation.DirtiesContext.MethodMode", "short_description": " Defines  modes  which determine how  @DirtiesContext  is\ninterpreted when used to annotate a test method. "},
{"api_id": 2846, "api_type": 9, "full_declaration": "Commit", "qualified_name": "org.springframework.test.annotation.Commit", "short_description": " @Commit  is a test annotation that is used to indicate that a test-managed transaction  should be  committed  after\nthe test method has completed. "},
{"api_id": 2847, "api_type": 9, "full_declaration": "DirtiesContext", "qualified_name": "org.springframework.test.annotation.DirtiesContext", "short_description": " Test annotation which indicates that the ApplicationContext associated with a test is  dirty  and should therefore be closed\nand removed from the context cache. "},
{"api_id": 2848, "api_type": 9, "full_declaration": "IfProfileValue", "qualified_name": "org.springframework.test.annotation.IfProfileValue", "short_description": " Test annotation for use with JUnit 4 to indicate whether a test is enabled or\ndisabled for a specific testing profile. "},
{"api_id": 2849, "api_type": 9, "full_declaration": "ProfileValueSourceConfiguration", "qualified_name": "org.springframework.test.annotation.ProfileValueSourceConfiguration", "short_description": " ProfileValueSourceConfiguration  is a class-level annotation for use\nwith JUnit 4 which is used to specify what type of  ProfileValueSource to use when retrieving  profile values  configured via @IfProfileValue . "},
{"api_id": 2850, "api_type": 9, "full_declaration": "Repeat", "qualified_name": "org.springframework.test.annotation.Repeat", "short_description": " Test annotation for use with JUnit 4 to indicate that a test method should be\ninvoked repeatedly. "},
{"api_id": 2851, "api_type": 9, "full_declaration": "Rollback", "qualified_name": "org.springframework.test.annotation.Rollback", "short_description": " @Rollback  is a test annotation that is used to indicate whether\na  test-managed transaction  should be  rolled back  after\nthe test method has completed. "},
{"api_id": 2852, "api_type": 9, "full_declaration": "Timed", "qualified_name": "org.springframework.test.annotation.Timed", "short_description": " Test annotation for use with JUnit 4 to indicate that a test method has to finish\nexecution in a  specified time period . "},
{"api_id": 2853, "api_type": 3, "full_declaration": "ActiveProfilesResolver", "qualified_name": "org.springframework.test.context.ActiveProfilesResolver", "short_description": " Strategy interface for programmatically resolving which  active bean\ndefinition profiles  should be used when loading an ApplicationContext for a test class. "},
{"api_id": 2854, "api_type": 3, "full_declaration": "BootstrapContext", "qualified_name": "org.springframework.test.context.BootstrapContext", "short_description": " BootstrapContext  encapsulates the context in which the  Spring\nTestContext Framework  is bootstrapped. "},
{"api_id": 2855, "api_type": 3, "full_declaration": "CacheAwareContextLoaderDelegate", "qualified_name": "org.springframework.test.context.CacheAwareContextLoaderDelegate", "short_description": " A  CacheAwareContextLoaderDelegate  is responsible for  loading  and  closing  application\ncontexts, interacting transparently with a ContextCache behind the scenes. "},
{"api_id": 2856, "api_type": 3, "full_declaration": "ContextCustomizer", "qualified_name": "org.springframework.test.context.ContextCustomizer", "short_description": " Strategy interface for customizing  application contexts  that are created and managed by the  Spring\nTestContext Framework . "},
{"api_id": 2857, "api_type": 3, "full_declaration": "ContextCustomizerFactory", "qualified_name": "org.springframework.test.context.ContextCustomizerFactory", "short_description": " Factory for creating  ContextCustomizers . "},
{"api_id": 2858, "api_type": 3, "full_declaration": "ContextLoader", "qualified_name": "org.springframework.test.context.ContextLoader", "short_description": " Strategy interface for loading an  application context for an integration test managed by the Spring TestContext Framework. "},
{"api_id": 2859, "api_type": 3, "full_declaration": "DynamicPropertyRegistry", "qualified_name": "org.springframework.test.context.DynamicPropertyRegistry", "short_description": " Registry used with  @DynamicPropertySource methods so that they can add properties to the  Environment  that have\ndynamically resolved values. "},
{"api_id": 2860, "api_type": 3, "full_declaration": "SmartContextLoader", "qualified_name": "org.springframework.test.context.SmartContextLoader", "short_description": " Strategy interface for loading an  application context for an integration test managed by the Spring TestContext Framework. "},
{"api_id": 2861, "api_type": 3, "full_declaration": "TestContext", "qualified_name": "org.springframework.test.context.TestContext", "short_description": " TestContext  encapsulates the context in which a test is executed,\nagnostic of the actual testing framework in use. "},
{"api_id": 2862, "api_type": 3, "full_declaration": "TestContextBootstrapper", "qualified_name": "org.springframework.test.context.TestContextBootstrapper", "short_description": " TestContextBootstrapper  defines the SPI for bootstrapping the Spring TestContext Framework . "},
{"api_id": 2863, "api_type": 3, "full_declaration": "TestExecutionListener", "qualified_name": "org.springframework.test.context.TestExecutionListener", "short_description": " TestExecutionListener  defines a  listener  API for reacting to\ntest execution events published by the  TestContextManager  with which\nthe listener is registered. "},
{"api_id": 2864, "api_type": 2, "full_declaration": "ContextConfigurationAttributes", "qualified_name": "org.springframework.test.context.ContextConfigurationAttributes", "short_description": " ContextConfigurationAttributes  encapsulates the context configuration\nattributes declared via  @ContextConfiguration . "},
{"api_id": 2865, "api_type": 2, "full_declaration": "MergedContextConfiguration", "qualified_name": "org.springframework.test.context.MergedContextConfiguration", "short_description": " MergedContextConfiguration  encapsulates the  merged context configuration declared on a test class and all of its superclasses\nvia  @ContextConfiguration , @ActiveProfiles , and @TestPropertySource . "},
{"api_id": 2866, "api_type": 2, "full_declaration": "TestContextAnnotationUtils", "qualified_name": "org.springframework.test.context.TestContextAnnotationUtils", "short_description": " TestContextAnnotationUtils  is a collection of utility methods that\ncomplements the standard support already available in  AnnotationUtils and  AnnotatedElementUtils , while transparently honoring @NestedTestConfiguration  semantics. "},
{"api_id": 2867, "api_type": 2, "full_declaration": "TestContextAnnotationUtils.AnnotationDescriptor", "qualified_name": "org.springframework.test.context.TestContextAnnotationUtils.AnnotationDescriptor", "short_description": " Descriptor for an  Annotation , including the  class  on which the annotation is  declared as well as the  merged annotation  instance. "},
{"api_id": 2868, "api_type": 2, "full_declaration": "TestContextAnnotationUtils.UntypedAnnotationDescriptor", "qualified_name": "org.springframework.test.context.TestContextAnnotationUtils.UntypedAnnotationDescriptor", "short_description": " Untyped  extension of  TestContextAnnotationUtils.AnnotationDescriptor  that is used\nto describe the declaration of one of several candidate annotation types\nwhere the actual annotation type cannot be predetermined. "},
{"api_id": 2869, "api_type": 2, "full_declaration": "TestContextManager", "qualified_name": "org.springframework.test.context.TestContextManager", "short_description": " TestContextManager  is the main entry point into the  Spring\nTestContext Framework . "},
{"api_id": 2870, "api_type": 8, "full_declaration": "NestedTestConfiguration.EnclosingConfiguration", "qualified_name": "org.springframework.test.context.NestedTestConfiguration.EnclosingConfiguration", "short_description": " Enumeration of  modes  that dictate how test configuration from\nenclosing classes is processed for inner test classes. "},
{"api_id": 2871, "api_type": 8, "full_declaration": "TestConstructor.AutowireMode", "qualified_name": "org.springframework.test.context.TestConstructor.AutowireMode", "short_description": " Defines autowiring modes for parameters in a test constructor. "},
{"api_id": 2872, "api_type": 8, "full_declaration": "TestExecutionListeners.MergeMode", "qualified_name": "org.springframework.test.context.TestExecutionListeners.MergeMode", "short_description": " Enumeration of  modes  that dictate whether or not explicitly\ndeclared listeners are merged with the default listeners when @TestExecutionListeners  is declared on a class that does not  inherit listeners from a superclass. "},
{"api_id": 2873, "api_type": 9, "full_declaration": "ActiveProfiles", "qualified_name": "org.springframework.test.context.ActiveProfiles", "short_description": " ActiveProfiles  is a class-level annotation that is used to declare\nwhich  active bean definition profiles  should be used when loading\nan  ApplicationContext for test classes. "},
{"api_id": 2874, "api_type": 9, "full_declaration": "BootstrapWith", "qualified_name": "org.springframework.test.context.BootstrapWith", "short_description": " @BootstrapWith  defines class-level metadata that is used to determine\nhow to bootstrap the  Spring TestContext Framework . "},
{"api_id": 2875, "api_type": 9, "full_declaration": "ContextConfiguration", "qualified_name": "org.springframework.test.context.ContextConfiguration", "short_description": " @ContextConfiguration  defines class-level metadata that is used to determine\nhow to load and configure an  ApplicationContext  for integration tests. "},
{"api_id": 2876, "api_type": 9, "full_declaration": "ContextHierarchy", "qualified_name": "org.springframework.test.context.ContextHierarchy", "short_description": " @ContextHierarchy  is a class-level annotation that is used to define\na hierarchy of  ApplicationContexts  for integration tests. "},
{"api_id": 2877, "api_type": 9, "full_declaration": "DynamicPropertySource", "qualified_name": "org.springframework.test.context.DynamicPropertySource", "short_description": " Method-level annotation for integration tests that need to add properties with\ndynamic values to the  Environment 's set of  PropertySources . "},
{"api_id": 2878, "api_type": 9, "full_declaration": "NestedTestConfiguration", "qualified_name": "org.springframework.test.context.NestedTestConfiguration", "short_description": " @NestedTestConfiguration  is a type-level annotation that is used to\nconfigure how Spring test configuration annotations are processed within\nenclosing class hierarchies (i.e., for  inner  test classes). "},
{"api_id": 2879, "api_type": 9, "full_declaration": "TestConstructor", "qualified_name": "org.springframework.test.context.TestConstructor", "short_description": " @TestConstructor  is a type-level annotation that is used to configure\nhow the parameters of a test class constructor are autowired from components\nin the test's  ApplicationContext . "},
{"api_id": 2880, "api_type": 9, "full_declaration": "TestExecutionListeners", "qualified_name": "org.springframework.test.context.TestExecutionListeners", "short_description": " TestExecutionListeners  defines class-level metadata for configuring\nwhich  TestExecutionListeners  should be\nregistered with a  TestContextManager . "},
{"api_id": 2881, "api_type": 9, "full_declaration": "TestPropertySource", "qualified_name": "org.springframework.test.context.TestPropertySource", "short_description": " @TestPropertySource  is a class-level annotation that is used to\nconfigure the  TestPropertySource.locations()  of properties files and inlined TestPropertySource.properties()  to be added to the  Environment 's set of PropertySources  for an ApplicationContext for integration tests. "},
{"api_id": 2882, "api_type": 9, "full_declaration": "TestPropertySources", "qualified_name": "org.springframework.test.context.TestPropertySources", "short_description": " @TestPropertySources  is a container for one or more @TestPropertySource  declarations. "},
{"api_id": 2883, "api_type": 3, "full_declaration": "ContextCache", "qualified_name": "org.springframework.test.context.cache.ContextCache", "short_description": " ContextCache  defines the SPI for caching Spring ApplicationContexts  within the Spring TestContext Framework . "},
{"api_id": 2884, "api_type": 2, "full_declaration": "ContextCacheUtils", "qualified_name": "org.springframework.test.context.cache.ContextCacheUtils", "short_description": " Collection of utilities for working with  ContextCaches . "},
{"api_id": 2885, "api_type": 2, "full_declaration": "DefaultCacheAwareContextLoaderDelegate", "qualified_name": "org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate", "short_description": " Default implementation of the  CacheAwareContextLoaderDelegate  interface. "},
{"api_id": 2886, "api_type": 2, "full_declaration": "DefaultContextCache", "qualified_name": "org.springframework.test.context.cache.DefaultContextCache", "short_description": " Default implementation of the  ContextCache  API. "},
{"api_id": 2887, "api_type": 2, "full_declaration": "AfterTestClassEvent", "qualified_name": "org.springframework.test.context.event.AfterTestClassEvent", "short_description": " TestContextEvent  published by the  EventPublishingTestExecutionListener  when TestExecutionListener.afterTestClass(TestContext) is invoked. "},
{"api_id": 2888, "api_type": 2, "full_declaration": "AfterTestExecutionEvent", "qualified_name": "org.springframework.test.context.event.AfterTestExecutionEvent", "short_description": " TestContextEvent  published by the  EventPublishingTestExecutionListener  when TestExecutionListener.afterTestExecution(TestContext) is invoked. "},
{"api_id": 2889, "api_type": 2, "full_declaration": "AfterTestMethodEvent", "qualified_name": "org.springframework.test.context.event.AfterTestMethodEvent", "short_description": " TestContextEvent  published by the  EventPublishingTestExecutionListener  when TestExecutionListener.afterTestMethod(TestContext) is invoked. "},
{"api_id": 2890, "api_type": 2, "full_declaration": "BeforeTestClassEvent", "qualified_name": "org.springframework.test.context.event.BeforeTestClassEvent", "short_description": " TestContextEvent  published by the  EventPublishingTestExecutionListener  when TestExecutionListener.beforeTestClass(TestContext) is invoked. "},
{"api_id": 2891, "api_type": 2, "full_declaration": "BeforeTestExecutionEvent", "qualified_name": "org.springframework.test.context.event.BeforeTestExecutionEvent", "short_description": " TestContextEvent  published by the  EventPublishingTestExecutionListener  when TestExecutionListener.beforeTestExecution(TestContext) is invoked. "},
{"api_id": 2892, "api_type": 2, "full_declaration": "BeforeTestMethodEvent", "qualified_name": "org.springframework.test.context.event.BeforeTestMethodEvent", "short_description": " TestContextEvent  published by the  EventPublishingTestExecutionListener  when TestExecutionListener.beforeTestMethod(TestContext) is invoked. "},
{"api_id": 2893, "api_type": 2, "full_declaration": "EventPublishingTestExecutionListener", "qualified_name": "org.springframework.test.context.event.EventPublishingTestExecutionListener", "short_description": " TestExecutionListener that publishes test execution events to the ApplicationContext for the currently executing test. "},
{"api_id": 2894, "api_type": 2, "full_declaration": "PrepareTestInstanceEvent", "qualified_name": "org.springframework.test.context.event.PrepareTestInstanceEvent", "short_description": " TestContextEvent  published by the  EventPublishingTestExecutionListener  when TestExecutionListener.prepareTestInstance(TestContext) is invoked. "},
{"api_id": 2895, "api_type": 2, "full_declaration": "TestContextEvent", "qualified_name": "org.springframework.test.context.event.TestContextEvent", "short_description": " Base class for events published by the  EventPublishingTestExecutionListener . "},
{"api_id": 2896, "api_type": 9, "full_declaration": "AfterTestClass", "qualified_name": "org.springframework.test.context.event.annotation.AfterTestClass", "short_description": " @EventListener  annotation used to consume a AfterTestClassEvent  published by the EventPublishingTestExecutionListener . "},
{"api_id": 2897, "api_type": 9, "full_declaration": "AfterTestExecution", "qualified_name": "org.springframework.test.context.event.annotation.AfterTestExecution", "short_description": " @EventListener  annotation used to consume a AfterTestExecutionEvent  published by the EventPublishingTestExecutionListener . "},
{"api_id": 2898, "api_type": 9, "full_declaration": "AfterTestMethod", "qualified_name": "org.springframework.test.context.event.annotation.AfterTestMethod", "short_description": " @EventListener  annotation used to consume a AfterTestMethodEvent  published by the EventPublishingTestExecutionListener . "},
{"api_id": 2899, "api_type": 9, "full_declaration": "BeforeTestClass", "qualified_name": "org.springframework.test.context.event.annotation.BeforeTestClass", "short_description": " @EventListener  annotation used to consume a BeforeTestClassEvent  published by the EventPublishingTestExecutionListener . "},
{"api_id": 2900, "api_type": 9, "full_declaration": "BeforeTestExecution", "qualified_name": "org.springframework.test.context.event.annotation.BeforeTestExecution", "short_description": " @EventListener  annotation used to consume a BeforeTestExecution  published by the EventPublishingTestExecutionListener . "},
{"api_id": 2901, "api_type": 9, "full_declaration": "BeforeTestMethod", "qualified_name": "org.springframework.test.context.event.annotation.BeforeTestMethod", "short_description": " @EventListener  annotation used to consume a BeforeTestMethodEvent  published by the EventPublishingTestExecutionListener . "},
{"api_id": 2902, "api_type": 9, "full_declaration": "PrepareTestInstance", "qualified_name": "org.springframework.test.context.event.annotation.PrepareTestInstance", "short_description": " @EventListener  annotation used to consume a PrepareTestInstanceEvent  published by the EventPublishingTestExecutionListener . "},
{"api_id": 2903, "api_type": 2, "full_declaration": "SqlScriptsTestExecutionListener", "qualified_name": "org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener", "short_description": " TestExecutionListener  that provides support for executing SQL scripts  and inlined  statements configured via the  @Sql  annotation. "},
{"api_id": 2904, "api_type": 8, "full_declaration": "Sql.ExecutionPhase", "qualified_name": "org.springframework.test.context.jdbc.Sql.ExecutionPhase", "short_description": " Enumeration of  phases  that dictate when SQL scripts are executed. "},
{"api_id": 2905, "api_type": 8, "full_declaration": "SqlConfig.ErrorMode", "qualified_name": "org.springframework.test.context.jdbc.SqlConfig.ErrorMode", "short_description": " Enumeration of  modes  that dictate how errors are handled while\nexecuting SQL statements. "},
{"api_id": 2906, "api_type": 8, "full_declaration": "SqlConfig.TransactionMode", "qualified_name": "org.springframework.test.context.jdbc.SqlConfig.TransactionMode", "short_description": " Enumeration of  modes  that dictate whether SQL scripts should be\nexecuted within a transaction and what the transaction propagation behavior\nshould be. "},
{"api_id": 2907, "api_type": 8, "full_declaration": "SqlMergeMode.MergeMode", "qualified_name": "org.springframework.test.context.jdbc.SqlMergeMode.MergeMode", "short_description": " Enumeration of  modes  that dictate whether method-level  @Sql declarations are merged with class-level  @Sql  declarations. "},
{"api_id": 2908, "api_type": 9, "full_declaration": "Sql", "qualified_name": "org.springframework.test.context.jdbc.Sql", "short_description": " @Sql  is used to annotate a test class or test method to configure\nSQL  Sql.scripts()  and  Sql.statements()  to be executed against a given\ndatabase during integration tests. "},
{"api_id": 2909, "api_type": 9, "full_declaration": "SqlConfig", "qualified_name": "org.springframework.test.context.jdbc.SqlConfig", "short_description": " @SqlConfig  defines metadata that is used to determine how to parse\nand execute SQL scripts configured via the  @Sql  annotation. "},
{"api_id": 2910, "api_type": 9, "full_declaration": "SqlGroup", "qualified_name": "org.springframework.test.context.jdbc.SqlGroup", "short_description": " Container annotation that aggregates several  @Sql  annotations. "},
{"api_id": 2911, "api_type": 9, "full_declaration": "SqlMergeMode", "qualified_name": "org.springframework.test.context.jdbc.SqlMergeMode", "short_description": " @SqlMergeMode  is used to annotate a test class or test method to\nconfigure whether method-level  @Sql  declarations are merged with\nclass-level  @Sql  declarations. "},
{"api_id": 2912, "api_type": 2, "full_declaration": "DisabledIfCondition", "qualified_name": "org.springframework.test.context.junit.jupiter.DisabledIfCondition", "short_description": " DisabledIfCondition  is an  ExecutionCondition  that supports the  @DisabledIf  annotation when using the  Spring\nTestContext Framework  in conjunction with JUnit 5's  Jupiter  programming model. "},
{"api_id": 2913, "api_type": 2, "full_declaration": "EnabledIfCondition", "qualified_name": "org.springframework.test.context.junit.jupiter.EnabledIfCondition", "short_description": " EnabledIfCondition  is an  ExecutionCondition that supports the  @EnabledIf  annotation when using the  Spring\nTestContext Framework  in conjunction with JUnit 5's  Jupiter  programming model. "},
{"api_id": 2914, "api_type": 2, "full_declaration": "SpringExtension", "qualified_name": "org.springframework.test.context.junit.jupiter.SpringExtension", "short_description": " SpringExtension  integrates the  Spring TestContext Framework into JUnit 5's  Jupiter  programming model. "},
{"api_id": 2915, "api_type": 9, "full_declaration": "DisabledIf", "qualified_name": "org.springframework.test.context.junit.jupiter.DisabledIf", "short_description": " @DisabledIf  is used to signal that the annotated test class or test\nmethod is  disabled  and should not be executed if the supplied DisabledIf.expression()  evaluates to  true . "},
{"api_id": 2916, "api_type": 9, "full_declaration": "EnabledIf", "qualified_name": "org.springframework.test.context.junit.jupiter.EnabledIf", "short_description": " @EnabledIf  is used to signal that the annotated test class or test\nmethod is  enabled  and should be executed if the supplied EnabledIf.expression()  evaluates to  true . "},
{"api_id": 2917, "api_type": 9, "full_declaration": "SpringJUnitConfig", "qualified_name": "org.springframework.test.context.junit.jupiter.SpringJUnitConfig", "short_description": " @SpringJUnitConfig  is a  composed annotation  that combines @ExtendWith(SpringExtension.class)  from JUnit Jupiter with @ContextConfiguration  from the  Spring TestContext\nFramework . "},
{"api_id": 2918, "api_type": 9, "full_declaration": "SpringJUnitWebConfig", "qualified_name": "org.springframework.test.context.junit.jupiter.web.SpringJUnitWebConfig", "short_description": " @SpringJUnitWebConfig  is a  composed annotation  that combines @ExtendWith(SpringExtension.class)  from JUnit Jupiter with @ContextConfiguration  and @WebAppConfiguration  from the  Spring TestContext\nFramework . "},
{"api_id": 2919, "api_type": 2, "full_declaration": "AbstractJUnit4SpringContextTests", "qualified_name": "org.springframework.test.context.junit4.AbstractJUnit4SpringContextTests", "short_description": " Abstract base test class which integrates the  Spring TestContext\nFramework  with explicit  ApplicationContext  testing support\nin a  JUnit 4  environment. "},
{"api_id": 2920, "api_type": 2, "full_declaration": "AbstractTransactionalJUnit4SpringContextTests", "qualified_name": "org.springframework.test.context.junit4.AbstractTransactionalJUnit4SpringContextTests", "short_description": " Abstract  transactional  extension of AbstractJUnit4SpringContextTests  which adds convenience functionality\nfor JDBC access. "},
{"api_id": 2921, "api_type": 2, "full_declaration": "SpringJUnit4ClassRunner", "qualified_name": "org.springframework.test.context.junit4.SpringJUnit4ClassRunner", "short_description": " SpringJUnit4ClassRunner  is a custom extension of JUnit's BlockJUnit4ClassRunner  which provides functionality of the Spring TestContext Framework  to standard JUnit tests by means of the TestContextManager  and associated support classes and annotations. "},
{"api_id": 2922, "api_type": 2, "full_declaration": "SpringRunner", "qualified_name": "org.springframework.test.context.junit4.SpringRunner", "short_description": " SpringRunner  is an  alias  for the  SpringJUnit4ClassRunner . "},
{"api_id": 2923, "api_type": 2, "full_declaration": "SpringClassRule", "qualified_name": "org.springframework.test.context.junit4.rules.SpringClassRule", "short_description": " SpringClassRule  is a custom JUnit  TestRule  that supports class-level  features of the  Spring TestContext Framework in standard JUnit tests by means of the  TestContextManager  and\nassociated support classes and annotations. "},
{"api_id": 2924, "api_type": 2, "full_declaration": "SpringMethodRule", "qualified_name": "org.springframework.test.context.junit4.rules.SpringMethodRule", "short_description": " SpringMethodRule  is a custom JUnit 4  MethodRule  that\nsupports instance-level and method-level features of the Spring TestContext Framework  in standard JUnit tests by means\nof the  TestContextManager  and associated support classes and\nannotations. "},
{"api_id": 2925, "api_type": 2, "full_declaration": "ProfileValueChecker", "qualified_name": "org.springframework.test.context.junit4.statements.ProfileValueChecker", "short_description": " ProfileValueChecker  is a custom JUnit  Statement  that checks\nwhether a test class or test method is enabled in the current environment\nvia Spring's  @IfProfileValue  annotation. "},
{"api_id": 2926, "api_type": 2, "full_declaration": "RunAfterTestClassCallbacks", "qualified_name": "org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks", "short_description": " RunAfterTestClassCallbacks  is a custom JUnit  Statement  which allows\nthe  Spring TestContext Framework  to be plugged into the JUnit execution chain\nby calling  afterTestClass()  on the supplied TestContextManager . "},
{"api_id": 2927, "api_type": 2, "full_declaration": "RunAfterTestExecutionCallbacks", "qualified_name": "org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks", "short_description": " RunAfterTestExecutionCallbacks  is a custom JUnit  Statement which allows the  Spring TestContext Framework  to be plugged into the\nJUnit 4 execution chain by calling  afterTestExecution()  on the supplied  TestContextManager . "},
{"api_id": 2928, "api_type": 2, "full_declaration": "RunAfterTestMethodCallbacks", "qualified_name": "org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks", "short_description": " RunAfterTestMethodCallbacks  is a custom JUnit  Statement  which allows\nthe  Spring TestContext Framework  to be plugged into the JUnit execution chain\nby calling  afterTestMethod()  on the supplied TestContextManager . "},
{"api_id": 2929, "api_type": 2, "full_declaration": "RunBeforeTestClassCallbacks", "qualified_name": "org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks", "short_description": " RunBeforeTestClassCallbacks  is a custom JUnit  Statement  which allows\nthe  Spring TestContext Framework  to be plugged into the JUnit execution chain\nby calling  beforeTestClass()  on the\nsupplied  TestContextManager . "},
{"api_id": 2930, "api_type": 2, "full_declaration": "RunBeforeTestExecutionCallbacks", "qualified_name": "org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks", "short_description": " RunBeforeTestExecutionCallbacks  is a custom JUnit  Statement which allows the  Spring TestContext Framework  to be plugged into the\nJUnit 4 execution chain by calling  beforeTestExecution()  on the supplied  TestContextManager . "},
{"api_id": 2931, "api_type": 2, "full_declaration": "RunBeforeTestMethodCallbacks", "qualified_name": "org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks", "short_description": " RunBeforeTestMethodCallbacks  is a custom JUnit  Statement  which allows\nthe  Spring TestContext Framework  to be plugged into the JUnit execution chain\nby calling  beforeTestMethod()  on the supplied  TestContextManager . "},
{"api_id": 2932, "api_type": 2, "full_declaration": "RunPrepareTestInstanceCallbacks", "qualified_name": "org.springframework.test.context.junit4.statements.RunPrepareTestInstanceCallbacks", "short_description": " RunPrepareTestInstanceCallbacks  is a custom JUnit  Statement  which\nallows the  Spring TestContext Framework  to be plugged into the JUnit\nexecution chain by calling  prepareTestInstance()  on the supplied  TestContextManager . "},
{"api_id": 2933, "api_type": 2, "full_declaration": "SpringFailOnTimeout", "qualified_name": "org.springframework.test.context.junit4.statements.SpringFailOnTimeout", "short_description": " SpringFailOnTimeout  is a custom JUnit  Statement  which adds\nsupport for Spring's  @Timed annotation by throwing an exception if the next statement in the execution\nchain takes more than the specified number of milliseconds. "},
{"api_id": 2934, "api_type": 2, "full_declaration": "SpringRepeat", "qualified_name": "org.springframework.test.context.junit4.statements.SpringRepeat", "short_description": " SpringRepeat  is a custom JUnit  Statement  which adds support\nfor Spring's  @Repeat annotation by repeating the test the specified number of times. "},
{"api_id": 2935, "api_type": 3, "full_declaration": "PropertyProvider", "qualified_name": "org.springframework.test.context.support.PropertyProvider", "short_description": " Strategy for providing named properties \u2014 for example, for looking up\nkey-value pairs in a generic fashion. "},
{"api_id": 2936, "api_type": 2, "full_declaration": "AbstractContextLoader", "qualified_name": "org.springframework.test.context.support.AbstractContextLoader", "short_description": " Abstract application context loader that provides a basis for all concrete\nimplementations of the  ContextLoader  SPI. "},
{"api_id": 2937, "api_type": 2, "full_declaration": "AbstractDelegatingSmartContextLoader", "qualified_name": "org.springframework.test.context.support.AbstractDelegatingSmartContextLoader", "short_description": " AbstractDelegatingSmartContextLoader  serves as an abstract base class\nfor implementations of the  SmartContextLoader  SPI that delegate to a\nset of  candidate  SmartContextLoaders (i.e., one that supports XML\nconfiguration files or Groovy scripts and one that supports annotated classes)\nto determine which context loader is appropriate for a given test class's\nconfiguration. "},
{"api_id": 2938, "api_type": 2, "full_declaration": "AbstractDirtiesContextTestExecutionListener", "qualified_name": "org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener", "short_description": " Abstract base class for  TestExecutionListener  implementations that\nprovide support for marking the  ApplicationContext  associated with\na test as  dirty  for both test classes and test methods annotated\nwith the  @DirtiesContext  annotation. "},
{"api_id": 2939, "api_type": 2, "full_declaration": "AbstractGenericContextLoader", "qualified_name": "org.springframework.test.context.support.AbstractGenericContextLoader", "short_description": " Abstract, generic extension of  AbstractContextLoader  that loads a GenericApplicationContext . "},
{"api_id": 2940, "api_type": 2, "full_declaration": "AbstractTestContextBootstrapper", "qualified_name": "org.springframework.test.context.support.AbstractTestContextBootstrapper", "short_description": " Abstract implementation of the  TestContextBootstrapper  interface which\nprovides most of the behavior required by a bootstrapper. "},
{"api_id": 2941, "api_type": 2, "full_declaration": "AbstractTestExecutionListener", "qualified_name": "org.springframework.test.context.support.AbstractTestExecutionListener", "short_description": " Abstract  ordered  implementation of the TestExecutionListener  API. "},
{"api_id": 2942, "api_type": 2, "full_declaration": "AnnotationConfigContextLoader", "qualified_name": "org.springframework.test.context.support.AnnotationConfigContextLoader", "short_description": " Concrete implementation of  AbstractGenericContextLoader  that loads\nbean definitions from component classes. "},
{"api_id": 2943, "api_type": 2, "full_declaration": "AnnotationConfigContextLoaderUtils", "qualified_name": "org.springframework.test.context.support.AnnotationConfigContextLoaderUtils", "short_description": " Utility methods for  SmartContextLoaders  that deal\nwith component classes (e.g.,  @Configuration  classes). "},
{"api_id": 2944, "api_type": 2, "full_declaration": "DefaultActiveProfilesResolver", "qualified_name": "org.springframework.test.context.support.DefaultActiveProfilesResolver", "short_description": " Default implementation of the  ActiveProfilesResolver  strategy that\nresolves  active bean definition profiles  based solely on profiles\nconfigured declaratively via  ActiveProfiles.profiles()  or ActiveProfiles.value() . "},
{"api_id": 2945, "api_type": 2, "full_declaration": "DefaultBootstrapContext", "qualified_name": "org.springframework.test.context.support.DefaultBootstrapContext", "short_description": " Default implementation of the  BootstrapContext  interface. "},
{"api_id": 2946, "api_type": 2, "full_declaration": "DefaultTestContext", "qualified_name": "org.springframework.test.context.support.DefaultTestContext", "short_description": " Default implementation of the  TestContext  interface. "},
{"api_id": 2947, "api_type": 2, "full_declaration": "DefaultTestContextBootstrapper", "qualified_name": "org.springframework.test.context.support.DefaultTestContextBootstrapper", "short_description": " Default implementation of the  TestContextBootstrapper  SPI. "},
{"api_id": 2948, "api_type": 2, "full_declaration": "DelegatingSmartContextLoader", "qualified_name": "org.springframework.test.context.support.DelegatingSmartContextLoader", "short_description": " DelegatingSmartContextLoader  is a concrete implementation of AbstractDelegatingSmartContextLoader  that delegates to a GenericXmlContextLoader  (or a  GenericGroovyXmlContextLoader  if Groovy\nis present in the classpath) and an  AnnotationConfigContextLoader . "},
{"api_id": 2949, "api_type": 2, "full_declaration": "DependencyInjectionTestExecutionListener", "qualified_name": "org.springframework.test.context.support.DependencyInjectionTestExecutionListener", "short_description": " TestExecutionListener  which provides support for dependency\ninjection and initialization of test instances. "},
{"api_id": 2950, "api_type": 2, "full_declaration": "DirtiesContextBeforeModesTestExecutionListener", "qualified_name": "org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener", "short_description": " TestExecutionListener  which provides support for marking the ApplicationContext  associated with a test as  dirty  for\nboth test classes and test methods annotated with the @DirtiesContext  annotation. "},
{"api_id": 2951, "api_type": 2, "full_declaration": "DirtiesContextTestExecutionListener", "qualified_name": "org.springframework.test.context.support.DirtiesContextTestExecutionListener", "short_description": " TestExecutionListener  which provides support for marking the ApplicationContext  associated with a test as  dirty  for\nboth test classes and test methods annotated with the @DirtiesContext  annotation. "},
{"api_id": 2952, "api_type": 2, "full_declaration": "GenericGroovyXmlContextLoader", "qualified_name": "org.springframework.test.context.support.GenericGroovyXmlContextLoader", "short_description": " Concrete implementation of  AbstractGenericContextLoader  that reads\nbean definitions from Groovy scripts  and  XML configuration files. "},
{"api_id": 2953, "api_type": 2, "full_declaration": "GenericPropertiesContextLoader", "qualified_name": "org.springframework.test.context.support.GenericPropertiesContextLoader", "short_description": "Deprecated as of 5.3, in favor of Spring's common bean definition formats\nand/or custom loader implementations "},
{"api_id": 2954, "api_type": 2, "full_declaration": "GenericXmlContextLoader", "qualified_name": "org.springframework.test.context.support.GenericXmlContextLoader", "short_description": " Concrete implementation of  AbstractGenericContextLoader  that reads\nbean definitions from XML resources. "},
{"api_id": 2955, "api_type": 2, "full_declaration": "TestConstructorUtils", "qualified_name": "org.springframework.test.context.support.TestConstructorUtils", "short_description": " Utility methods for working with  @TestConstructor . "},
{"api_id": 2956, "api_type": 2, "full_declaration": "TestPropertySourceUtils", "qualified_name": "org.springframework.test.context.support.TestPropertySourceUtils", "short_description": " Utility methods for working with  @TestPropertySource and adding test  PropertySources  to the  Environment . "},
{"api_id": 2957, "api_type": 2, "full_declaration": "AbstractTestNGSpringContextTests", "qualified_name": "org.springframework.test.context.testng.AbstractTestNGSpringContextTests", "short_description": " Abstract base test class which integrates the  Spring TestContext Framework with explicit  ApplicationContext  testing support in a  TestNG environment. "},
{"api_id": 2958, "api_type": 2, "full_declaration": "AbstractTransactionalTestNGSpringContextTests", "qualified_name": "org.springframework.test.context.testng.AbstractTransactionalTestNGSpringContextTests", "short_description": " Abstract  transactional  extension of AbstractTestNGSpringContextTests  which adds convenience functionality\nfor JDBC access. "},
{"api_id": 2959, "api_type": 2, "full_declaration": "TestContextTransactionUtils", "qualified_name": "org.springframework.test.context.transaction.TestContextTransactionUtils", "short_description": " Utility methods for working with transactions and data access related beans\nwithin the  Spring TestContext Framework . "},
{"api_id": 2960, "api_type": 2, "full_declaration": "TestTransaction", "qualified_name": "org.springframework.test.context.transaction.TestTransaction", "short_description": " TestTransaction  provides a collection of static utility methods for\nprogrammatic interaction with  test-managed transactions  within test  methods,  before  methods, and  after  methods. "},
{"api_id": 2961, "api_type": 2, "full_declaration": "TransactionalTestExecutionListener", "qualified_name": "org.springframework.test.context.transaction.TransactionalTestExecutionListener", "short_description": " TestExecutionListener  that provides support for executing tests\nwithin  test-managed transactions  by honoring Spring's @Transactional  annotation. "},
{"api_id": 2962, "api_type": 9, "full_declaration": "AfterTransaction", "qualified_name": "org.springframework.test.context.transaction.AfterTransaction", "short_description": " Test annotation which indicates that the annotated  void  method\nshould be executed  after  a transaction is ended for a test method\nconfigured to run within a transaction via Spring's  @Transactional annotation. "},
{"api_id": 2963, "api_type": 9, "full_declaration": "BeforeTransaction", "qualified_name": "org.springframework.test.context.transaction.BeforeTransaction", "short_description": " Test annotation which indicates that the annotated  void  method\nshould be executed  before  a transaction is started for a test method\nconfigured to run within a transaction via Spring's  @Transactional annotation. "},
{"api_id": 2964, "api_type": 2, "full_declaration": "TestContextResourceUtils", "qualified_name": "org.springframework.test.context.util.TestContextResourceUtils", "short_description": " Utility methods for working with resources within the  Spring TestContext\nFramework . "},
{"api_id": 2965, "api_type": 2, "full_declaration": "AbstractGenericWebContextLoader", "qualified_name": "org.springframework.test.context.web.AbstractGenericWebContextLoader", "short_description": " Abstract, generic extension of  AbstractContextLoader  that loads a GenericWebApplicationContext . "},
{"api_id": 2966, "api_type": 2, "full_declaration": "AnnotationConfigWebContextLoader", "qualified_name": "org.springframework.test.context.web.AnnotationConfigWebContextLoader", "short_description": " Concrete implementation of  AbstractGenericWebContextLoader  that loads\nbean definitions from annotated classes. "},
{"api_id": 2967, "api_type": 2, "full_declaration": "GenericGroovyXmlWebContextLoader", "qualified_name": "org.springframework.test.context.web.GenericGroovyXmlWebContextLoader", "short_description": " Concrete implementation of  AbstractGenericWebContextLoader  that loads\nbean definitions from Groovy scripts  and  XML configuration files. "},
{"api_id": 2968, "api_type": 2, "full_declaration": "GenericXmlWebContextLoader", "qualified_name": "org.springframework.test.context.web.GenericXmlWebContextLoader", "short_description": " Concrete implementation of  AbstractGenericWebContextLoader  that loads\nbean definitions from XML resources. "},
{"api_id": 2969, "api_type": 2, "full_declaration": "ServletTestExecutionListener", "qualified_name": "org.springframework.test.context.web.ServletTestExecutionListener", "short_description": " TestExecutionListener  which provides mock Servlet API support to WebApplicationContexts  loaded by the  Spring\nTestContext Framework . "},
{"api_id": 2970, "api_type": 2, "full_declaration": "WebDelegatingSmartContextLoader", "qualified_name": "org.springframework.test.context.web.WebDelegatingSmartContextLoader", "short_description": " WebDelegatingSmartContextLoader  is a concrete implementation of AbstractDelegatingSmartContextLoader  that delegates to a GenericXmlWebContextLoader  (or a  GenericGroovyXmlWebContextLoader  if\nGroovy is present on the classpath) and an  AnnotationConfigWebContextLoader . "},
{"api_id": 2971, "api_type": 2, "full_declaration": "WebMergedContextConfiguration", "qualified_name": "org.springframework.test.context.web.WebMergedContextConfiguration", "short_description": " WebMergedContextConfiguration  encapsulates the  merged context configuration declared on a test class and all of its superclasses\nvia  @ContextConfiguration , @WebAppConfiguration , and @ActiveProfiles . "},
{"api_id": 2972, "api_type": 2, "full_declaration": "WebTestContextBootstrapper", "qualified_name": "org.springframework.test.context.web.WebTestContextBootstrapper", "short_description": " Web-specific implementation of the  TestContextBootstrapper  SPI. "},
{"api_id": 2973, "api_type": 9, "full_declaration": "WebAppConfiguration", "qualified_name": "org.springframework.test.context.web.WebAppConfiguration", "short_description": " @WebAppConfiguration  is a class-level annotation that is used to\ndeclare that the  ApplicationContext  loaded for an integration test\nshould be a  WebApplicationContext . "},
{"api_id": 2974, "api_type": 2, "full_declaration": "JdbcTestUtils", "qualified_name": "org.springframework.test.jdbc.JdbcTestUtils", "short_description": " JdbcTestUtils  is a collection of JDBC related utility functions\nintended to simplify standard database testing scenarios. "},
{"api_id": 2975, "api_type": 2, "full_declaration": "AopTestUtils", "qualified_name": "org.springframework.test.util.AopTestUtils", "short_description": " AopTestUtils  is a collection of AOP-related utility methods for\nuse in unit and integration testing scenarios. "},
{"api_id": 2976, "api_type": 2, "full_declaration": "AssertionErrors", "qualified_name": "org.springframework.test.util.AssertionErrors", "short_description": " Test assertions that are independent of any third-party assertion library. "},
{"api_id": 2977, "api_type": 2, "full_declaration": "JsonExpectationsHelper", "qualified_name": "org.springframework.test.util.JsonExpectationsHelper", "short_description": " A helper class for assertions on JSON content. "},
{"api_id": 2978, "api_type": 2, "full_declaration": "JsonPathExpectationsHelper", "qualified_name": "org.springframework.test.util.JsonPathExpectationsHelper", "short_description": " A helper class for applying assertions via JSON path expressions. "},
{"api_id": 2979, "api_type": 2, "full_declaration": "MetaAnnotationUtils", "qualified_name": "org.springframework.test.util.MetaAnnotationUtils", "short_description": "Deprecated as of Spring Framework 5.3 in favor of TestContextAnnotationUtils "},
{"api_id": 2980, "api_type": 2, "full_declaration": "MetaAnnotationUtils.AnnotationDescriptor", "qualified_name": "org.springframework.test.util.MetaAnnotationUtils.AnnotationDescriptor", "short_description": " Descriptor for an  Annotation , including the  class  on which the annotation is  declared as well as the actual  annotation  instance. "},
{"api_id": 2981, "api_type": 2, "full_declaration": "MetaAnnotationUtils.UntypedAnnotationDescriptor", "qualified_name": "org.springframework.test.util.MetaAnnotationUtils.UntypedAnnotationDescriptor", "short_description": " Untyped  extension of  MetaAnnotationUtils.AnnotationDescriptor  that is used\nto describe the declaration of one of several candidate annotation types\nwhere the actual annotation type cannot be predetermined. "},
{"api_id": 2982, "api_type": 2, "full_declaration": "ReflectionTestUtils", "qualified_name": "org.springframework.test.util.ReflectionTestUtils", "short_description": " ReflectionTestUtils  is a collection of reflection-based utility\nmethods for use in unit and integration testing scenarios. "},
{"api_id": 2983, "api_type": 2, "full_declaration": "XmlExpectationsHelper", "qualified_name": "org.springframework.test.util.XmlExpectationsHelper", "short_description": " A helper class for assertions on XML content. "},
{"api_id": 2984, "api_type": 2, "full_declaration": "XpathExpectationsHelper", "qualified_name": "org.springframework.test.util.XpathExpectationsHelper", "short_description": " A helper class for applying assertions via XPath expressions. "},
{"api_id": 2985, "api_type": 2, "full_declaration": "ModelAndViewAssert", "qualified_name": "org.springframework.test.web.ModelAndViewAssert", "short_description": " A collection of assertions intended to simplify testing scenarios dealing\nwith Spring Web MVC  ModelAndView  objects. "},
{"api_id": 2986, "api_type": 3, "full_declaration": "MockRestServiceServer.MockRestServiceServerBuilder", "qualified_name": "org.springframework.test.web.client.MockRestServiceServer.MockRestServiceServerBuilder", "short_description": " Builder to create a  MockRestServiceServer . "},
{"api_id": 2987, "api_type": 3, "full_declaration": "RequestExpectation", "qualified_name": "org.springframework.test.web.client.RequestExpectation", "short_description": " An extension of  ResponseActions  that also implements RequestMatcher  and  ResponseCreator "},
{"api_id": 2988, "api_type": 3, "full_declaration": "RequestExpectationManager", "qualified_name": "org.springframework.test.web.client.RequestExpectationManager", "short_description": " Encapsulates the behavior required to implement  MockRestServiceServer including its public API (create expectations + verify/reset) along with an\nextra method for verifying actual requests. "},
{"api_id": 2989, "api_type": 3, "full_declaration": "RequestMatcher", "qualified_name": "org.springframework.test.web.client.RequestMatcher", "short_description": " A contract for matching requests to expectations. "},
{"api_id": 2990, "api_type": 3, "full_declaration": "ResponseActions", "qualified_name": "org.springframework.test.web.client.ResponseActions", "short_description": " A contract for setting up request expectations and defining a response. "},
{"api_id": 2991, "api_type": 3, "full_declaration": "ResponseCreator", "qualified_name": "org.springframework.test.web.client.ResponseCreator", "short_description": " A contract for creating a  ClientHttpResponse . "},
{"api_id": 2992, "api_type": 2, "full_declaration": "AbstractRequestExpectationManager", "qualified_name": "org.springframework.test.web.client.AbstractRequestExpectationManager", "short_description": " Base class for  RequestExpectationManager  implementations responsible\nfor storing expectations and actual requests, and checking for unsatisfied\nexpectations at the end. "},
{"api_id": 2993, "api_type": 2, "full_declaration": "AbstractRequestExpectationManager.RequestExpectationGroup", "qualified_name": "org.springframework.test.web.client.AbstractRequestExpectationManager.RequestExpectationGroup", "short_description": " Helper class to manage a group of remaining expectations. "},
{"api_id": 2994, "api_type": 2, "full_declaration": "DefaultRequestExpectation", "qualified_name": "org.springframework.test.web.client.DefaultRequestExpectation", "short_description": " Default implementation of  RequestExpectation  that simply delegates\nto the request matchers and the response creator it contains. "},
{"api_id": 2995, "api_type": 2, "full_declaration": "DefaultRequestExpectation.RequestCount", "qualified_name": "org.springframework.test.web.client.DefaultRequestExpectation.RequestCount", "short_description": " Helper class that keeps track of actual vs expected request count. "},
{"api_id": 2996, "api_type": 2, "full_declaration": "ExpectedCount", "qualified_name": "org.springframework.test.web.client.ExpectedCount", "short_description": " A simple type representing a range for an expected count. "},
{"api_id": 2997, "api_type": 2, "full_declaration": "MockMvcClientHttpRequestFactory", "qualified_name": "org.springframework.test.web.client.MockMvcClientHttpRequestFactory", "short_description": " A  ClientHttpRequestFactory  for requests executed via  MockMvc . "},
{"api_id": 2998, "api_type": 2, "full_declaration": "MockRestServiceServer", "qualified_name": "org.springframework.test.web.client.MockRestServiceServer", "short_description": " Main entry point for client-side REST testing . "},
{"api_id": 2999, "api_type": 2, "full_declaration": "SimpleRequestExpectationManager", "qualified_name": "org.springframework.test.web.client.SimpleRequestExpectationManager", "short_description": " Simple  RequestExpectationManager  that matches requests to expectations\nsequentially, i.e. "},
{"api_id": 3000, "api_type": 2, "full_declaration": "UnorderedRequestExpectationManager", "qualified_name": "org.springframework.test.web.client.UnorderedRequestExpectationManager", "short_description": " RequestExpectationManager  that matches requests to expectations\nregardless of the order of declaration of expected requests. "},
{"api_id": 3001, "api_type": 2, "full_declaration": "ContentRequestMatchers", "qualified_name": "org.springframework.test.web.client.match.ContentRequestMatchers", "short_description": " Factory for request content  RequestMatcher 's. "},
{"api_id": 3002, "api_type": 2, "full_declaration": "JsonPathRequestMatchers", "qualified_name": "org.springframework.test.web.client.match.JsonPathRequestMatchers", "short_description": " Factory for assertions on the request content using JsonPath  expressions. "},
{"api_id": 3003, "api_type": 2, "full_declaration": "MockRestRequestMatchers", "qualified_name": "org.springframework.test.web.client.match.MockRestRequestMatchers", "short_description": " Static factory methods for  RequestMatcher  classes. "},
{"api_id": 3004, "api_type": 2, "full_declaration": "XpathRequestMatchers", "qualified_name": "org.springframework.test.web.client.match.XpathRequestMatchers", "short_description": " Factory methods for request content  RequestMatcher  implementations\nthat use an XPath expression. "},
{"api_id": 3005, "api_type": 2, "full_declaration": "DefaultResponseCreator", "qualified_name": "org.springframework.test.web.client.response.DefaultResponseCreator", "short_description": " A  ResponseCreator  with builder-style methods for adding response details. "},
{"api_id": 3006, "api_type": 2, "full_declaration": "MockRestResponseCreators", "qualified_name": "org.springframework.test.web.client.response.MockRestResponseCreators", "short_description": " Static factory methods for obtaining a  ResponseCreator  instance. "},
{"api_id": 3007, "api_type": 3, "full_declaration": "MockServerClientHttpResponse", "qualified_name": "org.springframework.test.web.reactive.server.MockServerClientHttpResponse", "short_description": " Simple  ClientHttpResponse  extension that also exposes a result object\nfrom the underlying mock server exchange for further assertions on the state\nof the server response after the request is performed. "},
{"api_id": 3008, "api_type": 3, "full_declaration": "MockServerConfigurer", "qualified_name": "org.springframework.test.web.reactive.server.MockServerConfigurer", "short_description": " Contract that frameworks or applications can use to pre-package a set of\ncustomizations to a  WebTestClient.MockServerSpec  and expose that\nas a shortcut. "},
{"api_id": 3009, "api_type": 3, "full_declaration": "WebTestClient", "qualified_name": "org.springframework.test.web.reactive.server.WebTestClient", "short_description": " Client for testing web servers that uses  WebClient  internally to\nperform requests while also providing a fluent API to verify responses. "},
{"api_id": 3010, "api_type": 3, "full_declaration": "WebTestClient.BodyContentSpec", "qualified_name": "org.springframework.test.web.reactive.server.WebTestClient.BodyContentSpec", "short_description": " Spec for expectations on the response body content. "},
{"api_id": 3011, "api_type": 3, "full_declaration": "WebTestClient.BodySpec", "qualified_name": "org.springframework.test.web.reactive.server.WebTestClient.BodySpec", "short_description": " Spec for expectations on the response body decoded to a single Object. "},
{"api_id": 3012, "api_type": 3, "full_declaration": "WebTestClient.Builder", "qualified_name": "org.springframework.test.web.reactive.server.WebTestClient.Builder", "short_description": " Steps for customizing the  WebClient  used to test with,\ninternally delegating to a WebClient.Builder . "},
{"api_id": 3013, "api_type": 3, "full_declaration": "WebTestClient.ControllerSpec", "qualified_name": "org.springframework.test.web.reactive.server.WebTestClient.ControllerSpec", "short_description": " Specification for customizing controller configuration equivalent to, and\ninternally delegating to, a  WebFluxConfigurer . "},
{"api_id": 3014, "api_type": 3, "full_declaration": "WebTestClient.ListBodySpec", "qualified_name": "org.springframework.test.web.reactive.server.WebTestClient.ListBodySpec", "short_description": " Spec for expectations on the response body decoded to a List. "},
{"api_id": 3015, "api_type": 3, "full_declaration": "WebTestClient.MockServerSpec", "qualified_name": "org.springframework.test.web.reactive.server.WebTestClient.MockServerSpec", "short_description": " Base specification for setting up tests without a server. "},
{"api_id": 3016, "api_type": 3, "full_declaration": "WebTestClient.RequestBodySpec", "qualified_name": "org.springframework.test.web.reactive.server.WebTestClient.RequestBodySpec", "short_description": " Specification for providing body of a request. "},
{"api_id": 3017, "api_type": 3, "full_declaration": "WebTestClient.RequestBodyUriSpec", "qualified_name": "org.springframework.test.web.reactive.server.WebTestClient.RequestBodyUriSpec", "short_description": " Specification for providing the body and the URI of a request. "},
{"api_id": 3018, "api_type": 3, "full_declaration": "WebTestClient.RequestHeadersSpec", "qualified_name": "org.springframework.test.web.reactive.server.WebTestClient.RequestHeadersSpec", "short_description": " Specification for adding request headers and performing an exchange. "},
{"api_id": 3019, "api_type": 3, "full_declaration": "WebTestClient.RequestHeadersUriSpec", "qualified_name": "org.springframework.test.web.reactive.server.WebTestClient.RequestHeadersUriSpec", "short_description": " Specification for providing request headers and the URI of a request. "},
{"api_id": 3020, "api_type": 3, "full_declaration": "WebTestClient.ResponseSpec", "qualified_name": "org.springframework.test.web.reactive.server.WebTestClient.ResponseSpec", "short_description": " Chained API for applying assertions to a response. "},
{"api_id": 3021, "api_type": 3, "full_declaration": "WebTestClient.RouterFunctionSpec", "qualified_name": "org.springframework.test.web.reactive.server.WebTestClient.RouterFunctionSpec", "short_description": " Specification for customizing router function configuration. "},
{"api_id": 3022, "api_type": 3, "full_declaration": "WebTestClient.UriSpec", "qualified_name": "org.springframework.test.web.reactive.server.WebTestClient.UriSpec", "short_description": " Specification for providing the URI of a request. "},
{"api_id": 3023, "api_type": 3, "full_declaration": "WebTestClientConfigurer", "qualified_name": "org.springframework.test.web.reactive.server.WebTestClientConfigurer", "short_description": " Contract that frameworks or applications can use to pre-package a set of\ncustomizations to a  WebTestClient.Builder  and expose that\nas a shortcut. "},
{"api_id": 3024, "api_type": 2, "full_declaration": "CookieAssertions", "qualified_name": "org.springframework.test.web.reactive.server.CookieAssertions", "short_description": " Assertions on cookies of the response. "},
{"api_id": 3025, "api_type": 2, "full_declaration": "EntityExchangeResult", "qualified_name": "org.springframework.test.web.reactive.server.EntityExchangeResult", "short_description": " ExchangeResult  sub-class that exposes the response body fully\nextracted to a representation of type  <T> . "},
{"api_id": 3026, "api_type": 2, "full_declaration": "ExchangeResult", "qualified_name": "org.springframework.test.web.reactive.server.ExchangeResult", "short_description": " Container for request and response details for exchanges performed through WebTestClient . "},
{"api_id": 3027, "api_type": 2, "full_declaration": "FluxExchangeResult", "qualified_name": "org.springframework.test.web.reactive.server.FluxExchangeResult", "short_description": " ExchangeResult  variant with the response body decoded as Flux<T>  but not yet consumed. "},
{"api_id": 3028, "api_type": 2, "full_declaration": "HeaderAssertions", "qualified_name": "org.springframework.test.web.reactive.server.HeaderAssertions", "short_description": " Assertions on headers of the response. "},
{"api_id": 3029, "api_type": 2, "full_declaration": "HttpHandlerConnector", "qualified_name": "org.springframework.test.web.reactive.server.HttpHandlerConnector", "short_description": " Connector that handles requests by invoking an  HttpHandler  rather\nthan making actual requests to a network socket. "},
{"api_id": 3030, "api_type": 2, "full_declaration": "JsonPathAssertions", "qualified_name": "org.springframework.test.web.reactive.server.JsonPathAssertions", "short_description": " JsonPath  assertions. "},
{"api_id": 3031, "api_type": 2, "full_declaration": "StatusAssertions", "qualified_name": "org.springframework.test.web.reactive.server.StatusAssertions", "short_description": " Assertions on the response status. "},
{"api_id": 3032, "api_type": 2, "full_declaration": "XpathAssertions", "qualified_name": "org.springframework.test.web.reactive.server.XpathAssertions", "short_description": " XPath assertions for the  WebTestClient . "},
{"api_id": 3033, "api_type": 4, "full_declaration": "HttpHandlerConnector.FailureAfterResponseCompletedException", "qualified_name": "org.springframework.test.web.reactive.server.HttpHandlerConnector.FailureAfterResponseCompletedException", "short_description": " Indicates that an error occurred after the server response was completed,\nvia  ReactiveHttpOutputMessage.writeWith(org.reactivestreams.Publisher<? extends org.springframework.core.io.buffer.DataBuffer>)  or  ReactiveHttpOutputMessage.setComplete() ,\nand can no longer be changed. "},
{"api_id": 3034, "api_type": 3, "full_declaration": "DispatcherServletCustomizer", "qualified_name": "org.springframework.test.web.servlet.DispatcherServletCustomizer", "short_description": " Strategy interface for customizing  DispatcherServlet  instances that are\nmanaged by  MockMvc . "},
{"api_id": 3035, "api_type": 3, "full_declaration": "MockMvcBuilder", "qualified_name": "org.springframework.test.web.servlet.MockMvcBuilder", "short_description": " Builds a  MockMvc  instance. "},
{"api_id": 3036, "api_type": 3, "full_declaration": "MvcResult", "qualified_name": "org.springframework.test.web.servlet.MvcResult", "short_description": " Provides access to the result of an executed request. "},
{"api_id": 3037, "api_type": 3, "full_declaration": "RequestBuilder", "qualified_name": "org.springframework.test.web.servlet.RequestBuilder", "short_description": " Builds a  MockHttpServletRequest . "},
{"api_id": 3038, "api_type": 3, "full_declaration": "ResultActions", "qualified_name": "org.springframework.test.web.servlet.ResultActions", "short_description": " Allows applying actions, such as expectations, on the result of an executed\nrequest. "},
{"api_id": 3039, "api_type": 3, "full_declaration": "ResultHandler", "qualified_name": "org.springframework.test.web.servlet.ResultHandler", "short_description": " A  ResultHandler  performs a generic action on the result of an\nexecuted request \u2014 for example, printing debug information. "},
{"api_id": 3040, "api_type": 3, "full_declaration": "ResultMatcher", "qualified_name": "org.springframework.test.web.servlet.ResultMatcher", "short_description": " A  ResultMatcher  matches the result of an executed request against\nsome expectation. "},
{"api_id": 3041, "api_type": 3, "full_declaration": "SmartRequestBuilder", "qualified_name": "org.springframework.test.web.servlet.SmartRequestBuilder", "short_description": " Extended variant of a  RequestBuilder  that applies its org.springframework.test.web.servlet.request.RequestPostProcessors as a separate step from the  RequestBuilder.buildRequest(javax.servlet.ServletContext)  method. "},
{"api_id": 3042, "api_type": 2, "full_declaration": "MockMvc", "qualified_name": "org.springframework.test.web.servlet.MockMvc", "short_description": " Main entry point for server-side Spring MVC test support. "},
{"api_id": 3043, "api_type": 2, "full_declaration": "MockMvcBuilderSupport", "qualified_name": "org.springframework.test.web.servlet.MockMvcBuilderSupport", "short_description": " Base class for MockMvc builder implementations, providing the capability to\ncreate a  MockMvc  instance. "},
{"api_id": 3044, "api_type": 3, "full_declaration": "MockMvcWebTestClient", "qualified_name": "org.springframework.test.web.servlet.client.MockMvcWebTestClient", "short_description": " The main class for testing Spring MVC applications via  WebTestClient with  MockMvc  for server request handling. "},
{"api_id": 3045, "api_type": 3, "full_declaration": "MockMvcWebTestClient.ControllerSpec", "qualified_name": "org.springframework.test.web.servlet.client.MockMvcWebTestClient.ControllerSpec", "short_description": " Specification for configuring  MockMvc  to test one or more\ncontrollers directly, and a simple facade around StandaloneMockMvcBuilder . "},
{"api_id": 3046, "api_type": 3, "full_declaration": "MockMvcWebTestClient.MockMvcServerSpec", "qualified_name": "org.springframework.test.web.servlet.client.MockMvcWebTestClient.MockMvcServerSpec", "short_description": " Base specification for configuring  MockMvc , and a simple facade\naround  ConfigurableMockMvcBuilder . "},
{"api_id": 3047, "api_type": 2, "full_declaration": "MockMvcHttpConnector", "qualified_name": "org.springframework.test.web.servlet.client.MockMvcHttpConnector", "short_description": " Connector that handles requests by invoking a  MockMvc  rather than\nmaking actual requests over HTTP. "},
{"api_id": 3048, "api_type": 3, "full_declaration": "WebRequestMatcher", "qualified_name": "org.springframework.test.web.servlet.htmlunit.WebRequestMatcher", "short_description": " Strategy for matching on a  WebRequest . "},
{"api_id": 3049, "api_type": 2, "full_declaration": "DelegatingWebConnection", "qualified_name": "org.springframework.test.web.servlet.htmlunit.DelegatingWebConnection", "short_description": " Implementation of  WebConnection  that allows delegating to various WebConnection  implementations. "},
{"api_id": 3050, "api_type": 2, "full_declaration": "DelegatingWebConnection.DelegateWebConnection", "qualified_name": "org.springframework.test.web.servlet.htmlunit.DelegatingWebConnection.DelegateWebConnection", "short_description": " The delegate web connection. "},
{"api_id": 3051, "api_type": 2, "full_declaration": "HostRequestMatcher", "qualified_name": "org.springframework.test.web.servlet.htmlunit.HostRequestMatcher", "short_description": " A  WebRequestMatcher  that allows matching on the host and optionally\nthe port of  WebRequest#getUrl() . "},
{"api_id": 3052, "api_type": 2, "full_declaration": "MockMvcWebClientBuilder", "qualified_name": "org.springframework.test.web.servlet.htmlunit.MockMvcWebClientBuilder", "short_description": " MockMvcWebClientBuilder  simplifies the creation of an HtmlUnit WebClient  that delegates to a  MockMvc  instance. "},
{"api_id": 3053, "api_type": 2, "full_declaration": "MockMvcWebConnection", "qualified_name": "org.springframework.test.web.servlet.htmlunit.MockMvcWebConnection", "short_description": " MockMvcWebConnection  enables  MockMvc  to transform a WebRequest  into a  WebResponse . "},
{"api_id": 3054, "api_type": 2, "full_declaration": "MockMvcWebConnectionBuilderSupport", "qualified_name": "org.springframework.test.web.servlet.htmlunit.MockMvcWebConnectionBuilderSupport", "short_description": " Support class that simplifies the creation of a  WebConnection  that\nuses  MockMvc  and optionally delegates to a real  WebConnection for specific requests. "},
{"api_id": 3055, "api_type": 2, "full_declaration": "UrlRegexRequestMatcher", "qualified_name": "org.springframework.test.web.servlet.htmlunit.UrlRegexRequestMatcher", "short_description": " A  WebRequestMatcher  that allows matching on WebRequest#getUrl().toExternalForm()  using a regular expression. "},
{"api_id": 3056, "api_type": 2, "full_declaration": "MockMvcHtmlUnitDriverBuilder", "qualified_name": "org.springframework.test.web.servlet.htmlunit.webdriver.MockMvcHtmlUnitDriverBuilder", "short_description": " MockMvcHtmlUnitDriverBuilder  simplifies the building of an HtmlUnitDriver  that delegates to  MockMvc  and optionally\ndelegates to an actual connection for specific requests. "},
{"api_id": 3057, "api_type": 2, "full_declaration": "WebConnectionHtmlUnitDriver", "qualified_name": "org.springframework.test.web.servlet.htmlunit.webdriver.WebConnectionHtmlUnitDriver", "short_description": " WebConnectionHtmlUnitDriver  enables configuration of the WebConnection  for an  HtmlUnitDriver  instance. "},
{"api_id": 3058, "api_type": 3, "full_declaration": "ConfigurableSmartRequestBuilder", "qualified_name": "org.springframework.test.web.servlet.request.ConfigurableSmartRequestBuilder", "short_description": " An extension of  SmartRequestBuilder  that can be configured with  RequestPostProcessors . "},
{"api_id": 3059, "api_type": 3, "full_declaration": "RequestPostProcessor", "qualified_name": "org.springframework.test.web.servlet.request.RequestPostProcessor", "short_description": " Extension point for applications or 3rd party libraries that wish to further\ninitialize a  MockHttpServletRequest  instance after it has been built\nby  MockHttpServletRequestBuilder  or its subclass MockMultipartHttpServletRequestBuilder . "},
{"api_id": 3060, "api_type": 2, "full_declaration": "MockHttpServletRequestBuilder", "qualified_name": "org.springframework.test.web.servlet.request.MockHttpServletRequestBuilder", "short_description": " Default builder for  MockHttpServletRequest  required as input to\nperform requests in  MockMvc . "},
{"api_id": 3061, "api_type": 2, "full_declaration": "MockMultipartHttpServletRequestBuilder", "qualified_name": "org.springframework.test.web.servlet.request.MockMultipartHttpServletRequestBuilder", "short_description": " Default builder for  MockMultipartHttpServletRequest . "},
{"api_id": 3062, "api_type": 2, "full_declaration": "MockMvcRequestBuilders", "qualified_name": "org.springframework.test.web.servlet.request.MockMvcRequestBuilders", "short_description": " Static factory methods for  RequestBuilders . "},
{"api_id": 3063, "api_type": 3, "full_declaration": "PrintingResultHandler.ResultValuePrinter", "qualified_name": "org.springframework.test.web.servlet.result.PrintingResultHandler.ResultValuePrinter", "short_description": " A contract for how to actually write result information. "},
{"api_id": 3064, "api_type": 2, "full_declaration": "ContentResultMatchers", "qualified_name": "org.springframework.test.web.servlet.result.ContentResultMatchers", "short_description": " Factory for response content assertions. "},
{"api_id": 3065, "api_type": 2, "full_declaration": "CookieResultMatchers", "qualified_name": "org.springframework.test.web.servlet.result.CookieResultMatchers", "short_description": " Factory for response cookie assertions. "},
{"api_id": 3066, "api_type": 2, "full_declaration": "FlashAttributeResultMatchers", "qualified_name": "org.springframework.test.web.servlet.result.FlashAttributeResultMatchers", "short_description": " Factory for \"output\" flash attribute assertions. "},
{"api_id": 3067, "api_type": 2, "full_declaration": "HandlerResultMatchers", "qualified_name": "org.springframework.test.web.servlet.result.HandlerResultMatchers", "short_description": " Factory for assertions on the selected handler or handler method. "},
{"api_id": 3068, "api_type": 2, "full_declaration": "HeaderResultMatchers", "qualified_name": "org.springframework.test.web.servlet.result.HeaderResultMatchers", "short_description": " Factory for response header assertions. "},
{"api_id": 3069, "api_type": 2, "full_declaration": "JsonPathResultMatchers", "qualified_name": "org.springframework.test.web.servlet.result.JsonPathResultMatchers", "short_description": " Factory for assertions on the response content using JsonPath  expressions. "},
{"api_id": 3070, "api_type": 2, "full_declaration": "MockMvcResultHandlers", "qualified_name": "org.springframework.test.web.servlet.result.MockMvcResultHandlers", "short_description": " Static factory methods for  ResultHandler -based result actions. "},
{"api_id": 3071, "api_type": 2, "full_declaration": "MockMvcResultMatchers", "qualified_name": "org.springframework.test.web.servlet.result.MockMvcResultMatchers", "short_description": " Static factory methods for  ResultMatcher -based result actions. "},
{"api_id": 3072, "api_type": 2, "full_declaration": "ModelResultMatchers", "qualified_name": "org.springframework.test.web.servlet.result.ModelResultMatchers", "short_description": " Factory for assertions on the model. "},
{"api_id": 3073, "api_type": 2, "full_declaration": "PrintingResultHandler", "qualified_name": "org.springframework.test.web.servlet.result.PrintingResultHandler", "short_description": " Result handler that prints  MvcResult  details to a given output\nstream \u2014 for example:  System.out ,  System.err , a\ncustom  java.io.PrintWriter , etc. "},
{"api_id": 3074, "api_type": 2, "full_declaration": "RequestResultMatchers", "qualified_name": "org.springframework.test.web.servlet.result.RequestResultMatchers", "short_description": " Factory for assertions on the request. "},
{"api_id": 3075, "api_type": 2, "full_declaration": "StatusResultMatchers", "qualified_name": "org.springframework.test.web.servlet.result.StatusResultMatchers", "short_description": " Factory for assertions on the response status. "},
{"api_id": 3076, "api_type": 2, "full_declaration": "ViewResultMatchers", "qualified_name": "org.springframework.test.web.servlet.result.ViewResultMatchers", "short_description": " Factory for assertions on the selected view. "},
{"api_id": 3077, "api_type": 2, "full_declaration": "XpathResultMatchers", "qualified_name": "org.springframework.test.web.servlet.result.XpathResultMatchers", "short_description": " Factory for assertions on the response content using XPath expressions. "},
{"api_id": 3078, "api_type": 3, "full_declaration": "ConfigurableMockMvcBuilder", "qualified_name": "org.springframework.test.web.servlet.setup.ConfigurableMockMvcBuilder", "short_description": " Defines common methods for building a  MockMvc . "},
{"api_id": 3079, "api_type": 3, "full_declaration": "MockMvcConfigurer", "qualified_name": "org.springframework.test.web.servlet.setup.MockMvcConfigurer", "short_description": " Contract for customizing a  ConfigurableMockMvcBuilder  in some\nspecific way, e.g. "},
{"api_id": 3080, "api_type": 2, "full_declaration": "AbstractMockMvcBuilder", "qualified_name": "org.springframework.test.web.servlet.setup.AbstractMockMvcBuilder", "short_description": " Abstract implementation of  MockMvcBuilder  with common methods for\nconfiguring filters, default request properties, global expectations and\nglobal result actions. "},
{"api_id": 3081, "api_type": 2, "full_declaration": "DefaultMockMvcBuilder", "qualified_name": "org.springframework.test.web.servlet.setup.DefaultMockMvcBuilder", "short_description": " A concrete implementation of  AbstractMockMvcBuilder  that provides\nthe  WebApplicationContext  supplied to it as a constructor argument. "},
{"api_id": 3082, "api_type": 2, "full_declaration": "MockMvcBuilders", "qualified_name": "org.springframework.test.web.servlet.setup.MockMvcBuilders", "short_description": " The main class to import in order to access all available  MockMvcBuilders . "},
{"api_id": 3083, "api_type": 2, "full_declaration": "MockMvcConfigurerAdapter", "qualified_name": "org.springframework.test.web.servlet.setup.MockMvcConfigurerAdapter", "short_description": " An empty method implementation of  MockMvcConfigurer . "},
{"api_id": 3084, "api_type": 2, "full_declaration": "SharedHttpSessionConfigurer", "qualified_name": "org.springframework.test.web.servlet.setup.SharedHttpSessionConfigurer", "short_description": " MockMvcConfigurer  that stores and re-uses the HTTP session across\nmultiple requests performed through the same  MockMvc  instance. "},
{"api_id": 3085, "api_type": 2, "full_declaration": "StandaloneMockMvcBuilder", "qualified_name": "org.springframework.test.web.servlet.setup.StandaloneMockMvcBuilder", "short_description": " A  MockMvcBuilder  that accepts  @Controller  registrations\nthus allowing full control over the instantiation and initialization of\ncontrollers and their dependencies similar to plain unit tests, and also\nmaking it possible to test one controller at a time. "},
{"api_id": 3086, "api_type": 3, "full_declaration": "PlatformTransactionManager", "qualified_name": "org.springframework.transaction.PlatformTransactionManager", "short_description": " This is the central interface in Spring's imperative transaction infrastructure. "},
{"api_id": 3087, "api_type": 3, "full_declaration": "ReactiveTransaction", "qualified_name": "org.springframework.transaction.ReactiveTransaction", "short_description": " Representation of an ongoing reactive transaction. "},
{"api_id": 3088, "api_type": 3, "full_declaration": "ReactiveTransactionManager", "qualified_name": "org.springframework.transaction.ReactiveTransactionManager", "short_description": " This is the central interface in Spring's reactive transaction infrastructure. "},
{"api_id": 3089, "api_type": 3, "full_declaration": "SavepointManager", "qualified_name": "org.springframework.transaction.SavepointManager", "short_description": " Interface that specifies an API to programmatically manage transaction\nsavepoints in a generic fashion. "},
{"api_id": 3090, "api_type": 3, "full_declaration": "TransactionDefinition", "qualified_name": "org.springframework.transaction.TransactionDefinition", "short_description": " Interface that defines Spring-compliant transaction properties. "},
{"api_id": 3091, "api_type": 3, "full_declaration": "TransactionExecution", "qualified_name": "org.springframework.transaction.TransactionExecution", "short_description": " Common representation of the current state of a transaction. "},
{"api_id": 3092, "api_type": 3, "full_declaration": "TransactionManager", "qualified_name": "org.springframework.transaction.TransactionManager", "short_description": " Marker interface for Spring transaction manager implementations,\neither traditional or reactive. "},
{"api_id": 3093, "api_type": 3, "full_declaration": "TransactionStatus", "qualified_name": "org.springframework.transaction.TransactionStatus", "short_description": " Representation of the status of a transaction. "},
{"api_id": 3094, "api_type": 4, "full_declaration": "CannotCreateTransactionException", "qualified_name": "org.springframework.transaction.CannotCreateTransactionException", "short_description": " Exception thrown when a transaction can't be created using an\nunderlying transaction API such as JTA. "},
{"api_id": 3095, "api_type": 4, "full_declaration": "HeuristicCompletionException", "qualified_name": "org.springframework.transaction.HeuristicCompletionException", "short_description": " Exception that represents a transaction failure caused by a heuristic\ndecision on the side of the transaction coordinator. "},
{"api_id": 3096, "api_type": 4, "full_declaration": "IllegalTransactionStateException", "qualified_name": "org.springframework.transaction.IllegalTransactionStateException", "short_description": " Exception thrown when the existence or non-existence of a transaction\namounts to an illegal state according to the transaction propagation\nbehavior that applies. "},
{"api_id": 3097, "api_type": 4, "full_declaration": "InvalidIsolationLevelException", "qualified_name": "org.springframework.transaction.InvalidIsolationLevelException", "short_description": " Exception that gets thrown when an invalid isolation level is specified,\ni.e. "},
{"api_id": 3098, "api_type": 4, "full_declaration": "InvalidTimeoutException", "qualified_name": "org.springframework.transaction.InvalidTimeoutException", "short_description": " Exception that gets thrown when an invalid timeout is specified,\nthat is, the specified timeout valid is out of range or the\ntransaction manager implementation doesn't support timeouts. "},
{"api_id": 3099, "api_type": 4, "full_declaration": "NestedTransactionNotSupportedException", "qualified_name": "org.springframework.transaction.NestedTransactionNotSupportedException", "short_description": " Exception thrown when attempting to work with a nested transaction\nbut nested transactions are not supported by the underlying backend. "},
{"api_id": 3100, "api_type": 4, "full_declaration": "NoTransactionException", "qualified_name": "org.springframework.transaction.NoTransactionException", "short_description": " Exception thrown when an operation is attempted that\nrelies on an existing transaction (such as setting\nrollback status) and there is no existing transaction. "},
{"api_id": 3101, "api_type": 4, "full_declaration": "TransactionException", "qualified_name": "org.springframework.transaction.TransactionException", "short_description": " Superclass for all transaction exceptions. "},
{"api_id": 3102, "api_type": 4, "full_declaration": "TransactionSuspensionNotSupportedException", "qualified_name": "org.springframework.transaction.TransactionSuspensionNotSupportedException", "short_description": " Exception thrown when attempting to suspend an existing transaction\nbut transaction suspension is not supported by the underlying backend. "},
{"api_id": 3103, "api_type": 4, "full_declaration": "TransactionSystemException", "qualified_name": "org.springframework.transaction.TransactionSystemException", "short_description": " Exception thrown when a general transaction system error is encountered,\nlike on commit or rollback. "},
{"api_id": 3104, "api_type": 4, "full_declaration": "TransactionTimedOutException", "qualified_name": "org.springframework.transaction.TransactionTimedOutException", "short_description": " Exception to be thrown when a transaction has timed out. "},
{"api_id": 3105, "api_type": 4, "full_declaration": "TransactionUsageException", "qualified_name": "org.springframework.transaction.TransactionUsageException", "short_description": " Superclass for exceptions caused by inappropriate usage of\na Spring transaction API. "},
{"api_id": 3106, "api_type": 4, "full_declaration": "UnexpectedRollbackException", "qualified_name": "org.springframework.transaction.UnexpectedRollbackException", "short_description": " Thrown when an attempt to commit a transaction resulted\nin an unexpected rollback. "},
{"api_id": 3107, "api_type": 3, "full_declaration": "TransactionAnnotationParser", "qualified_name": "org.springframework.transaction.annotation.TransactionAnnotationParser", "short_description": " Strategy interface for parsing known transaction annotation types. "},
{"api_id": 3108, "api_type": 3, "full_declaration": "TransactionManagementConfigurer", "qualified_name": "org.springframework.transaction.annotation.TransactionManagementConfigurer", "short_description": " Interface to be implemented by @ Configuration  classes annotated with @ EnableTransactionManagement  that wish to\n(or need to) explicitly specify the default  PlatformTransactionManager  bean\n(or  ReactiveTransactionManager  bean) to be used for annotation-driven\ntransaction management, as opposed to the default approach of a by-type lookup. "},
{"api_id": 3109, "api_type": 2, "full_declaration": "AbstractTransactionManagementConfiguration", "qualified_name": "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration", "short_description": " Abstract base  @Configuration  class providing common structure for enabling\nSpring's annotation-driven transaction management capability. "},
{"api_id": 3110, "api_type": 2, "full_declaration": "AnnotationTransactionAttributeSource", "qualified_name": "org.springframework.transaction.annotation.AnnotationTransactionAttributeSource", "short_description": " Implementation of the TransactionAttributeSource interface for working with transaction metadata in JDK 1.5+ annotation format. "},
{"api_id": 3111, "api_type": 2, "full_declaration": "Ejb3TransactionAnnotationParser", "qualified_name": "org.springframework.transaction.annotation.Ejb3TransactionAnnotationParser", "short_description": " Strategy implementation for parsing EJB3's  TransactionAttribute annotation. "},
{"api_id": 3112, "api_type": 2, "full_declaration": "JtaTransactionAnnotationParser", "qualified_name": "org.springframework.transaction.annotation.JtaTransactionAnnotationParser", "short_description": " Strategy implementation for parsing JTA 1.2's  Transactional  annotation. "},
{"api_id": 3113, "api_type": 2, "full_declaration": "ProxyTransactionManagementConfiguration", "qualified_name": "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration", "short_description": " @Configuration  class that registers the Spring infrastructure beans\nnecessary to enable proxy-based annotation-driven transaction management. "},
{"api_id": 3114, "api_type": 2, "full_declaration": "SpringTransactionAnnotationParser", "qualified_name": "org.springframework.transaction.annotation.SpringTransactionAnnotationParser", "short_description": " Strategy implementation for parsing Spring's  Transactional  annotation. "},
{"api_id": 3115, "api_type": 2, "full_declaration": "TransactionManagementConfigurationSelector", "qualified_name": "org.springframework.transaction.annotation.TransactionManagementConfigurationSelector", "short_description": " Selects which implementation of  AbstractTransactionManagementConfiguration should be used based on the value of  EnableTransactionManagement.mode()  on the\nimporting  @Configuration  class. "},
{"api_id": 3116, "api_type": 8, "full_declaration": "Isolation", "qualified_name": "org.springframework.transaction.annotation.Isolation", "short_description": " Enumeration that represents transaction isolation levels for use\nwith the  Transactional  annotation, corresponding to the TransactionDefinition  interface. "},
{"api_id": 3117, "api_type": 8, "full_declaration": "Propagation", "qualified_name": "org.springframework.transaction.annotation.Propagation", "short_description": " Enumeration that represents transaction propagation behaviors for use\nwith the  Transactional  annotation, corresponding to the TransactionDefinition  interface. "},
{"api_id": 3118, "api_type": 9, "full_declaration": "EnableTransactionManagement", "qualified_name": "org.springframework.transaction.annotation.EnableTransactionManagement", "short_description": " Enables Spring's annotation-driven transaction management capability, similar to\nthe support found in Spring's  <tx:*>  XML namespace. "},
{"api_id": 3119, "api_type": 9, "full_declaration": "Transactional", "qualified_name": "org.springframework.transaction.annotation.Transactional", "short_description": " Describes a transaction attribute on an individual method or on a class. "},
{"api_id": 3120, "api_type": 2, "full_declaration": "AspectJJtaTransactionManagementConfiguration", "qualified_name": "org.springframework.transaction.aspectj.AspectJJtaTransactionManagementConfiguration", "short_description": " @Configuration  class that registers the Spring infrastructure beans necessary\nto enable AspectJ-based annotation-driven transaction management for the JTA 1.2 Transactional  annotation in addition to Spring's own Transactional  annotation. "},
{"api_id": 3121, "api_type": 2, "full_declaration": "AspectJTransactionManagementConfiguration", "qualified_name": "org.springframework.transaction.aspectj.AspectJTransactionManagementConfiguration", "short_description": " @Configuration  class that registers the Spring infrastructure beans necessary\nto enable AspectJ-based annotation-driven transaction management for Spring's own Transactional  annotation. "},
{"api_id": 3122, "api_type": 2, "full_declaration": "JtaTransactionManagerBeanDefinitionParser", "qualified_name": "org.springframework.transaction.config.JtaTransactionManagerBeanDefinitionParser", "short_description": " Parser for the <tx:jta-transaction-manager/> XML configuration element,\nautodetecting WebLogic and WebSphere servers and exposing the corresponding JtaTransactionManager  subclass. "},
{"api_id": 3123, "api_type": 2, "full_declaration": "JtaTransactionManagerFactoryBean", "qualified_name": "org.springframework.transaction.config.JtaTransactionManagerFactoryBean", "short_description": " A  FactoryBean  equivalent to the <tx:jta-transaction-manager/> XML element,\nautodetecting WebLogic and WebSphere servers and exposing the corresponding JtaTransactionManager  subclass. "},
{"api_id": 3124, "api_type": 2, "full_declaration": "TransactionManagementConfigUtils", "qualified_name": "org.springframework.transaction.config.TransactionManagementConfigUtils", "short_description": " Configuration constants for internal sharing across subpackages. "},
{"api_id": 3125, "api_type": 2, "full_declaration": "TxNamespaceHandler", "qualified_name": "org.springframework.transaction.config.TxNamespaceHandler", "short_description": " NamespaceHandler  allowing for the configuration of\ndeclarative transaction management using either XML or using annotations. "},
{"api_id": 3126, "api_type": 3, "full_declaration": "TransactionalApplicationListener", "qualified_name": "org.springframework.transaction.event.TransactionalApplicationListener", "short_description": " An  ApplicationListener  that is invoked according to a  TransactionPhase . "},
{"api_id": 3127, "api_type": 3, "full_declaration": "TransactionalApplicationListener.SynchronizationCallback", "qualified_name": "org.springframework.transaction.event.TransactionalApplicationListener.SynchronizationCallback", "short_description": " Callback to be invoked on synchronization-driven event processing,\nwrapping the target listener invocation ( TransactionalApplicationListener.processEvent(E) ). "},
{"api_id": 3128, "api_type": 2, "full_declaration": "TransactionalApplicationListenerAdapter", "qualified_name": "org.springframework.transaction.event.TransactionalApplicationListenerAdapter", "short_description": " TransactionalApplicationListener  adapter that delegates the processing of\nan event to a target  ApplicationListener  instance. "},
{"api_id": 3129, "api_type": 2, "full_declaration": "TransactionalApplicationListenerMethodAdapter", "qualified_name": "org.springframework.transaction.event.TransactionalApplicationListenerMethodAdapter", "short_description": " GenericApplicationListener  adapter that delegates the processing of\nan event to a  TransactionalEventListener  annotated method. "},
{"api_id": 3130, "api_type": 2, "full_declaration": "TransactionalEventListenerFactory", "qualified_name": "org.springframework.transaction.event.TransactionalEventListenerFactory", "short_description": " EventListenerFactory  implementation that handles  TransactionalEventListener annotated methods. "},
{"api_id": 3131, "api_type": 8, "full_declaration": "TransactionPhase", "qualified_name": "org.springframework.transaction.event.TransactionPhase", "short_description": " The phase at which a transactional event listener applies. "},
{"api_id": 3132, "api_type": 9, "full_declaration": "TransactionalEventListener", "qualified_name": "org.springframework.transaction.event.TransactionalEventListener", "short_description": " An  EventListener  that is invoked according to a  TransactionPhase . "},
{"api_id": 3133, "api_type": 3, "full_declaration": "TransactionalProxy", "qualified_name": "org.springframework.transaction.interceptor.TransactionalProxy", "short_description": " A marker interface for manually created transactional proxies. "},
{"api_id": 3134, "api_type": 3, "full_declaration": "TransactionAspectSupport.CoroutinesInvocationCallback", "qualified_name": "org.springframework.transaction.interceptor.TransactionAspectSupport.CoroutinesInvocationCallback", "short_description": "\u00a0"},
{"api_id": 3135, "api_type": 3, "full_declaration": "TransactionAspectSupport.InvocationCallback", "qualified_name": "org.springframework.transaction.interceptor.TransactionAspectSupport.InvocationCallback", "short_description": " Simple callback interface for proceeding with the target invocation. "},
{"api_id": 3136, "api_type": 3, "full_declaration": "TransactionAttribute", "qualified_name": "org.springframework.transaction.interceptor.TransactionAttribute", "short_description": " This interface adds a  rollbackOn  specification to  TransactionDefinition . "},
{"api_id": 3137, "api_type": 3, "full_declaration": "TransactionAttributeSource", "qualified_name": "org.springframework.transaction.interceptor.TransactionAttributeSource", "short_description": " Strategy interface used by  TransactionInterceptor  for metadata retrieval. "},
{"api_id": 3138, "api_type": 2, "full_declaration": "AbstractFallbackTransactionAttributeSource", "qualified_name": "org.springframework.transaction.interceptor.AbstractFallbackTransactionAttributeSource", "short_description": " Abstract implementation of  TransactionAttributeSource  that caches\nattributes for methods and implements a fallback policy: 1. "},
{"api_id": 3139, "api_type": 2, "full_declaration": "BeanFactoryTransactionAttributeSourceAdvisor", "qualified_name": "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor", "short_description": " Advisor driven by a  TransactionAttributeSource , used to include\na transaction advice bean for methods that are transactional. "},
{"api_id": 3140, "api_type": 2, "full_declaration": "CompositeTransactionAttributeSource", "qualified_name": "org.springframework.transaction.interceptor.CompositeTransactionAttributeSource", "short_description": " Composite  TransactionAttributeSource  implementation that iterates\nover a given array of  TransactionAttributeSource  instances. "},
{"api_id": 3141, "api_type": 2, "full_declaration": "DefaultTransactionAttribute", "qualified_name": "org.springframework.transaction.interceptor.DefaultTransactionAttribute", "short_description": " Spring's common transaction attribute implementation. "},
{"api_id": 3142, "api_type": 2, "full_declaration": "DelegatingTransactionAttribute", "qualified_name": "org.springframework.transaction.interceptor.DelegatingTransactionAttribute", "short_description": " TransactionAttribute  implementation that delegates all calls to a given target TransactionAttribute  instance. "},
{"api_id": 3143, "api_type": 2, "full_declaration": "MatchAlwaysTransactionAttributeSource", "qualified_name": "org.springframework.transaction.interceptor.MatchAlwaysTransactionAttributeSource", "short_description": " Very simple implementation of TransactionAttributeSource which will always return\nthe same TransactionAttribute for all methods fed to it. "},
{"api_id": 3144, "api_type": 2, "full_declaration": "MethodMapTransactionAttributeSource", "qualified_name": "org.springframework.transaction.interceptor.MethodMapTransactionAttributeSource", "short_description": " Simple  TransactionAttributeSource  implementation that\nallows attributes to be stored per method in a  Map . "},
{"api_id": 3145, "api_type": 2, "full_declaration": "NameMatchTransactionAttributeSource", "qualified_name": "org.springframework.transaction.interceptor.NameMatchTransactionAttributeSource", "short_description": " Simple  TransactionAttributeSource  implementation that\nallows attributes to be matched by registered name. "},
{"api_id": 3146, "api_type": 2, "full_declaration": "NoRollbackRuleAttribute", "qualified_name": "org.springframework.transaction.interceptor.NoRollbackRuleAttribute", "short_description": " Tag subclass of  RollbackRuleAttribute  that has the opposite behavior\nto the  RollbackRuleAttribute  superclass. "},
{"api_id": 3147, "api_type": 2, "full_declaration": "RollbackRuleAttribute", "qualified_name": "org.springframework.transaction.interceptor.RollbackRuleAttribute", "short_description": " Rule determining whether or not a given exception (and any subclasses)\nshould cause a rollback. "},
{"api_id": 3148, "api_type": 2, "full_declaration": "RuleBasedTransactionAttribute", "qualified_name": "org.springframework.transaction.interceptor.RuleBasedTransactionAttribute", "short_description": " TransactionAttribute implementation that works out whether a given exception\nshould cause transaction rollback by applying a number of rollback rules,\nboth positive and negative. "},
{"api_id": 3149, "api_type": 2, "full_declaration": "TransactionAspectSupport", "qualified_name": "org.springframework.transaction.interceptor.TransactionAspectSupport", "short_description": " Base class for transactional aspects, such as the  TransactionInterceptor or an AspectJ aspect. "},
{"api_id": 3150, "api_type": 2, "full_declaration": "TransactionAspectSupport.TransactionInfo", "qualified_name": "org.springframework.transaction.interceptor.TransactionAspectSupport.TransactionInfo", "short_description": " Opaque object used to hold transaction information. "},
{"api_id": 3151, "api_type": 2, "full_declaration": "TransactionAttributeEditor", "qualified_name": "org.springframework.transaction.interceptor.TransactionAttributeEditor", "short_description": " PropertyEditor for  TransactionAttribute  objects. "},
{"api_id": 3152, "api_type": 2, "full_declaration": "TransactionAttributeSourceAdvisor", "qualified_name": "org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor", "short_description": " Advisor driven by a  TransactionAttributeSource , used to include\na  TransactionInterceptor  only for methods that are transactional. "},
{"api_id": 3153, "api_type": 2, "full_declaration": "TransactionAttributeSourceEditor", "qualified_name": "org.springframework.transaction.interceptor.TransactionAttributeSourceEditor", "short_description": " Property editor that converts a String into a  TransactionAttributeSource . "},
{"api_id": 3154, "api_type": 2, "full_declaration": "TransactionInterceptor", "qualified_name": "org.springframework.transaction.interceptor.TransactionInterceptor", "short_description": " AOP Alliance MethodInterceptor for declarative transaction\nmanagement using the common Spring transaction infrastructure\n( PlatformTransactionManager / ReactiveTransactionManager ). "},
{"api_id": 3155, "api_type": 2, "full_declaration": "TransactionProxyFactoryBean", "qualified_name": "org.springframework.transaction.interceptor.TransactionProxyFactoryBean", "short_description": " Proxy factory bean for simplified declarative transaction handling. "},
{"api_id": 3156, "api_type": 3, "full_declaration": "TransactionFactory", "qualified_name": "org.springframework.transaction.jta.TransactionFactory", "short_description": " Strategy interface for creating JTA  Transaction objects based on specified transactional characteristics. "},
{"api_id": 3157, "api_type": 2, "full_declaration": "JtaAfterCompletionSynchronization", "qualified_name": "org.springframework.transaction.jta.JtaAfterCompletionSynchronization", "short_description": " Adapter for a JTA Synchronization, invoking the  afterCommit  / afterCompletion  callbacks of Spring  TransactionSynchronization objects callbacks after the outer JTA transaction has completed. "},
{"api_id": 3158, "api_type": 2, "full_declaration": "JtaTransactionManager", "qualified_name": "org.springframework.transaction.jta.JtaTransactionManager", "short_description": " PlatformTransactionManager  implementation\nfor JTA, delegating to a backend JTA provider. "},
{"api_id": 3159, "api_type": 2, "full_declaration": "JtaTransactionObject", "qualified_name": "org.springframework.transaction.jta.JtaTransactionObject", "short_description": " JTA transaction object, representing a  UserTransaction . "},
{"api_id": 3160, "api_type": 2, "full_declaration": "ManagedTransactionAdapter", "qualified_name": "org.springframework.transaction.jta.ManagedTransactionAdapter", "short_description": " Adapter for a managed JTA Transaction handle, taking a JTA TransactionManager  reference and creating\na JTA  Transaction  handle for it. "},
{"api_id": 3161, "api_type": 2, "full_declaration": "SimpleTransactionFactory", "qualified_name": "org.springframework.transaction.jta.SimpleTransactionFactory", "short_description": " Default implementation of the  TransactionFactory  strategy interface,\nsimply wrapping a standard JTA  TransactionManager . "},
{"api_id": 3162, "api_type": 2, "full_declaration": "SpringJtaSynchronizationAdapter", "qualified_name": "org.springframework.transaction.jta.SpringJtaSynchronizationAdapter", "short_description": " Adapter that implements the JTA  Synchronization interface delegating to an underlying Spring TransactionSynchronization . "},
{"api_id": 3163, "api_type": 2, "full_declaration": "UserTransactionAdapter", "qualified_name": "org.springframework.transaction.jta.UserTransactionAdapter", "short_description": " Adapter for a JTA UserTransaction handle, taking a JTA TransactionManager  reference and creating\na JTA  UserTransaction  handle for it. "},
{"api_id": 3164, "api_type": 2, "full_declaration": "WebLogicJtaTransactionManager", "qualified_name": "org.springframework.transaction.jta.WebLogicJtaTransactionManager", "short_description": " Special  JtaTransactionManager  variant for BEA WebLogic (9.0 and higher). "},
{"api_id": 3165, "api_type": 2, "full_declaration": "WebSphereUowTransactionManager", "qualified_name": "org.springframework.transaction.jta.WebSphereUowTransactionManager", "short_description": " WebSphere-specific PlatformTransactionManager implementation that delegates\nto a  UOWManager  instance, obtained from WebSphere's\nJNDI environment. "},
{"api_id": 3166, "api_type": 3, "full_declaration": "TransactionalOperator", "qualified_name": "org.springframework.transaction.reactive.TransactionalOperator", "short_description": " Operator class that simplifies programmatic transaction demarcation and\ntransaction exception handling. "},
{"api_id": 3167, "api_type": 3, "full_declaration": "TransactionCallback", "qualified_name": "org.springframework.transaction.reactive.TransactionCallback", "short_description": " Callback interface for reactive transactional code. "},
{"api_id": 3168, "api_type": 3, "full_declaration": "TransactionSynchronization", "qualified_name": "org.springframework.transaction.reactive.TransactionSynchronization", "short_description": " Interface for reactive transaction synchronization callbacks. "},
{"api_id": 3169, "api_type": 2, "full_declaration": "AbstractReactiveTransactionManager", "qualified_name": "org.springframework.transaction.reactive.AbstractReactiveTransactionManager", "short_description": " Abstract base class that implements Spring's standard reactive transaction workflow,\nserving as basis for concrete platform transaction managers. "},
{"api_id": 3170, "api_type": 2, "full_declaration": "AbstractReactiveTransactionManager.SuspendedResourcesHolder", "qualified_name": "org.springframework.transaction.reactive.AbstractReactiveTransactionManager.SuspendedResourcesHolder", "short_description": " Holder for suspended resources. "},
{"api_id": 3171, "api_type": 2, "full_declaration": "GenericReactiveTransaction", "qualified_name": "org.springframework.transaction.reactive.GenericReactiveTransaction", "short_description": " Default implementation of the  ReactiveTransaction  interface,\nused by  AbstractReactiveTransactionManager . "},
{"api_id": 3172, "api_type": 2, "full_declaration": "ReactiveResourceSynchronization", "qualified_name": "org.springframework.transaction.reactive.ReactiveResourceSynchronization", "short_description": " TransactionSynchronization  implementation that manages a\nresource object bound through  TransactionSynchronizationManager . "},
{"api_id": 3173, "api_type": 2, "full_declaration": "TransactionContext", "qualified_name": "org.springframework.transaction.reactive.TransactionContext", "short_description": " Mutable transaction context that encapsulates transactional synchronizations and\nresources in the scope of a single transaction. "},
{"api_id": 3174, "api_type": 2, "full_declaration": "TransactionContextManager", "qualified_name": "org.springframework.transaction.reactive.TransactionContextManager", "short_description": " Delegate to register and obtain transactional contexts. "},
{"api_id": 3175, "api_type": 2, "full_declaration": "TransactionSynchronizationManager", "qualified_name": "org.springframework.transaction.reactive.TransactionSynchronizationManager", "short_description": " Central delegate that manages resources and transaction synchronizations per\nsubscriber context. "},
{"api_id": 3176, "api_type": 3, "full_declaration": "CallbackPreferringPlatformTransactionManager", "qualified_name": "org.springframework.transaction.support.CallbackPreferringPlatformTransactionManager", "short_description": " Extension of the  PlatformTransactionManager interface, exposing a method for executing a given callback within a transaction. "},
{"api_id": 3177, "api_type": 3, "full_declaration": "ResourceHolder", "qualified_name": "org.springframework.transaction.support.ResourceHolder", "short_description": " Generic interface to be implemented by resource holders. "},
{"api_id": 3178, "api_type": 3, "full_declaration": "ResourceTransactionDefinition", "qualified_name": "org.springframework.transaction.support.ResourceTransactionDefinition", "short_description": " Extended variant of  TransactionDefinition , indicating a resource transaction\nand in particular whether the transactional resource is ready for local optimizations. "},
{"api_id": 3179, "api_type": 3, "full_declaration": "ResourceTransactionManager", "qualified_name": "org.springframework.transaction.support.ResourceTransactionManager", "short_description": " Extension of the  PlatformTransactionManager interface, indicating a native resource transaction manager, operating on a single\ntarget resource. "},
{"api_id": 3180, "api_type": 3, "full_declaration": "SmartTransactionObject", "qualified_name": "org.springframework.transaction.support.SmartTransactionObject", "short_description": " Interface to be implemented by transaction objects that are able to\nreturn an internal rollback-only marker, typically from a another\ntransaction that has participated and marked it as rollback-only. "},
{"api_id": 3181, "api_type": 3, "full_declaration": "TransactionCallback", "qualified_name": "org.springframework.transaction.support.TransactionCallback", "short_description": " Callback interface for transactional code. "},
{"api_id": 3182, "api_type": 3, "full_declaration": "TransactionOperations", "qualified_name": "org.springframework.transaction.support.TransactionOperations", "short_description": " Interface specifying basic transaction execution operations. "},
{"api_id": 3183, "api_type": 3, "full_declaration": "TransactionSynchronization", "qualified_name": "org.springframework.transaction.support.TransactionSynchronization", "short_description": " Interface for transaction synchronization callbacks. "},
{"api_id": 3184, "api_type": 2, "full_declaration": "AbstractPlatformTransactionManager", "qualified_name": "org.springframework.transaction.support.AbstractPlatformTransactionManager", "short_description": " Abstract base class that implements Spring's standard transaction workflow,\nserving as basis for concrete platform transaction managers like JtaTransactionManager . "},
{"api_id": 3185, "api_type": 2, "full_declaration": "AbstractPlatformTransactionManager.SuspendedResourcesHolder", "qualified_name": "org.springframework.transaction.support.AbstractPlatformTransactionManager.SuspendedResourcesHolder", "short_description": " Holder for suspended resources. "},
{"api_id": 3186, "api_type": 2, "full_declaration": "AbstractTransactionStatus", "qualified_name": "org.springframework.transaction.support.AbstractTransactionStatus", "short_description": " Abstract base implementation of the TransactionStatus  interface. "},
{"api_id": 3187, "api_type": 2, "full_declaration": "DefaultTransactionDefinition", "qualified_name": "org.springframework.transaction.support.DefaultTransactionDefinition", "short_description": " Default implementation of the  TransactionDefinition  interface,\noffering bean-style configuration and sensible default values\n(PROPAGATION_REQUIRED, ISOLATION_DEFAULT, TIMEOUT_DEFAULT, readOnly=false). "},
{"api_id": 3188, "api_type": 2, "full_declaration": "DefaultTransactionStatus", "qualified_name": "org.springframework.transaction.support.DefaultTransactionStatus", "short_description": " Default implementation of the  TransactionStatus interface, used by  AbstractPlatformTransactionManager . "},
{"api_id": 3189, "api_type": 2, "full_declaration": "DelegatingTransactionDefinition", "qualified_name": "org.springframework.transaction.support.DelegatingTransactionDefinition", "short_description": " TransactionDefinition  implementation that delegates all calls to a given target TransactionDefinition  instance. "},
{"api_id": 3190, "api_type": 2, "full_declaration": "ResourceHolderSupport", "qualified_name": "org.springframework.transaction.support.ResourceHolderSupport", "short_description": " Convenient base class for resource holders. "},
{"api_id": 3191, "api_type": 2, "full_declaration": "ResourceHolderSynchronization", "qualified_name": "org.springframework.transaction.support.ResourceHolderSynchronization", "short_description": " TransactionSynchronization  implementation that manages a ResourceHolder  bound through  TransactionSynchronizationManager . "},
{"api_id": 3192, "api_type": 2, "full_declaration": "SimpleTransactionScope", "qualified_name": "org.springframework.transaction.support.SimpleTransactionScope", "short_description": " A simple transaction-backed  Scope  implementation, delegating to TransactionSynchronizationManager 's resource binding mechanism. "},
{"api_id": 3193, "api_type": 2, "full_declaration": "SimpleTransactionStatus", "qualified_name": "org.springframework.transaction.support.SimpleTransactionStatus", "short_description": " A simple  TransactionStatus implementation. "},
{"api_id": 3194, "api_type": 2, "full_declaration": "TransactionCallbackWithoutResult", "qualified_name": "org.springframework.transaction.support.TransactionCallbackWithoutResult", "short_description": " Simple convenience class for TransactionCallback implementation. "},
{"api_id": 3195, "api_type": 2, "full_declaration": "TransactionSynchronizationAdapter", "qualified_name": "org.springframework.transaction.support.TransactionSynchronizationAdapter", "short_description": "Deprecated as of 5.3, in favor of the default methods on the TransactionSynchronization  interface "},
{"api_id": 3196, "api_type": 2, "full_declaration": "TransactionSynchronizationManager", "qualified_name": "org.springframework.transaction.support.TransactionSynchronizationManager", "short_description": " Central delegate that manages resources and transaction synchronizations per thread. "},
{"api_id": 3197, "api_type": 2, "full_declaration": "TransactionSynchronizationUtils", "qualified_name": "org.springframework.transaction.support.TransactionSynchronizationUtils", "short_description": " Utility methods for triggering specific  TransactionSynchronization callback methods on all currently registered synchronizations. "},
{"api_id": 3198, "api_type": 2, "full_declaration": "TransactionTemplate", "qualified_name": "org.springframework.transaction.support.TransactionTemplate", "short_description": " Template class that simplifies programmatic transaction demarcation and\ntransaction exception handling. "},
{"api_id": 3199, "api_type": 3, "full_declaration": "Model", "qualified_name": "org.springframework.ui.Model", "short_description": " Java-5-specific interface that defines a holder for model attributes. "},
{"api_id": 3200, "api_type": 2, "full_declaration": "ConcurrentModel", "qualified_name": "org.springframework.ui.ConcurrentModel", "short_description": " Implementation of the  Model  interface based on a  ConcurrentHashMap for use in concurrent scenarios. "},
{"api_id": 3201, "api_type": 2, "full_declaration": "ExtendedModelMap", "qualified_name": "org.springframework.ui.ExtendedModelMap", "short_description": " Subclass of  ModelMap  that implements the  Model  interface. "},
{"api_id": 3202, "api_type": 2, "full_declaration": "ModelMap", "qualified_name": "org.springframework.ui.ModelMap", "short_description": " Implementation of  Map  for use when building model data for use\nwith UI tools. "},
{"api_id": 3203, "api_type": 3, "full_declaration": "HierarchicalThemeSource", "qualified_name": "org.springframework.ui.context.HierarchicalThemeSource", "short_description": " Sub-interface of ThemeSource to be implemented by objects that\ncan resolve theme messages hierarchically. "},
{"api_id": 3204, "api_type": 3, "full_declaration": "Theme", "qualified_name": "org.springframework.ui.context.Theme", "short_description": " A Theme can resolve theme-specific messages, codes, file paths, etcetera\n(e.g. CSS and image files in a web environment). "},
{"api_id": 3205, "api_type": 3, "full_declaration": "ThemeSource", "qualified_name": "org.springframework.ui.context.ThemeSource", "short_description": " Interface to be implemented by objects that can resolve  Themes . "},
{"api_id": 3206, "api_type": 2, "full_declaration": "DelegatingThemeSource", "qualified_name": "org.springframework.ui.context.support.DelegatingThemeSource", "short_description": " Empty ThemeSource that delegates all calls to the parent ThemeSource. "},
{"api_id": 3207, "api_type": 2, "full_declaration": "ResourceBundleThemeSource", "qualified_name": "org.springframework.ui.context.support.ResourceBundleThemeSource", "short_description": " ThemeSource  implementation that looks up an individual ResourceBundle  per theme. "},
{"api_id": 3208, "api_type": 2, "full_declaration": "SimpleTheme", "qualified_name": "org.springframework.ui.context.support.SimpleTheme", "short_description": " Default  Theme  implementation, wrapping a name and an\nunderlying  MessageSource . "},
{"api_id": 3209, "api_type": 2, "full_declaration": "UiApplicationContextUtils", "qualified_name": "org.springframework.ui.context.support.UiApplicationContextUtils", "short_description": " Utility class for UI application context implementations. "},
{"api_id": 3210, "api_type": 2, "full_declaration": "FreeMarkerConfigurationFactory", "qualified_name": "org.springframework.ui.freemarker.FreeMarkerConfigurationFactory", "short_description": " Factory that configures a FreeMarker Configuration. "},
{"api_id": 3211, "api_type": 2, "full_declaration": "FreeMarkerConfigurationFactoryBean", "qualified_name": "org.springframework.ui.freemarker.FreeMarkerConfigurationFactoryBean", "short_description": " Factory bean that creates a FreeMarker Configuration and provides it as\n bean reference. "},
{"api_id": 3212, "api_type": 2, "full_declaration": "FreeMarkerTemplateUtils", "qualified_name": "org.springframework.ui.freemarker.FreeMarkerTemplateUtils", "short_description": " Utility class for working with FreeMarker. "},
{"api_id": 3213, "api_type": 2, "full_declaration": "SpringTemplateLoader", "qualified_name": "org.springframework.ui.freemarker.SpringTemplateLoader", "short_description": " FreeMarker  TemplateLoader  adapter that loads via a Spring  ResourceLoader . "},
{"api_id": 3214, "api_type": 3, "full_declaration": "AutoPopulatingList.ElementFactory", "qualified_name": "org.springframework.util.AutoPopulatingList.ElementFactory", "short_description": " Factory interface for creating elements for an index-based access\ndata structure such as a  List . "},
{"api_id": 3215, "api_type": 3, "full_declaration": "ConcurrentReferenceHashMap.Reference", "qualified_name": "org.springframework.util.ConcurrentReferenceHashMap.Reference", "short_description": " A reference to an  ConcurrentReferenceHashMap.Entry  contained in the map. "},
{"api_id": 3216, "api_type": 3, "full_declaration": "ErrorHandler", "qualified_name": "org.springframework.util.ErrorHandler", "short_description": " A strategy for handling errors. "},
{"api_id": 3217, "api_type": 3, "full_declaration": "IdGenerator", "qualified_name": "org.springframework.util.IdGenerator", "short_description": " Contract for generating universally unique identifiers ( UUIDs ). "},
{"api_id": 3218, "api_type": 3, "full_declaration": "MultiValueMap", "qualified_name": "org.springframework.util.MultiValueMap", "short_description": " Extension of the  Map  interface that stores multiple values. "},
{"api_id": 3219, "api_type": 3, "full_declaration": "PathMatcher", "qualified_name": "org.springframework.util.PathMatcher", "short_description": " Strategy interface for  String -based path matching. "},
{"api_id": 3220, "api_type": 3, "full_declaration": "PropertiesPersister", "qualified_name": "org.springframework.util.PropertiesPersister", "short_description": " Strategy interface for persisting  java.util.Properties ,\nallowing for pluggable parsing strategies. "},
{"api_id": 3221, "api_type": 3, "full_declaration": "PropertyPlaceholderHelper.PlaceholderResolver", "qualified_name": "org.springframework.util.PropertyPlaceholderHelper.PlaceholderResolver", "short_description": " Strategy interface used to resolve replacement values for placeholders contained in Strings. "},
{"api_id": 3222, "api_type": 3, "full_declaration": "ReflectionUtils.FieldCallback", "qualified_name": "org.springframework.util.ReflectionUtils.FieldCallback", "short_description": " Callback interface invoked on each field in the hierarchy. "},
{"api_id": 3223, "api_type": 3, "full_declaration": "ReflectionUtils.FieldFilter", "qualified_name": "org.springframework.util.ReflectionUtils.FieldFilter", "short_description": " Callback optionally used to filter fields to be operated on by a field callback. "},
{"api_id": 3224, "api_type": 3, "full_declaration": "ReflectionUtils.MethodCallback", "qualified_name": "org.springframework.util.ReflectionUtils.MethodCallback", "short_description": " Action to take on each method. "},
{"api_id": 3225, "api_type": 3, "full_declaration": "ReflectionUtils.MethodFilter", "qualified_name": "org.springframework.util.ReflectionUtils.MethodFilter", "short_description": " Callback optionally used to filter methods to be operated on by a method callback. "},
{"api_id": 3226, "api_type": 3, "full_declaration": "RouteMatcher", "qualified_name": "org.springframework.util.RouteMatcher", "short_description": " Contract for matching routes to patterns. "},
{"api_id": 3227, "api_type": 3, "full_declaration": "RouteMatcher.Route", "qualified_name": "org.springframework.util.RouteMatcher.Route", "short_description": " A parsed representation of a route. "},
{"api_id": 3228, "api_type": 3, "full_declaration": "StringValueResolver", "qualified_name": "org.springframework.util.StringValueResolver", "short_description": " Simple strategy interface for resolving a String value. "},
{"api_id": 3229, "api_type": 2, "full_declaration": "AlternativeJdkIdGenerator", "qualified_name": "org.springframework.util.AlternativeJdkIdGenerator", "short_description": " An  IdGenerator  that uses  SecureRandom  for the initial seed and Random  thereafter, instead of calling  UUID.randomUUID()  every\ntime as  JdkIdGenerator  does. "},
{"api_id": 3230, "api_type": 2, "full_declaration": "AntPathMatcher", "qualified_name": "org.springframework.util.AntPathMatcher", "short_description": " PathMatcher  implementation for Ant-style path patterns. "},
{"api_id": 3231, "api_type": 2, "full_declaration": "AntPathMatcher.AntPathStringMatcher", "qualified_name": "org.springframework.util.AntPathMatcher.AntPathStringMatcher", "short_description": " Tests whether or not a string matches against a pattern via a  Pattern . "},
{"api_id": 3232, "api_type": 2, "full_declaration": "AntPathMatcher.AntPatternComparator", "qualified_name": "org.springframework.util.AntPathMatcher.AntPatternComparator", "short_description": " The default  Comparator  implementation returned by AntPathMatcher.getPatternComparator(String) . "},
{"api_id": 3233, "api_type": 2, "full_declaration": "Assert", "qualified_name": "org.springframework.util.Assert", "short_description": " Assertion utility class that assists in validating arguments. "},
{"api_id": 3234, "api_type": 2, "full_declaration": "AutoPopulatingList", "qualified_name": "org.springframework.util.AutoPopulatingList", "short_description": " Simple  List  wrapper class that allows for elements to be\nautomatically populated as they are requested. "},
{"api_id": 3235, "api_type": 2, "full_declaration": "Base64Utils", "qualified_name": "org.springframework.util.Base64Utils", "short_description": " A simple utility class for Base64 encoding and decoding. "},
{"api_id": 3236, "api_type": 2, "full_declaration": "ClassUtils", "qualified_name": "org.springframework.util.ClassUtils", "short_description": " Miscellaneous  java.lang.Class  utility methods. "},
{"api_id": 3237, "api_type": 2, "full_declaration": "CollectionUtils", "qualified_name": "org.springframework.util.CollectionUtils", "short_description": " Miscellaneous collection utility methods. "},
{"api_id": 3238, "api_type": 2, "full_declaration": "CommonsLogWriter", "qualified_name": "org.springframework.util.CommonsLogWriter", "short_description": " java.io.Writer  adapter for a Commons Logging  Log . "},
{"api_id": 3239, "api_type": 2, "full_declaration": "CompositeIterator", "qualified_name": "org.springframework.util.CompositeIterator", "short_description": " Composite iterator that combines multiple other iterators,\nas registered via  CompositeIterator.add(Iterator) . "},
{"api_id": 3240, "api_type": 2, "full_declaration": "ConcurrencyThrottleSupport", "qualified_name": "org.springframework.util.ConcurrencyThrottleSupport", "short_description": " Support class for throttling concurrent access to a specific resource. "},
{"api_id": 3241, "api_type": 2, "full_declaration": "ConcurrentLruCache", "qualified_name": "org.springframework.util.ConcurrentLruCache", "short_description": " Simple LRU (Least Recently Used) cache, bounded by a specified cache limit. "},
{"api_id": 3242, "api_type": 2, "full_declaration": "ConcurrentReferenceHashMap", "qualified_name": "org.springframework.util.ConcurrentReferenceHashMap", "short_description": " A  ConcurrentHashMap  that uses  soft  or weak  references for both  keys  and  values . "},
{"api_id": 3243, "api_type": 2, "full_declaration": "ConcurrentReferenceHashMap.Entry", "qualified_name": "org.springframework.util.ConcurrentReferenceHashMap.Entry", "short_description": " A single map entry. "},
{"api_id": 3244, "api_type": 2, "full_declaration": "CustomizableThreadCreator", "qualified_name": "org.springframework.util.CustomizableThreadCreator", "short_description": " Simple customizable helper class for creating new  Thread  instances. "},
{"api_id": 3245, "api_type": 2, "full_declaration": "DefaultPropertiesPersister", "qualified_name": "org.springframework.util.DefaultPropertiesPersister", "short_description": " Default implementation of the  PropertiesPersister  interface. "},
{"api_id": 3246, "api_type": 2, "full_declaration": "DigestUtils", "qualified_name": "org.springframework.util.DigestUtils", "short_description": " Miscellaneous methods for calculating digests. "},
{"api_id": 3247, "api_type": 2, "full_declaration": "ExceptionTypeFilter", "qualified_name": "org.springframework.util.ExceptionTypeFilter", "short_description": " An  InstanceFilter  implementation that handles exception types. "},
{"api_id": 3248, "api_type": 2, "full_declaration": "FastByteArrayOutputStream", "qualified_name": "org.springframework.util.FastByteArrayOutputStream", "short_description": " A speedy alternative to  ByteArrayOutputStream . "},
{"api_id": 3249, "api_type": 2, "full_declaration": "FileCopyUtils", "qualified_name": "org.springframework.util.FileCopyUtils", "short_description": " Simple utility methods for file and stream copying. "},
{"api_id": 3250, "api_type": 2, "full_declaration": "FileSystemUtils", "qualified_name": "org.springframework.util.FileSystemUtils", "short_description": " Utility methods for working with the file system. "},
{"api_id": 3251, "api_type": 2, "full_declaration": "InstanceFilter", "qualified_name": "org.springframework.util.InstanceFilter", "short_description": " A simple instance filter that checks if a given instance match based on\na collection of includes and excludes element. "},
{"api_id": 3252, "api_type": 2, "full_declaration": "JdkIdGenerator", "qualified_name": "org.springframework.util.JdkIdGenerator", "short_description": " An  IdGenerator  that calls  UUID.randomUUID() . "},
{"api_id": 3253, "api_type": 2, "full_declaration": "LinkedCaseInsensitiveMap", "qualified_name": "org.springframework.util.LinkedCaseInsensitiveMap", "short_description": " LinkedHashMap  variant that stores String keys in a case-insensitive\nmanner, for example for key-based access in a results table. "},
{"api_id": 3254, "api_type": 2, "full_declaration": "LinkedMultiValueMap", "qualified_name": "org.springframework.util.LinkedMultiValueMap", "short_description": " Simple implementation of  MultiValueMap  that wraps a  LinkedHashMap ,\nstoring multiple values in an  ArrayList . "},
{"api_id": 3255, "api_type": 2, "full_declaration": "MethodInvoker", "qualified_name": "org.springframework.util.MethodInvoker", "short_description": " Helper class that allows for specifying a method to invoke in a declarative\nfashion, be it static or non-static. "},
{"api_id": 3256, "api_type": 2, "full_declaration": "MimeType", "qualified_name": "org.springframework.util.MimeType", "short_description": " Represents a MIME Type, as originally defined in RFC 2046 and subsequently\nused in other Internet protocols including HTTP. "},
{"api_id": 3257, "api_type": 2, "full_declaration": "MimeType.SpecificityComparator", "qualified_name": "org.springframework.util.MimeType.SpecificityComparator", "short_description": " Comparator to sort  MimeTypes  in order of specificity. "},
{"api_id": 3258, "api_type": 2, "full_declaration": "MimeTypeUtils", "qualified_name": "org.springframework.util.MimeTypeUtils", "short_description": " Miscellaneous  MimeType  utility methods. "},
{"api_id": 3259, "api_type": 2, "full_declaration": "MultiValueMapAdapter", "qualified_name": "org.springframework.util.MultiValueMapAdapter", "short_description": " Adapts a given  Map  to the  MultiValueMap  contract. "},
{"api_id": 3260, "api_type": 2, "full_declaration": "NumberUtils", "qualified_name": "org.springframework.util.NumberUtils", "short_description": " Miscellaneous utility methods for number conversion and parsing. "},
{"api_id": 3261, "api_type": 2, "full_declaration": "ObjectUtils", "qualified_name": "org.springframework.util.ObjectUtils", "short_description": " Miscellaneous object utility methods. "},
{"api_id": 3262, "api_type": 2, "full_declaration": "PatternMatchUtils", "qualified_name": "org.springframework.util.PatternMatchUtils", "short_description": " Utility methods for simple pattern matching, in particular for\nSpring's typical \"xxx*\", \"*xxx\" and \"*xxx*\" pattern styles. "},
{"api_id": 3263, "api_type": 2, "full_declaration": "PropertyPlaceholderHelper", "qualified_name": "org.springframework.util.PropertyPlaceholderHelper", "short_description": " Utility class for working with Strings that have placeholder values in them. "},
{"api_id": 3264, "api_type": 2, "full_declaration": "ReflectionUtils", "qualified_name": "org.springframework.util.ReflectionUtils", "short_description": " Simple utility class for working with the reflection API and handling\nreflection exceptions. "},
{"api_id": 3265, "api_type": 2, "full_declaration": "ResizableByteArrayOutputStream", "qualified_name": "org.springframework.util.ResizableByteArrayOutputStream", "short_description": " An extension of  ByteArrayOutputStream  that:\nhas public  ResizableByteArrayOutputStream.grow(int) and  ResizableByteArrayOutputStream.resize(int)  methods\nto get more control over the size of the internal buffer\nhas a higher initial capacity (256) by default "},
{"api_id": 3266, "api_type": 2, "full_declaration": "ResourceUtils", "qualified_name": "org.springframework.util.ResourceUtils", "short_description": " Utility methods for resolving resource locations to files in the\nfile system. "},
{"api_id": 3267, "api_type": 2, "full_declaration": "SerializationUtils", "qualified_name": "org.springframework.util.SerializationUtils", "short_description": " Static utilities for serialization and deserialization. "},
{"api_id": 3268, "api_type": 2, "full_declaration": "SimpleIdGenerator", "qualified_name": "org.springframework.util.SimpleIdGenerator", "short_description": " A simple  IdGenerator  that starts at 1, increments up to Long.MAX_VALUE , and then rolls over. "},
{"api_id": 3269, "api_type": 2, "full_declaration": "SimpleRouteMatcher", "qualified_name": "org.springframework.util.SimpleRouteMatcher", "short_description": " RouteMatcher  that delegates to a  PathMatcher . "},
{"api_id": 3270, "api_type": 2, "full_declaration": "SocketUtils", "qualified_name": "org.springframework.util.SocketUtils", "short_description": " Simple utility methods for working with network sockets \u2014 for example,\nfor finding available ports on  localhost . "},
{"api_id": 3271, "api_type": 2, "full_declaration": "StopWatch", "qualified_name": "org.springframework.util.StopWatch", "short_description": " Simple stop watch, allowing for timing of a number of tasks, exposing total\nrunning time and running time for each named task. "},
{"api_id": 3272, "api_type": 2, "full_declaration": "StopWatch.TaskInfo", "qualified_name": "org.springframework.util.StopWatch.TaskInfo", "short_description": " Nested class to hold data about one task executed within the  StopWatch . "},
{"api_id": 3273, "api_type": 2, "full_declaration": "StreamUtils", "qualified_name": "org.springframework.util.StreamUtils", "short_description": " Simple utility methods for dealing with streams. "},
{"api_id": 3274, "api_type": 2, "full_declaration": "StringUtils", "qualified_name": "org.springframework.util.StringUtils", "short_description": " Miscellaneous  String  utility methods. "},
{"api_id": 3275, "api_type": 2, "full_declaration": "SystemPropertyUtils", "qualified_name": "org.springframework.util.SystemPropertyUtils", "short_description": " Helper class for resolving placeholders in texts. "},
{"api_id": 3276, "api_type": 2, "full_declaration": "TypeUtils", "qualified_name": "org.springframework.util.TypeUtils", "short_description": " Utility to work with Java 5 generic type parameters. "},
{"api_id": 3277, "api_type": 8, "full_declaration": "ConcurrentReferenceHashMap.ReferenceType", "qualified_name": "org.springframework.util.ConcurrentReferenceHashMap.ReferenceType", "short_description": " Various reference types supported by this map. "},
{"api_id": 3278, "api_type": 8, "full_declaration": "ConcurrentReferenceHashMap.Restructure", "qualified_name": "org.springframework.util.ConcurrentReferenceHashMap.Restructure", "short_description": " The types of restructuring that can be performed. "},
{"api_id": 3279, "api_type": 4, "full_declaration": "AutoPopulatingList.ElementInstantiationException", "qualified_name": "org.springframework.util.AutoPopulatingList.ElementInstantiationException", "short_description": " Exception to be thrown from ElementFactory. "},
{"api_id": 3280, "api_type": 4, "full_declaration": "InvalidMimeTypeException", "qualified_name": "org.springframework.util.InvalidMimeTypeException", "short_description": " Exception thrown from  MimeTypeUtils.parseMimeType(String)  in case of\nencountering an invalid content type specification String. "},
{"api_id": 3281, "api_type": 3, "full_declaration": "BackOff", "qualified_name": "org.springframework.util.backoff.BackOff", "short_description": " Provide a  BackOffExecution  that indicates the rate at which\nan operation should be retried. "},
{"api_id": 3282, "api_type": 3, "full_declaration": "BackOffExecution", "qualified_name": "org.springframework.util.backoff.BackOffExecution", "short_description": " Represent a particular back-off execution. "},
{"api_id": 3283, "api_type": 2, "full_declaration": "ExponentialBackOff", "qualified_name": "org.springframework.util.backoff.ExponentialBackOff", "short_description": " Implementation of  BackOff  that increases the back off period for each\nretry attempt. "},
{"api_id": 3284, "api_type": 2, "full_declaration": "FixedBackOff", "qualified_name": "org.springframework.util.backoff.FixedBackOff", "short_description": " A simple  BackOff  implementation that provides a fixed interval\nbetween two attempts and a maximum number of retries. "},
{"api_id": 3285, "api_type": 2, "full_declaration": "BooleanComparator", "qualified_name": "org.springframework.util.comparator.BooleanComparator", "short_description": " A  Comparator  for  Boolean  objects that can sort either true  or  false  first. "},
{"api_id": 3286, "api_type": 2, "full_declaration": "ComparableComparator", "qualified_name": "org.springframework.util.comparator.ComparableComparator", "short_description": " Comparator that adapts Comparables to the Comparator interface. "},
{"api_id": 3287, "api_type": 2, "full_declaration": "Comparators", "qualified_name": "org.springframework.util.comparator.Comparators", "short_description": " Convenient entry point with generically typed factory methods\nfor common Spring  Comparator  variants. "},
{"api_id": 3288, "api_type": 2, "full_declaration": "CompoundComparator", "qualified_name": "org.springframework.util.comparator.CompoundComparator", "short_description": "Deprecated as of Spring Framework 5.0, in favor of the standard JDK 8 Comparator.thenComparing(Comparator) "},
{"api_id": 3289, "api_type": 2, "full_declaration": "InstanceComparator", "qualified_name": "org.springframework.util.comparator.InstanceComparator", "short_description": " Compares objects based on an arbitrary class order. "},
{"api_id": 3290, "api_type": 2, "full_declaration": "InvertibleComparator", "qualified_name": "org.springframework.util.comparator.InvertibleComparator", "short_description": "Deprecated as of Spring Framework 5.0, in favor of the standard JDK 8 Comparator.reversed() "},
{"api_id": 3291, "api_type": 2, "full_declaration": "NullSafeComparator", "qualified_name": "org.springframework.util.comparator.NullSafeComparator", "short_description": " A Comparator that will safely compare nulls to be lower or higher than\nother objects. "},
{"api_id": 3292, "api_type": 3, "full_declaration": "FailureCallback", "qualified_name": "org.springframework.util.concurrent.FailureCallback", "short_description": " Failure callback for a  ListenableFuture . "},
{"api_id": 3293, "api_type": 3, "full_declaration": "ListenableFuture", "qualified_name": "org.springframework.util.concurrent.ListenableFuture", "short_description": " Extend  Future  with the capability to accept completion callbacks. "},
{"api_id": 3294, "api_type": 3, "full_declaration": "ListenableFutureCallback", "qualified_name": "org.springframework.util.concurrent.ListenableFutureCallback", "short_description": " Callback mechanism for the outcome, success or failure, from a ListenableFuture . "},
{"api_id": 3295, "api_type": 3, "full_declaration": "SuccessCallback", "qualified_name": "org.springframework.util.concurrent.SuccessCallback", "short_description": " Success callback for a  ListenableFuture . "},
{"api_id": 3296, "api_type": 2, "full_declaration": "CompletableToListenableFutureAdapter", "qualified_name": "org.springframework.util.concurrent.CompletableToListenableFutureAdapter", "short_description": " Adapts a  CompletableFuture  or  CompletionStage  into a\nSpring  ListenableFuture . "},
{"api_id": 3297, "api_type": 2, "full_declaration": "FutureAdapter", "qualified_name": "org.springframework.util.concurrent.FutureAdapter", "short_description": " Abstract class that adapts a  Future  parameterized over S into a  Future parameterized over T. "},
{"api_id": 3298, "api_type": 2, "full_declaration": "ListenableFutureAdapter", "qualified_name": "org.springframework.util.concurrent.ListenableFutureAdapter", "short_description": " Abstract class that adapts a  ListenableFuture  parameterized over S into a ListenableFuture  parameterized over T. "},
{"api_id": 3299, "api_type": 2, "full_declaration": "ListenableFutureCallbackRegistry", "qualified_name": "org.springframework.util.concurrent.ListenableFutureCallbackRegistry", "short_description": " Helper class for  ListenableFuture  implementations that maintains a\nof success and failure callbacks and helps to notify them. "},
{"api_id": 3300, "api_type": 2, "full_declaration": "ListenableFutureTask", "qualified_name": "org.springframework.util.concurrent.ListenableFutureTask", "short_description": " Extension of  FutureTask  that implements  ListenableFuture . "},
{"api_id": 3301, "api_type": 2, "full_declaration": "MonoToListenableFutureAdapter", "qualified_name": "org.springframework.util.concurrent.MonoToListenableFutureAdapter", "short_description": " Adapts a  Mono  into a  ListenableFuture  by obtaining a CompletableFuture  from the  Mono  via  Mono.toFuture() and then adapting it with  CompletableToListenableFutureAdapter . "},
{"api_id": 3302, "api_type": 2, "full_declaration": "SettableListenableFuture", "qualified_name": "org.springframework.util.concurrent.SettableListenableFuture", "short_description": " A  ListenableFuture  whose value can be set via  SettableListenableFuture.set(Object) or  SettableListenableFuture.setException(Throwable) . "},
{"api_id": 3303, "api_type": 2, "full_declaration": "SingletonSupplier", "qualified_name": "org.springframework.util.function.SingletonSupplier", "short_description": " A  Supplier  decorator that caches a singleton result and\nmakes it available from  SingletonSupplier.get()  (nullable) and  SingletonSupplier.obtain()  (null-safe). "},
{"api_id": 3304, "api_type": 2, "full_declaration": "SupplierUtils", "qualified_name": "org.springframework.util.function.SupplierUtils", "short_description": " Convenience utilities for  Supplier  handling. "},
{"api_id": 3305, "api_type": 2, "full_declaration": "DataSize", "qualified_name": "org.springframework.util.unit.DataSize", "short_description": " A data size, such as '12MB'. "},
{"api_id": 3306, "api_type": 8, "full_declaration": "DataUnit", "qualified_name": "org.springframework.util.unit.DataUnit", "short_description": " A standard set of  DataSize  units. "},
{"api_id": 3307, "api_type": 2, "full_declaration": "DomUtils", "qualified_name": "org.springframework.util.xml.DomUtils", "short_description": " Convenience methods for working with the DOM API,\nin particular for working with DOM Nodes and DOM Elements. "},
{"api_id": 3308, "api_type": 2, "full_declaration": "SimpleNamespaceContext", "qualified_name": "org.springframework.util.xml.SimpleNamespaceContext", "short_description": " Simple  javax.xml.namespace.NamespaceContext  implementation. "},
{"api_id": 3309, "api_type": 2, "full_declaration": "SimpleSaxErrorHandler", "qualified_name": "org.springframework.util.xml.SimpleSaxErrorHandler", "short_description": " Simple  org.xml.sax.ErrorHandler  implementation:\nlogs warnings using the given Commons Logging logger instance,\nand rethrows errors to discontinue the XML transformation. "},
{"api_id": 3310, "api_type": 2, "full_declaration": "SimpleTransformErrorListener", "qualified_name": "org.springframework.util.xml.SimpleTransformErrorListener", "short_description": " Simple  javax.xml.transform.ErrorListener  implementation:\nlogs warnings using the given Commons Logging logger instance,\nand rethrows errors to discontinue the XML transformation. "},
{"api_id": 3311, "api_type": 2, "full_declaration": "StaxUtils", "qualified_name": "org.springframework.util.xml.StaxUtils", "short_description": " Convenience methods for working with the StAX API. "},
{"api_id": 3312, "api_type": 2, "full_declaration": "TransformerUtils", "qualified_name": "org.springframework.util.xml.TransformerUtils", "short_description": " Contains common behavior relating to  Transformers and the  javax.xml.transform  package in general. "},
{"api_id": 3313, "api_type": 2, "full_declaration": "XmlValidationModeDetector", "qualified_name": "org.springframework.util.xml.XmlValidationModeDetector", "short_description": " Detects whether an XML stream is using DTD- or XSD-based validation. "},
{"api_id": 3314, "api_type": 3, "full_declaration": "BindingErrorProcessor", "qualified_name": "org.springframework.validation.BindingErrorProcessor", "short_description": " Strategy for processing  DataBinder 's missing field errors,\nand for translating a  PropertyAccessException  to a FieldError . "},
{"api_id": 3315, "api_type": 3, "full_declaration": "BindingResult", "qualified_name": "org.springframework.validation.BindingResult", "short_description": " General interface that represents binding results. "},
{"api_id": 3316, "api_type": 3, "full_declaration": "Errors", "qualified_name": "org.springframework.validation.Errors", "short_description": " Stores and exposes information about data-binding and validation\nerrors for a specific object. "},
{"api_id": 3317, "api_type": 3, "full_declaration": "MessageCodeFormatter", "qualified_name": "org.springframework.validation.MessageCodeFormatter", "short_description": " A strategy interface for formatting message codes. "},
{"api_id": 3318, "api_type": 3, "full_declaration": "MessageCodesResolver", "qualified_name": "org.springframework.validation.MessageCodesResolver", "short_description": " Strategy interface for building message codes from validation error codes. "},
{"api_id": 3319, "api_type": 3, "full_declaration": "SmartValidator", "qualified_name": "org.springframework.validation.SmartValidator", "short_description": " Extended variant of the  Validator  interface, adding support for\nvalidation 'hints'. "},
{"api_id": 3320, "api_type": 3, "full_declaration": "Validator", "qualified_name": "org.springframework.validation.Validator", "short_description": " A validator for application-specific objects. "},
{"api_id": 3321, "api_type": 2, "full_declaration": "AbstractBindingResult", "qualified_name": "org.springframework.validation.AbstractBindingResult", "short_description": " Abstract implementation of the  BindingResult  interface and\nits super-interface  Errors . "},
{"api_id": 3322, "api_type": 2, "full_declaration": "AbstractErrors", "qualified_name": "org.springframework.validation.AbstractErrors", "short_description": " Abstract implementation of the  Errors  interface. "},
{"api_id": 3323, "api_type": 2, "full_declaration": "AbstractPropertyBindingResult", "qualified_name": "org.springframework.validation.AbstractPropertyBindingResult", "short_description": " Abstract base class for  BindingResult  implementations that work with\nSpring's  PropertyAccessor  mechanism. "},
{"api_id": 3324, "api_type": 2, "full_declaration": "BeanPropertyBindingResult", "qualified_name": "org.springframework.validation.BeanPropertyBindingResult", "short_description": " Default implementation of the  Errors  and  BindingResult interfaces, for the registration and evaluation of binding errors on\nJavaBean objects. "},
{"api_id": 3325, "api_type": 2, "full_declaration": "BindingResultUtils", "qualified_name": "org.springframework.validation.BindingResultUtils", "short_description": " Convenience methods for looking up BindingResults in a model Map. "},
{"api_id": 3326, "api_type": 2, "full_declaration": "DataBinder", "qualified_name": "org.springframework.validation.DataBinder", "short_description": " Binder that allows for setting property values onto a target object,\nincluding support for validation and binding result analysis. "},
{"api_id": 3327, "api_type": 2, "full_declaration": "DefaultBindingErrorProcessor", "qualified_name": "org.springframework.validation.DefaultBindingErrorProcessor", "short_description": " Default  BindingErrorProcessor  implementation. "},
{"api_id": 3328, "api_type": 2, "full_declaration": "DefaultMessageCodesResolver", "qualified_name": "org.springframework.validation.DefaultMessageCodesResolver", "short_description": " Default implementation of the  MessageCodesResolver  interface. "},
{"api_id": 3329, "api_type": 2, "full_declaration": "DirectFieldBindingResult", "qualified_name": "org.springframework.validation.DirectFieldBindingResult", "short_description": " Special implementation of the Errors and BindingResult interfaces,\nsupporting registration and evaluation of binding errors on value objects. "},
{"api_id": 3330, "api_type": 2, "full_declaration": "FieldError", "qualified_name": "org.springframework.validation.FieldError", "short_description": " Encapsulates a field error, that is, a reason for rejecting a specific\nfield value. "},
{"api_id": 3331, "api_type": 2, "full_declaration": "MapBindingResult", "qualified_name": "org.springframework.validation.MapBindingResult", "short_description": " Map-based implementation of the BindingResult interface,\nsupporting registration and evaluation of binding errors on\nMap attributes. "},
{"api_id": 3332, "api_type": 2, "full_declaration": "ObjectError", "qualified_name": "org.springframework.validation.ObjectError", "short_description": " Encapsulates an object error, that is, a global reason for rejecting\nan object. "},
{"api_id": 3333, "api_type": 2, "full_declaration": "ValidationUtils", "qualified_name": "org.springframework.validation.ValidationUtils", "short_description": " Utility class offering convenient methods for invoking a  Validator and for rejecting empty fields. "},
{"api_id": 3334, "api_type": 8, "full_declaration": "DefaultMessageCodesResolver.Format", "qualified_name": "org.springframework.validation.DefaultMessageCodesResolver.Format", "short_description": " Common message code formats. "},
{"api_id": 3335, "api_type": 4, "full_declaration": "BindException", "qualified_name": "org.springframework.validation.BindException", "short_description": " Thrown when binding errors are considered fatal. "},
{"api_id": 3336, "api_type": 9, "full_declaration": "Validated", "qualified_name": "org.springframework.validation.annotation.Validated", "short_description": " Variant of JSR-303's  Valid , supporting the\nspecification of validation groups. "},
{"api_id": 3337, "api_type": 2, "full_declaration": "BeanValidationPostProcessor", "qualified_name": "org.springframework.validation.beanvalidation.BeanValidationPostProcessor", "short_description": " Simple  BeanPostProcessor  that checks JSR-303 constraint annotations\nin Spring-managed beans, throwing an initialization exception in case of\nconstraint violations right before calling the bean's init method (if any). "},
{"api_id": 3338, "api_type": 2, "full_declaration": "CustomValidatorBean", "qualified_name": "org.springframework.validation.beanvalidation.CustomValidatorBean", "short_description": " Configurable bean class that exposes a specific JSR-303 Validator\nthrough its original interface as well as through the Spring Validator  interface. "},
{"api_id": 3339, "api_type": 2, "full_declaration": "LocaleContextMessageInterpolator", "qualified_name": "org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator", "short_description": " Delegates to a target  MessageInterpolator  implementation but enforces Spring's\nmanaged Locale. "},
{"api_id": 3340, "api_type": 2, "full_declaration": "LocalValidatorFactoryBean", "qualified_name": "org.springframework.validation.beanvalidation.LocalValidatorFactoryBean", "short_description": " This is the central class for  javax.validation  (JSR-303) setup in a Spring\napplication context: It bootstraps a  javax.validation.ValidationFactory  and\nexposes it through the Spring  Validator  interface\nas well as through the JSR-303  Validator  interface and the ValidatorFactory  interface itself. "},
{"api_id": 3341, "api_type": 2, "full_declaration": "MessageSourceResourceBundleLocator", "qualified_name": "org.springframework.validation.beanvalidation.MessageSourceResourceBundleLocator", "short_description": " Implementation of Hibernate Validator 4.3/5.x's  ResourceBundleLocator  interface,\nexposing a Spring  MessageSource  as localized  MessageSourceResourceBundle . "},
{"api_id": 3342, "api_type": 2, "full_declaration": "MethodValidationInterceptor", "qualified_name": "org.springframework.validation.beanvalidation.MethodValidationInterceptor", "short_description": " An AOP Alliance  MethodInterceptor  implementation that delegates to a\nJSR-303 provider for performing method-level validation on annotated methods. "},
{"api_id": 3343, "api_type": 2, "full_declaration": "MethodValidationPostProcessor", "qualified_name": "org.springframework.validation.beanvalidation.MethodValidationPostProcessor", "short_description": " A convenient  BeanPostProcessor  implementation that delegates to a\nJSR-303 provider for performing method-level validation on annotated methods. "},
{"api_id": 3344, "api_type": 2, "full_declaration": "OptionalValidatorFactoryBean", "qualified_name": "org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean", "short_description": " LocalValidatorFactoryBean  subclass that simply turns Validator  calls into no-ops\nin case of no Bean Validation provider being available. "},
{"api_id": 3345, "api_type": 2, "full_declaration": "SpringConstraintValidatorFactory", "qualified_name": "org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory", "short_description": " JSR-303  ConstraintValidatorFactory  implementation that delegates to a\nSpring BeanFactory for creating autowired  ConstraintValidator  instances. "},
{"api_id": 3346, "api_type": 2, "full_declaration": "SpringValidatorAdapter", "qualified_name": "org.springframework.validation.beanvalidation.SpringValidatorAdapter", "short_description": " Adapter that takes a JSR-303  javax.validator.Validator  and\nexposes it as a Spring  Validator while also exposing the original JSR-303 Validator interface itself. "},
{"api_id": 3347, "api_type": 2, "full_declaration": "BindingAwareConcurrentModel", "qualified_name": "org.springframework.validation.support.BindingAwareConcurrentModel", "short_description": " Subclass of  ConcurrentModel  that automatically removes\nthe  BindingResult  object when its corresponding\ntarget attribute is replaced through regular  Map  operations. "},
{"api_id": 3348, "api_type": 2, "full_declaration": "BindingAwareModelMap", "qualified_name": "org.springframework.validation.support.BindingAwareModelMap", "short_description": " Subclass of  ExtendedModelMap  that automatically removes\na  BindingResult  object if the corresponding\ntarget attribute gets replaced through regular  Map  operations. "},
{"api_id": 3349, "api_type": 3, "full_declaration": "HttpRequestHandler", "qualified_name": "org.springframework.web.HttpRequestHandler", "short_description": " Plain handler interface for components that process HTTP requests,\nanalogous to a Servlet. "},
{"api_id": 3350, "api_type": 3, "full_declaration": "WebApplicationInitializer", "qualified_name": "org.springframework.web.WebApplicationInitializer", "short_description": " Interface to be implemented in Servlet 3.0+ environments in order to configure the ServletContext  programmatically -- as opposed to (or possibly in conjunction\nwith) the traditional  web.xml -based approach. "},
{"api_id": 3351, "api_type": 2, "full_declaration": "SpringServletContainerInitializer", "qualified_name": "org.springframework.web.SpringServletContainerInitializer", "short_description": " Servlet 3.0  ServletContainerInitializer  designed to support code-based\nconfiguration of the servlet container using Spring's  WebApplicationInitializer SPI as opposed to (or possibly in combination with) the traditional web.xml -based approach. "},
{"api_id": 3352, "api_type": 4, "full_declaration": "HttpMediaTypeException", "qualified_name": "org.springframework.web.HttpMediaTypeException", "short_description": " Abstract base for exceptions related to media types. "},
{"api_id": 3353, "api_type": 4, "full_declaration": "HttpMediaTypeNotAcceptableException", "qualified_name": "org.springframework.web.HttpMediaTypeNotAcceptableException", "short_description": " Exception thrown when the request handler cannot generate a response that is acceptable by the client. "},
{"api_id": 3354, "api_type": 4, "full_declaration": "HttpMediaTypeNotSupportedException", "qualified_name": "org.springframework.web.HttpMediaTypeNotSupportedException", "short_description": " Exception thrown when a client POSTs, PUTs, or PATCHes content of a type\nnot supported by request handler. "},
{"api_id": 3355, "api_type": 4, "full_declaration": "HttpRequestMethodNotSupportedException", "qualified_name": "org.springframework.web.HttpRequestMethodNotSupportedException", "short_description": " Exception thrown when a request handler does not support a\nspecific request method. "},
{"api_id": 3356, "api_type": 4, "full_declaration": "HttpSessionRequiredException", "qualified_name": "org.springframework.web.HttpSessionRequiredException", "short_description": " Exception thrown when an HTTP request handler requires a pre-existing session. "},
{"api_id": 3357, "api_type": 3, "full_declaration": "ContentNegotiationStrategy", "qualified_name": "org.springframework.web.accept.ContentNegotiationStrategy", "short_description": " A strategy for resolving the requested media types for a request. "},
{"api_id": 3358, "api_type": 3, "full_declaration": "MediaTypeFileExtensionResolver", "qualified_name": "org.springframework.web.accept.MediaTypeFileExtensionResolver", "short_description": " Strategy to resolve a  MediaType  to a list of file extensions \u2014\nfor example, to resolve \"application/json\" to \"json\". "},
{"api_id": 3359, "api_type": 2, "full_declaration": "AbstractMappingContentNegotiationStrategy", "qualified_name": "org.springframework.web.accept.AbstractMappingContentNegotiationStrategy", "short_description": " Base class for  ContentNegotiationStrategy  implementations with the\nsteps to resolve a request to media types. "},
{"api_id": 3360, "api_type": 2, "full_declaration": "ContentNegotiationManager", "qualified_name": "org.springframework.web.accept.ContentNegotiationManager", "short_description": " Central class to determine requested  media types for a request. "},
{"api_id": 3361, "api_type": 2, "full_declaration": "ContentNegotiationManagerFactoryBean", "qualified_name": "org.springframework.web.accept.ContentNegotiationManagerFactoryBean", "short_description": " Factory to create a  ContentNegotiationManager  and configure it with ContentNegotiationStrategy  instances. "},
{"api_id": 3362, "api_type": 2, "full_declaration": "FixedContentNegotiationStrategy", "qualified_name": "org.springframework.web.accept.FixedContentNegotiationStrategy", "short_description": " A  ContentNegotiationStrategy  that returns a fixed content type. "},
{"api_id": 3363, "api_type": 2, "full_declaration": "HeaderContentNegotiationStrategy", "qualified_name": "org.springframework.web.accept.HeaderContentNegotiationStrategy", "short_description": " A  ContentNegotiationStrategy  that checks the 'Accept' request header. "},
{"api_id": 3364, "api_type": 2, "full_declaration": "MappingMediaTypeFileExtensionResolver", "qualified_name": "org.springframework.web.accept.MappingMediaTypeFileExtensionResolver", "short_description": " An implementation of  MediaTypeFileExtensionResolver  that maintains\nlookups between file extensions and MediaTypes in both directions. "},
{"api_id": 3365, "api_type": 2, "full_declaration": "ParameterContentNegotiationStrategy", "qualified_name": "org.springframework.web.accept.ParameterContentNegotiationStrategy", "short_description": " Strategy that resolves the requested content type from a query parameter. "},
{"api_id": 3366, "api_type": 2, "full_declaration": "PathExtensionContentNegotiationStrategy", "qualified_name": "org.springframework.web.accept.PathExtensionContentNegotiationStrategy", "short_description": "Deprecated as of 5.2.4. "},
{"api_id": 3367, "api_type": 2, "full_declaration": "ServletPathExtensionContentNegotiationStrategy", "qualified_name": "org.springframework.web.accept.ServletPathExtensionContentNegotiationStrategy", "short_description": "Deprecated as of 5.2.4. "},
{"api_id": 3368, "api_type": 2, "full_declaration": "EscapedErrors", "qualified_name": "org.springframework.web.bind.EscapedErrors", "short_description": " Errors wrapper that adds automatic HTML escaping to the wrapped instance,\nfor convenient usage in HTML views. "},
{"api_id": 3369, "api_type": 2, "full_declaration": "ServletRequestDataBinder", "qualified_name": "org.springframework.web.bind.ServletRequestDataBinder", "short_description": " Special  DataBinder  to perform data binding\nfrom servlet request parameters to JavaBeans, including support for multipart files. "},
{"api_id": 3370, "api_type": 2, "full_declaration": "ServletRequestParameterPropertyValues", "qualified_name": "org.springframework.web.bind.ServletRequestParameterPropertyValues", "short_description": " PropertyValues implementation created from parameters in a ServletRequest. "},
{"api_id": 3371, "api_type": 2, "full_declaration": "ServletRequestUtils", "qualified_name": "org.springframework.web.bind.ServletRequestUtils", "short_description": " Parameter extraction methods, for an approach distinct from data binding,\nin which parameters of specific types are required. "},
{"api_id": 3372, "api_type": 2, "full_declaration": "WebDataBinder", "qualified_name": "org.springframework.web.bind.WebDataBinder", "short_description": " Special  DataBinder  for data binding from web request parameters\nto JavaBean objects. "},
{"api_id": 3373, "api_type": 4, "full_declaration": "MethodArgumentNotValidException", "qualified_name": "org.springframework.web.bind.MethodArgumentNotValidException", "short_description": " Exception to be thrown when validation on an argument annotated with  @Valid  fails. "},
{"api_id": 3374, "api_type": 4, "full_declaration": "MissingMatrixVariableException", "qualified_name": "org.springframework.web.bind.MissingMatrixVariableException", "short_description": " ServletRequestBindingException  subclass that indicates that a matrix\nvariable expected in the method parameters of an  @RequestMapping method is not present among the matrix variables extracted from the URL. "},
{"api_id": 3375, "api_type": 4, "full_declaration": "MissingPathVariableException", "qualified_name": "org.springframework.web.bind.MissingPathVariableException", "short_description": " ServletRequestBindingException  subclass that indicates that a path\nvariable expected in the method parameters of an  @RequestMapping method is not present among the URI variables extracted from the URL. "},
{"api_id": 3376, "api_type": 4, "full_declaration": "MissingRequestCookieException", "qualified_name": "org.springframework.web.bind.MissingRequestCookieException", "short_description": " ServletRequestBindingException  subclass that indicates\nthat a request cookie expected in the method parameters of an @RequestMapping  method is not present. "},
{"api_id": 3377, "api_type": 4, "full_declaration": "MissingRequestHeaderException", "qualified_name": "org.springframework.web.bind.MissingRequestHeaderException", "short_description": " ServletRequestBindingException  subclass that indicates\nthat a request header expected in the method parameters of an @RequestMapping  method is not present. "},
{"api_id": 3378, "api_type": 4, "full_declaration": "MissingServletRequestParameterException", "qualified_name": "org.springframework.web.bind.MissingServletRequestParameterException", "short_description": " ServletRequestBindingException  subclass that indicates a missing parameter. "},
{"api_id": 3379, "api_type": 4, "full_declaration": "ServletRequestBindingException", "qualified_name": "org.springframework.web.bind.ServletRequestBindingException", "short_description": " Fatal binding exception, thrown when we want to\ntreat binding exceptions as unrecoverable. "},
{"api_id": 3380, "api_type": 4, "full_declaration": "UnsatisfiedServletRequestParameterException", "qualified_name": "org.springframework.web.bind.UnsatisfiedServletRequestParameterException", "short_description": " ServletRequestBindingException  subclass that indicates an unsatisfied\nparameter condition, as typically expressed using an  @RequestMapping annotation at the  @Controller  type level. "},
{"api_id": 3381, "api_type": 3, "full_declaration": "ValueConstants", "qualified_name": "org.springframework.web.bind.annotation.ValueConstants", "short_description": " Common value constants shared between bind annotations. "},
{"api_id": 3382, "api_type": 8, "full_declaration": "RequestMethod", "qualified_name": "org.springframework.web.bind.annotation.RequestMethod", "short_description": " Java 5 enumeration of HTTP request methods. "},
{"api_id": 3383, "api_type": 9, "full_declaration": "ControllerAdvice", "qualified_name": "org.springframework.web.bind.annotation.ControllerAdvice", "short_description": " Specialization of  @Component  for classes that declare @ExceptionHandler ,  @InitBinder , or @ModelAttribute  methods to be shared across\nmultiple  @Controller  classes. "},
{"api_id": 3384, "api_type": 9, "full_declaration": "CookieValue", "qualified_name": "org.springframework.web.bind.annotation.CookieValue", "short_description": " Annotation which indicates that a method parameter should be bound to an HTTP cookie. "},
{"api_id": 3385, "api_type": 9, "full_declaration": "CrossOrigin", "qualified_name": "org.springframework.web.bind.annotation.CrossOrigin", "short_description": " Annotation for permitting cross-origin requests on specific handler classes\nand/or handler methods. "},
{"api_id": 3386, "api_type": 9, "full_declaration": "DeleteMapping", "qualified_name": "org.springframework.web.bind.annotation.DeleteMapping", "short_description": " Annotation for mapping HTTP  DELETE  requests onto specific handler\nmethods. "},
{"api_id": 3387, "api_type": 9, "full_declaration": "ExceptionHandler", "qualified_name": "org.springframework.web.bind.annotation.ExceptionHandler", "short_description": " Annotation for handling exceptions in specific handler classes and/or\nhandler methods. "},
{"api_id": 3388, "api_type": 9, "full_declaration": "GetMapping", "qualified_name": "org.springframework.web.bind.annotation.GetMapping", "short_description": " Annotation for mapping HTTP  GET  requests onto specific handler\nmethods. "},
{"api_id": 3389, "api_type": 9, "full_declaration": "InitBinder", "qualified_name": "org.springframework.web.bind.annotation.InitBinder", "short_description": " Annotation that identifies methods which initialize the WebDataBinder  which\nwill be used for populating command and form object arguments\nof annotated handler methods. "},
{"api_id": 3390, "api_type": 9, "full_declaration": "Mapping", "qualified_name": "org.springframework.web.bind.annotation.Mapping", "short_description": " Meta annotation that indicates a web mapping annotation. "},
{"api_id": 3391, "api_type": 9, "full_declaration": "MatrixVariable", "qualified_name": "org.springframework.web.bind.annotation.MatrixVariable", "short_description": " Annotation which indicates that a method parameter should be bound to a\nname-value pair within a path segment. "},
{"api_id": 3392, "api_type": 9, "full_declaration": "ModelAttribute", "qualified_name": "org.springframework.web.bind.annotation.ModelAttribute", "short_description": " Annotation that binds a method parameter or method return value\nto a named model attribute, exposed to a web view. "},
{"api_id": 3393, "api_type": 9, "full_declaration": "PatchMapping", "qualified_name": "org.springframework.web.bind.annotation.PatchMapping", "short_description": " Annotation for mapping HTTP  PATCH  requests onto specific handler\nmethods. "},
{"api_id": 3394, "api_type": 9, "full_declaration": "PathVariable", "qualified_name": "org.springframework.web.bind.annotation.PathVariable", "short_description": " Annotation which indicates that a method parameter should be bound to a URI template\nvariable. "},
{"api_id": 3395, "api_type": 9, "full_declaration": "PostMapping", "qualified_name": "org.springframework.web.bind.annotation.PostMapping", "short_description": " Annotation for mapping HTTP  POST  requests onto specific handler\nmethods. "},
{"api_id": 3396, "api_type": 9, "full_declaration": "PutMapping", "qualified_name": "org.springframework.web.bind.annotation.PutMapping", "short_description": " Annotation for mapping HTTP  PUT  requests onto specific handler\nmethods. "},
{"api_id": 3397, "api_type": 9, "full_declaration": "RequestAttribute", "qualified_name": "org.springframework.web.bind.annotation.RequestAttribute", "short_description": " Annotation to bind a method parameter to a request attribute. "},
{"api_id": 3398, "api_type": 9, "full_declaration": "RequestBody", "qualified_name": "org.springframework.web.bind.annotation.RequestBody", "short_description": " Annotation indicating a method parameter should be bound to the body of the web request. "},
{"api_id": 3399, "api_type": 9, "full_declaration": "RequestHeader", "qualified_name": "org.springframework.web.bind.annotation.RequestHeader", "short_description": " Annotation which indicates that a method parameter should be bound to a web request header. "},
{"api_id": 3400, "api_type": 9, "full_declaration": "RequestMapping", "qualified_name": "org.springframework.web.bind.annotation.RequestMapping", "short_description": " Annotation for mapping web requests onto methods in request-handling classes\nwith flexible method signatures. "},
{"api_id": 3401, "api_type": 9, "full_declaration": "RequestParam", "qualified_name": "org.springframework.web.bind.annotation.RequestParam", "short_description": " Annotation which indicates that a method parameter should be bound to a web\nrequest parameter. "},
{"api_id": 3402, "api_type": 9, "full_declaration": "RequestPart", "qualified_name": "org.springframework.web.bind.annotation.RequestPart", "short_description": " Annotation that can be used to associate the part of a \"multipart/form-data\" request\nwith a method argument. "},
{"api_id": 3403, "api_type": 9, "full_declaration": "ResponseBody", "qualified_name": "org.springframework.web.bind.annotation.ResponseBody", "short_description": " Annotation that indicates a method return value should be bound to the web\nresponse body. "},
{"api_id": 3404, "api_type": 9, "full_declaration": "ResponseStatus", "qualified_name": "org.springframework.web.bind.annotation.ResponseStatus", "short_description": " Marks a method or exception class with the status  ResponseStatus.code()  and ResponseStatus.reason()  that should be returned. "},
{"api_id": 3405, "api_type": 9, "full_declaration": "RestController", "qualified_name": "org.springframework.web.bind.annotation.RestController", "short_description": " A convenience annotation that is itself annotated with @Controller  and  @ResponseBody . "},
{"api_id": 3406, "api_type": 9, "full_declaration": "RestControllerAdvice", "qualified_name": "org.springframework.web.bind.annotation.RestControllerAdvice", "short_description": " A convenience annotation that is itself annotated with @ControllerAdvice and  @ResponseBody . "},
{"api_id": 3407, "api_type": 9, "full_declaration": "SessionAttribute", "qualified_name": "org.springframework.web.bind.annotation.SessionAttribute", "short_description": " Annotation to bind a method parameter to a session attribute. "},
{"api_id": 3408, "api_type": 9, "full_declaration": "SessionAttributes", "qualified_name": "org.springframework.web.bind.annotation.SessionAttributes", "short_description": " Annotation that indicates the session attributes that a specific handler uses. "},
{"api_id": 3409, "api_type": 3, "full_declaration": "SessionAttributeStore", "qualified_name": "org.springframework.web.bind.support.SessionAttributeStore", "short_description": " Strategy interface for storing model attributes in a backend session. "},
{"api_id": 3410, "api_type": 3, "full_declaration": "SessionStatus", "qualified_name": "org.springframework.web.bind.support.SessionStatus", "short_description": " Simple interface that can be injected into handler methods, allowing them to\nsignal that their session processing is complete. "},
{"api_id": 3411, "api_type": 3, "full_declaration": "WebArgumentResolver", "qualified_name": "org.springframework.web.bind.support.WebArgumentResolver", "short_description": " SPI for resolving custom arguments for a specific handler method parameter. "},
{"api_id": 3412, "api_type": 3, "full_declaration": "WebBindingInitializer", "qualified_name": "org.springframework.web.bind.support.WebBindingInitializer", "short_description": " Callback interface for initializing a  WebDataBinder  for performing\ndata binding in the context of a specific web request. "},
{"api_id": 3413, "api_type": 3, "full_declaration": "WebDataBinderFactory", "qualified_name": "org.springframework.web.bind.support.WebDataBinderFactory", "short_description": " A factory for creating a  WebDataBinder  instance for a named target object. "},
{"api_id": 3414, "api_type": 2, "full_declaration": "ConfigurableWebBindingInitializer", "qualified_name": "org.springframework.web.bind.support.ConfigurableWebBindingInitializer", "short_description": " Convenient  WebBindingInitializer  for declarative configuration\nin a Spring application context. "},
{"api_id": 3415, "api_type": 2, "full_declaration": "DefaultDataBinderFactory", "qualified_name": "org.springframework.web.bind.support.DefaultDataBinderFactory", "short_description": " Create a  WebRequestDataBinder  instance and initialize it with a WebBindingInitializer . "},
{"api_id": 3416, "api_type": 2, "full_declaration": "DefaultSessionAttributeStore", "qualified_name": "org.springframework.web.bind.support.DefaultSessionAttributeStore", "short_description": " Default implementation of the  SessionAttributeStore  interface,\nstoring the attributes in the WebRequest session (i.e. "},
{"api_id": 3417, "api_type": 2, "full_declaration": "SimpleSessionStatus", "qualified_name": "org.springframework.web.bind.support.SimpleSessionStatus", "short_description": " Simple implementation of the  SessionStatus  interface,\nkeeping the  complete  flag as an instance variable. "},
{"api_id": 3418, "api_type": 2, "full_declaration": "SpringWebConstraintValidatorFactory", "qualified_name": "org.springframework.web.bind.support.SpringWebConstraintValidatorFactory", "short_description": " JSR-303  ConstraintValidatorFactory  implementation that delegates to\nthe current Spring  WebApplicationContext  for creating autowired ConstraintValidator  instances. "},
{"api_id": 3419, "api_type": 2, "full_declaration": "WebExchangeDataBinder", "qualified_name": "org.springframework.web.bind.support.WebExchangeDataBinder", "short_description": " Specialized  DataBinder  to perform data\nbinding from URL query params or form data in the request data to Java objects. "},
{"api_id": 3420, "api_type": 2, "full_declaration": "WebRequestDataBinder", "qualified_name": "org.springframework.web.bind.support.WebRequestDataBinder", "short_description": " Special  DataBinder  to perform data binding\nfrom web request parameters to JavaBeans, including support for multipart files. "},
{"api_id": 3421, "api_type": 4, "full_declaration": "WebExchangeBindException", "qualified_name": "org.springframework.web.bind.support.WebExchangeBindException", "short_description": " A specialization of  ServerWebInputException  thrown when after data\nbinding and validation failure. "},
{"api_id": 3422, "api_type": 3, "full_declaration": "AsyncRequestCallback", "qualified_name": "org.springframework.web.client.AsyncRequestCallback", "short_description": "Deprecated as of Spring 5.0, in favor of ExchangeFilterFunction "},
{"api_id": 3423, "api_type": 3, "full_declaration": "AsyncRestOperations", "qualified_name": "org.springframework.web.client.AsyncRestOperations", "short_description": "Deprecated as of Spring 5.0, in favor of  WebClient "},
{"api_id": 3424, "api_type": 3, "full_declaration": "RequestCallback", "qualified_name": "org.springframework.web.client.RequestCallback", "short_description": " Callback interface for code that operates on a  ClientHttpRequest . "},
{"api_id": 3425, "api_type": 3, "full_declaration": "ResponseErrorHandler", "qualified_name": "org.springframework.web.client.ResponseErrorHandler", "short_description": " Strategy interface used by the  RestTemplate  to determine\nwhether a particular response has an error or not. "},
{"api_id": 3426, "api_type": 3, "full_declaration": "ResponseExtractor", "qualified_name": "org.springframework.web.client.ResponseExtractor", "short_description": " Generic callback interface used by  RestTemplate 's retrieval methods\nImplementations of this interface perform the actual work of extracting data\nfrom a  ClientHttpResponse , but don't need to worry about exception\nhandling or closing resources. "},
{"api_id": 3427, "api_type": 3, "full_declaration": "RestOperations", "qualified_name": "org.springframework.web.client.RestOperations", "short_description": " Interface specifying a basic set of RESTful operations. "},
{"api_id": 3428, "api_type": 2, "full_declaration": "AsyncRestTemplate", "qualified_name": "org.springframework.web.client.AsyncRestTemplate", "short_description": "Deprecated as of Spring 5.0, in favor of  WebClient "},
{"api_id": 3429, "api_type": 2, "full_declaration": "DefaultResponseErrorHandler", "qualified_name": "org.springframework.web.client.DefaultResponseErrorHandler", "short_description": " Spring's default implementation of the  ResponseErrorHandler  interface. "},
{"api_id": 3430, "api_type": 2, "full_declaration": "ExtractingResponseErrorHandler", "qualified_name": "org.springframework.web.client.ExtractingResponseErrorHandler", "short_description": " Implementation of  ResponseErrorHandler  that uses  HttpMessageConverters  to convert HTTP error responses to  RestClientExceptions . "},
{"api_id": 3431, "api_type": 2, "full_declaration": "HttpMessageConverterExtractor", "qualified_name": "org.springframework.web.client.HttpMessageConverterExtractor", "short_description": " Response extractor that uses the given  entity converters to convert the response into a type  T . "},
{"api_id": 3432, "api_type": 2, "full_declaration": "RestTemplate", "qualified_name": "org.springframework.web.client.RestTemplate", "short_description": " Synchronous client to perform HTTP requests, exposing a simple, template\nmethod API over underlying HTTP client libraries such as the JDK HttpURLConnection , Apache HttpComponents, and others. "},
{"api_id": 3433, "api_type": 4, "full_declaration": "HttpClientErrorException", "qualified_name": "org.springframework.web.client.HttpClientErrorException", "short_description": " Exception thrown when an HTTP 4xx is received. "},
{"api_id": 3434, "api_type": 4, "full_declaration": "HttpClientErrorException.BadRequest", "qualified_name": "org.springframework.web.client.HttpClientErrorException.BadRequest", "short_description": " HttpClientErrorException  for status HTTP 400 Bad Request. "},
{"api_id": 3435, "api_type": 4, "full_declaration": "HttpClientErrorException.Conflict", "qualified_name": "org.springframework.web.client.HttpClientErrorException.Conflict", "short_description": " HttpClientErrorException  for status HTTP 409 Conflict. "},
{"api_id": 3436, "api_type": 4, "full_declaration": "HttpClientErrorException.Forbidden", "qualified_name": "org.springframework.web.client.HttpClientErrorException.Forbidden", "short_description": " HttpClientErrorException  for status HTTP 403 Forbidden. "},
{"api_id": 3437, "api_type": 4, "full_declaration": "HttpClientErrorException.Gone", "qualified_name": "org.springframework.web.client.HttpClientErrorException.Gone", "short_description": " HttpClientErrorException  for status HTTP 410 Gone. "},
{"api_id": 3438, "api_type": 4, "full_declaration": "HttpClientErrorException.MethodNotAllowed", "qualified_name": "org.springframework.web.client.HttpClientErrorException.MethodNotAllowed", "short_description": " HttpClientErrorException  for status HTTP 405 Method Not Allowed. "},
{"api_id": 3439, "api_type": 4, "full_declaration": "HttpClientErrorException.NotAcceptable", "qualified_name": "org.springframework.web.client.HttpClientErrorException.NotAcceptable", "short_description": " HttpClientErrorException  for status HTTP 406 Not Acceptable. "},
{"api_id": 3440, "api_type": 4, "full_declaration": "HttpClientErrorException.NotFound", "qualified_name": "org.springframework.web.client.HttpClientErrorException.NotFound", "short_description": " HttpClientErrorException  for status HTTP 404 Not Found. "},
{"api_id": 3441, "api_type": 4, "full_declaration": "HttpClientErrorException.TooManyRequests", "qualified_name": "org.springframework.web.client.HttpClientErrorException.TooManyRequests", "short_description": " HttpClientErrorException  for status HTTP 429 Too Many Requests. "},
{"api_id": 3442, "api_type": 4, "full_declaration": "HttpClientErrorException.Unauthorized", "qualified_name": "org.springframework.web.client.HttpClientErrorException.Unauthorized", "short_description": " HttpClientErrorException  for status HTTP 401 Unauthorized. "},
{"api_id": 3443, "api_type": 4, "full_declaration": "HttpClientErrorException.UnprocessableEntity", "qualified_name": "org.springframework.web.client.HttpClientErrorException.UnprocessableEntity", "short_description": " HttpClientErrorException  for status HTTP 422 Unprocessable Entity. "},
{"api_id": 3444, "api_type": 4, "full_declaration": "HttpClientErrorException.UnsupportedMediaType", "qualified_name": "org.springframework.web.client.HttpClientErrorException.UnsupportedMediaType", "short_description": " HttpClientErrorException  for status HTTP 415 Unsupported Media Type. "},
{"api_id": 3445, "api_type": 4, "full_declaration": "HttpServerErrorException", "qualified_name": "org.springframework.web.client.HttpServerErrorException", "short_description": " Exception thrown when an HTTP 5xx is received. "},
{"api_id": 3446, "api_type": 4, "full_declaration": "HttpServerErrorException.BadGateway", "qualified_name": "org.springframework.web.client.HttpServerErrorException.BadGateway", "short_description": " HttpServerErrorException  for status HTTP HTTP 502 Bad Gateway. "},
{"api_id": 3447, "api_type": 4, "full_declaration": "HttpServerErrorException.GatewayTimeout", "qualified_name": "org.springframework.web.client.HttpServerErrorException.GatewayTimeout", "short_description": " HttpServerErrorException  for status HTTP 504 Gateway Timeout. "},
{"api_id": 3448, "api_type": 4, "full_declaration": "HttpServerErrorException.InternalServerError", "qualified_name": "org.springframework.web.client.HttpServerErrorException.InternalServerError", "short_description": " HttpServerErrorException  for status HTTP 500 Internal Server Error. "},
{"api_id": 3449, "api_type": 4, "full_declaration": "HttpServerErrorException.NotImplemented", "qualified_name": "org.springframework.web.client.HttpServerErrorException.NotImplemented", "short_description": " HttpServerErrorException  for status HTTP 501 Not Implemented. "},
{"api_id": 3450, "api_type": 4, "full_declaration": "HttpServerErrorException.ServiceUnavailable", "qualified_name": "org.springframework.web.client.HttpServerErrorException.ServiceUnavailable", "short_description": " HttpServerErrorException  for status HTTP 503 Service Unavailable. "},
{"api_id": 3451, "api_type": 4, "full_declaration": "HttpStatusCodeException", "qualified_name": "org.springframework.web.client.HttpStatusCodeException", "short_description": " Abstract base class for exceptions based on an  HttpStatus . "},
{"api_id": 3452, "api_type": 4, "full_declaration": "ResourceAccessException", "qualified_name": "org.springframework.web.client.ResourceAccessException", "short_description": " Exception thrown when an I/O error occurs. "},
{"api_id": 3453, "api_type": 4, "full_declaration": "RestClientException", "qualified_name": "org.springframework.web.client.RestClientException", "short_description": " Base class for exceptions thrown by  RestTemplate  in case a request\nfails because of a server error response, as determined via ResponseErrorHandler.hasError(ClientHttpResponse) , failure to decode\nthe response, or a low level I/O error. "},
{"api_id": 3454, "api_type": 4, "full_declaration": "RestClientResponseException", "qualified_name": "org.springframework.web.client.RestClientResponseException", "short_description": " Common base class for exceptions that contain actual HTTP response data. "},
{"api_id": 3455, "api_type": 4, "full_declaration": "UnknownContentTypeException", "qualified_name": "org.springframework.web.client.UnknownContentTypeException", "short_description": " Raised when no suitable HttpMessageConverter  could be\nfound to extract the response. "},
{"api_id": 3456, "api_type": 4, "full_declaration": "UnknownHttpStatusCodeException", "qualified_name": "org.springframework.web.client.UnknownHttpStatusCodeException", "short_description": " Exception thrown when an unknown (or custom) HTTP status code is received. "},
{"api_id": 3457, "api_type": 2, "full_declaration": "RestGatewaySupport", "qualified_name": "org.springframework.web.client.support.RestGatewaySupport", "short_description": " Convenient super class for application classes that need REST access. "},
{"api_id": 3458, "api_type": 3, "full_declaration": "ConfigurableWebApplicationContext", "qualified_name": "org.springframework.web.context.ConfigurableWebApplicationContext", "short_description": " Interface to be implemented by configurable web application contexts. "},
{"api_id": 3459, "api_type": 3, "full_declaration": "ConfigurableWebEnvironment", "qualified_name": "org.springframework.web.context.ConfigurableWebEnvironment", "short_description": " Specialization of  ConfigurableEnvironment  allowing initialization of\nservlet-related  PropertySource  objects at the\nearliest moment that the  ServletContext  and (optionally)  ServletConfig become available. "},
{"api_id": 3460, "api_type": 3, "full_declaration": "ServletConfigAware", "qualified_name": "org.springframework.web.context.ServletConfigAware", "short_description": " Interface to be implemented by any object that wishes to be notified of the ServletConfig  (typically determined by the  WebApplicationContext )\nthat it runs in. "},
{"api_id": 3461, "api_type": 3, "full_declaration": "ServletContextAware", "qualified_name": "org.springframework.web.context.ServletContextAware", "short_description": " Interface to be implemented by any object that wishes to be notified of the ServletContext  (typically determined by the  WebApplicationContext )\nthat it runs in. "},
{"api_id": 3462, "api_type": 3, "full_declaration": "WebApplicationContext", "qualified_name": "org.springframework.web.context.WebApplicationContext", "short_description": " Interface to provide configuration for a web application. "},
{"api_id": 3463, "api_type": 2, "full_declaration": "AbstractContextLoaderInitializer", "qualified_name": "org.springframework.web.context.AbstractContextLoaderInitializer", "short_description": " Convenient base class for  WebApplicationInitializer  implementations\nthat register a  ContextLoaderListener  in the servlet context. "},
{"api_id": 3464, "api_type": 2, "full_declaration": "ContextCleanupListener", "qualified_name": "org.springframework.web.context.ContextCleanupListener", "short_description": " Web application listener that cleans up remaining disposable attributes\nin the ServletContext, i.e. "},
{"api_id": 3465, "api_type": 2, "full_declaration": "ContextLoader", "qualified_name": "org.springframework.web.context.ContextLoader", "short_description": " Performs the actual initialization work for the root application context. "},
{"api_id": 3466, "api_type": 2, "full_declaration": "ContextLoaderListener", "qualified_name": "org.springframework.web.context.ContextLoaderListener", "short_description": " Bootstrap listener to start up and shut down Spring's root  WebApplicationContext . "},
{"api_id": 3467, "api_type": 9, "full_declaration": "ApplicationScope", "qualified_name": "org.springframework.web.context.annotation.ApplicationScope", "short_description": " @ApplicationScope  is a specialization of  @Scope  for a\ncomponent whose lifecycle is bound to the current web application. "},
{"api_id": 3468, "api_type": 9, "full_declaration": "RequestScope", "qualified_name": "org.springframework.web.context.annotation.RequestScope", "short_description": " @RequestScope  is a specialization of  @Scope  for a\ncomponent whose lifecycle is bound to the current web request. "},
{"api_id": 3469, "api_type": 9, "full_declaration": "SessionScope", "qualified_name": "org.springframework.web.context.annotation.SessionScope", "short_description": " @SessionScope  is a specialization of  @Scope  for a\ncomponent whose lifecycle is bound to the current web session. "},
{"api_id": 3470, "api_type": 3, "full_declaration": "AsyncWebRequestInterceptor", "qualified_name": "org.springframework.web.context.request.AsyncWebRequestInterceptor", "short_description": " Extends  WebRequestInterceptor  with a callback method invoked during\nasynchronous request handling. "},
{"api_id": 3471, "api_type": 3, "full_declaration": "NativeWebRequest", "qualified_name": "org.springframework.web.context.request.NativeWebRequest", "short_description": " Extension of the  WebRequest  interface, exposing the\nnative request and response objects in a generic fashion. "},
{"api_id": 3472, "api_type": 3, "full_declaration": "RequestAttributes", "qualified_name": "org.springframework.web.context.request.RequestAttributes", "short_description": " Abstraction for accessing attribute objects associated with a request. "},
{"api_id": 3473, "api_type": 3, "full_declaration": "WebRequest", "qualified_name": "org.springframework.web.context.request.WebRequest", "short_description": " Generic interface for a web request. "},
{"api_id": 3474, "api_type": 3, "full_declaration": "WebRequestInterceptor", "qualified_name": "org.springframework.web.context.request.WebRequestInterceptor", "short_description": " Interface for general web request interception. "},
{"api_id": 3475, "api_type": 2, "full_declaration": "AbstractRequestAttributes", "qualified_name": "org.springframework.web.context.request.AbstractRequestAttributes", "short_description": " Abstract support class for RequestAttributes implementations,\noffering a request completion mechanism for request-specific destruction\ncallbacks and for updating accessed session attributes. "},
{"api_id": 3476, "api_type": 2, "full_declaration": "AbstractRequestAttributesScope", "qualified_name": "org.springframework.web.context.request.AbstractRequestAttributesScope", "short_description": " Abstract  Scope  implementation that reads from a particular scope\nin the current thread-bound  RequestAttributes  object. "},
{"api_id": 3477, "api_type": 2, "full_declaration": "DestructionCallbackBindingListener", "qualified_name": "org.springframework.web.context.request.DestructionCallbackBindingListener", "short_description": " Adapter that implements the Servlet HttpSessionBindingListener interface,\nwrapping a session destruction callback. "},
{"api_id": 3478, "api_type": 2, "full_declaration": "FacesRequestAttributes", "qualified_name": "org.springframework.web.context.request.FacesRequestAttributes", "short_description": " RequestAttributes  adapter for a JSF  FacesContext . "},
{"api_id": 3479, "api_type": 2, "full_declaration": "FacesWebRequest", "qualified_name": "org.springframework.web.context.request.FacesWebRequest", "short_description": " WebRequest  adapter for a JSF  FacesContext . "},
{"api_id": 3480, "api_type": 2, "full_declaration": "RequestContextHolder", "qualified_name": "org.springframework.web.context.request.RequestContextHolder", "short_description": " Holder class to expose the web request in the form of a thread-bound RequestAttributes  object. "},
{"api_id": 3481, "api_type": 2, "full_declaration": "RequestContextListener", "qualified_name": "org.springframework.web.context.request.RequestContextListener", "short_description": " Servlet listener that exposes the request to the current thread,\nthrough both  LocaleContextHolder  and RequestContextHolder . "},
{"api_id": 3482, "api_type": 2, "full_declaration": "RequestScope", "qualified_name": "org.springframework.web.context.request.RequestScope", "short_description": " Request-backed  Scope implementation. "},
{"api_id": 3483, "api_type": 2, "full_declaration": "ServletRequestAttributes", "qualified_name": "org.springframework.web.context.request.ServletRequestAttributes", "short_description": " Servlet-based implementation of the  RequestAttributes  interface. "},
{"api_id": 3484, "api_type": 2, "full_declaration": "ServletWebRequest", "qualified_name": "org.springframework.web.context.request.ServletWebRequest", "short_description": " WebRequest  adapter for an  HttpServletRequest . "},
{"api_id": 3485, "api_type": 2, "full_declaration": "SessionScope", "qualified_name": "org.springframework.web.context.request.SessionScope", "short_description": " Session-backed  Scope implementation. "},
{"api_id": 3486, "api_type": 3, "full_declaration": "AsyncWebRequest", "qualified_name": "org.springframework.web.context.request.async.AsyncWebRequest", "short_description": " Extends  NativeWebRequest  with methods for asynchronous request processing. "},
{"api_id": 3487, "api_type": 3, "full_declaration": "CallableProcessingInterceptor", "qualified_name": "org.springframework.web.context.request.async.CallableProcessingInterceptor", "short_description": " Intercepts concurrent request handling, where the concurrent result is\nobtained by executing a  Callable  on behalf of the application with\nan  AsyncTaskExecutor . "},
{"api_id": 3488, "api_type": 3, "full_declaration": "DeferredResult.DeferredResultHandler", "qualified_name": "org.springframework.web.context.request.async.DeferredResult.DeferredResultHandler", "short_description": " Handles a DeferredResult value when set. "},
{"api_id": 3489, "api_type": 3, "full_declaration": "DeferredResultProcessingInterceptor", "qualified_name": "org.springframework.web.context.request.async.DeferredResultProcessingInterceptor", "short_description": " Intercepts concurrent request handling, where the concurrent result is\nobtained by waiting for a  DeferredResult  to be set from a thread\nchosen by the application (e.g. "},
{"api_id": 3490, "api_type": 2, "full_declaration": "CallableProcessingInterceptorAdapter", "qualified_name": "org.springframework.web.context.request.async.CallableProcessingInterceptorAdapter", "short_description": "Deprecated as of 5.0 where CallableProcessingInterceptor has default methods "},
{"api_id": 3491, "api_type": 2, "full_declaration": "DeferredResult", "qualified_name": "org.springframework.web.context.request.async.DeferredResult", "short_description": " DeferredResult  provides an alternative to using a  Callable  for\nasynchronous request processing. "},
{"api_id": 3492, "api_type": 2, "full_declaration": "DeferredResultProcessingInterceptorAdapter", "qualified_name": "org.springframework.web.context.request.async.DeferredResultProcessingInterceptorAdapter", "short_description": "Deprecated as of 5.0 where DeferredResultProcessingInterceptor has default methods "},
{"api_id": 3493, "api_type": 2, "full_declaration": "StandardServletAsyncWebRequest", "qualified_name": "org.springframework.web.context.request.async.StandardServletAsyncWebRequest", "short_description": " A Servlet 3.0 implementation of  AsyncWebRequest . "},
{"api_id": 3494, "api_type": 2, "full_declaration": "TimeoutCallableProcessingInterceptor", "qualified_name": "org.springframework.web.context.request.async.TimeoutCallableProcessingInterceptor", "short_description": " Sends a 503 (SERVICE_UNAVAILABLE) in case of a timeout if the response is not\nalready committed. "},
{"api_id": 3495, "api_type": 2, "full_declaration": "TimeoutDeferredResultProcessingInterceptor", "qualified_name": "org.springframework.web.context.request.async.TimeoutDeferredResultProcessingInterceptor", "short_description": " Sends a 503 (SERVICE_UNAVAILABLE) in case of a timeout if the response is not\nalready committed. "},
{"api_id": 3496, "api_type": 2, "full_declaration": "WebAsyncManager", "qualified_name": "org.springframework.web.context.request.async.WebAsyncManager", "short_description": " The central class for managing asynchronous request processing, mainly intended\nas an SPI and not typically used directly by application classes. "},
{"api_id": 3497, "api_type": 2, "full_declaration": "WebAsyncTask", "qualified_name": "org.springframework.web.context.request.async.WebAsyncTask", "short_description": " Holder for a  Callable , a timeout value, and a task executor. "},
{"api_id": 3498, "api_type": 2, "full_declaration": "WebAsyncUtils", "qualified_name": "org.springframework.web.context.request.async.WebAsyncUtils", "short_description": " Utility methods related to processing asynchronous web requests. "},
{"api_id": 3499, "api_type": 4, "full_declaration": "AsyncRequestTimeoutException", "qualified_name": "org.springframework.web.context.request.async.AsyncRequestTimeoutException", "short_description": " Exception to be thrown when an async request times out. "},
{"api_id": 3500, "api_type": 2, "full_declaration": "AbstractRefreshableWebApplicationContext", "qualified_name": "org.springframework.web.context.support.AbstractRefreshableWebApplicationContext", "short_description": " AbstractRefreshableApplicationContext subclass which implements the ConfigurableWebApplicationContext interface for web environments. "},
{"api_id": 3501, "api_type": 2, "full_declaration": "AnnotationConfigWebApplicationContext", "qualified_name": "org.springframework.web.context.support.AnnotationConfigWebApplicationContext", "short_description": " WebApplicationContext implementation which accepts  component classes  as input \u2014 in particular @Configuration -annotated\nclasses, but also plain  @Component classes and JSR-330 compliant classes using  javax.inject  annotations. "},
{"api_id": 3502, "api_type": 2, "full_declaration": "ContextExposingHttpServletRequest", "qualified_name": "org.springframework.web.context.support.ContextExposingHttpServletRequest", "short_description": " HttpServletRequest decorator that makes all Spring beans in a\ngiven WebApplicationContext accessible as request attributes,\nthrough lazy checking once an attribute gets accessed. "},
{"api_id": 3503, "api_type": 2, "full_declaration": "GenericWebApplicationContext", "qualified_name": "org.springframework.web.context.support.GenericWebApplicationContext", "short_description": " Subclass of  GenericApplicationContext , suitable for web environments. "},
{"api_id": 3504, "api_type": 2, "full_declaration": "GroovyWebApplicationContext", "qualified_name": "org.springframework.web.context.support.GroovyWebApplicationContext", "short_description": " WebApplicationContext  implementation which takes\nits configuration from Groovy bean definition scripts and/or XML files, as understood by\na  GroovyBeanDefinitionReader . "},
{"api_id": 3505, "api_type": 2, "full_declaration": "HttpRequestHandlerServlet", "qualified_name": "org.springframework.web.context.support.HttpRequestHandlerServlet", "short_description": " Simple HttpServlet that delegates to an  HttpRequestHandler  bean defined\nin Spring's root web application context. "},
{"api_id": 3506, "api_type": 2, "full_declaration": "LiveBeansViewServlet", "qualified_name": "org.springframework.web.context.support.LiveBeansViewServlet", "short_description": "Deprecated as of 5.3, in favor of using Spring Boot actuators for such needs "},
{"api_id": 3507, "api_type": 2, "full_declaration": "RequestHandledEvent", "qualified_name": "org.springframework.web.context.support.RequestHandledEvent", "short_description": " Event raised when a request is handled within an ApplicationContext. "},
{"api_id": 3508, "api_type": 2, "full_declaration": "ServletConfigPropertySource", "qualified_name": "org.springframework.web.context.support.ServletConfigPropertySource", "short_description": " PropertySource  that reads init parameters from a  ServletConfig  object. "},
{"api_id": 3509, "api_type": 2, "full_declaration": "ServletContextAttributeExporter", "qualified_name": "org.springframework.web.context.support.ServletContextAttributeExporter", "short_description": " Exporter that takes Spring-defined objects and exposes them as\nServletContext attributes. "},
{"api_id": 3510, "api_type": 2, "full_declaration": "ServletContextAttributeFactoryBean", "qualified_name": "org.springframework.web.context.support.ServletContextAttributeFactoryBean", "short_description": " FactoryBean  that fetches a specific, existing ServletContext attribute. "},
{"api_id": 3511, "api_type": 2, "full_declaration": "ServletContextAwareProcessor", "qualified_name": "org.springframework.web.context.support.ServletContextAwareProcessor", "short_description": " BeanPostProcessor implementation that passes the ServletContext to beans that implement\nthe  ServletContextAware  interface. "},
{"api_id": 3512, "api_type": 2, "full_declaration": "ServletContextLiveBeansView", "qualified_name": "org.springframework.web.context.support.ServletContextLiveBeansView", "short_description": "Deprecated as of 5.3, in favor of using Spring Boot actuators for such needs "},
{"api_id": 3513, "api_type": 2, "full_declaration": "ServletContextParameterFactoryBean", "qualified_name": "org.springframework.web.context.support.ServletContextParameterFactoryBean", "short_description": " FactoryBean  that retrieves a specific ServletContext init parameter\n(that is, a \"context-param\" defined in  web.xml ). "},
{"api_id": 3514, "api_type": 2, "full_declaration": "ServletContextPropertySource", "qualified_name": "org.springframework.web.context.support.ServletContextPropertySource", "short_description": " PropertySource  that reads init parameters from a  ServletContext  object. "},
{"api_id": 3515, "api_type": 2, "full_declaration": "ServletContextResource", "qualified_name": "org.springframework.web.context.support.ServletContextResource", "short_description": " Resource  implementation for ServletContext  resources, interpreting\nrelative paths within the web application root directory. "},
{"api_id": 3516, "api_type": 2, "full_declaration": "ServletContextResourceLoader", "qualified_name": "org.springframework.web.context.support.ServletContextResourceLoader", "short_description": " ResourceLoader implementation that resolves paths as ServletContext\nresources, for use outside a WebApplicationContext (for example,\nin an HttpServletBean or GenericFilterBean subclass). "},
{"api_id": 3517, "api_type": 2, "full_declaration": "ServletContextResourcePatternResolver", "qualified_name": "org.springframework.web.context.support.ServletContextResourcePatternResolver", "short_description": " ServletContext-aware subclass of  PathMatchingResourcePatternResolver ,\nable to find matching resources below the web application root directory\nvia  ServletContext.getResourcePaths(java.lang.String) . "},
{"api_id": 3518, "api_type": 2, "full_declaration": "ServletContextScope", "qualified_name": "org.springframework.web.context.support.ServletContextScope", "short_description": " Scope  wrapper for a ServletContext, i.e. "},
{"api_id": 3519, "api_type": 2, "full_declaration": "ServletRequestHandledEvent", "qualified_name": "org.springframework.web.context.support.ServletRequestHandledEvent", "short_description": " Servlet-specific subclass of RequestHandledEvent,\nadding servlet-specific context information. "},
{"api_id": 3520, "api_type": 2, "full_declaration": "SpringBeanAutowiringSupport", "qualified_name": "org.springframework.web.context.support.SpringBeanAutowiringSupport", "short_description": " Convenient base class for self-autowiring classes that gets constructed\nwithin a Spring-based web application. "},
{"api_id": 3521, "api_type": 2, "full_declaration": "StandardServletEnvironment", "qualified_name": "org.springframework.web.context.support.StandardServletEnvironment", "short_description": " Environment  implementation to be used by  Servlet -based web\napplications. "},
{"api_id": 3522, "api_type": 2, "full_declaration": "StaticWebApplicationContext", "qualified_name": "org.springframework.web.context.support.StaticWebApplicationContext", "short_description": " Static  WebApplicationContext implementation for testing. "},
{"api_id": 3523, "api_type": 2, "full_declaration": "WebApplicationContextUtils", "qualified_name": "org.springframework.web.context.support.WebApplicationContextUtils", "short_description": " Convenience methods for retrieving the root  WebApplicationContext  for\na given  ServletContext . "},
{"api_id": 3524, "api_type": 2, "full_declaration": "WebApplicationObjectSupport", "qualified_name": "org.springframework.web.context.support.WebApplicationObjectSupport", "short_description": " Convenient superclass for application objects running in a  WebApplicationContext . "},
{"api_id": 3525, "api_type": 2, "full_declaration": "XmlWebApplicationContext", "qualified_name": "org.springframework.web.context.support.XmlWebApplicationContext", "short_description": " WebApplicationContext  implementation\nwhich takes its configuration from XML documents, understood by an XmlBeanDefinitionReader . "},
{"api_id": 3526, "api_type": 3, "full_declaration": "CorsConfigurationSource", "qualified_name": "org.springframework.web.cors.CorsConfigurationSource", "short_description": " Interface to be implemented by classes (usually HTTP request handlers) that\nprovides a  CorsConfiguration  instance based on the provided request. "},
{"api_id": 3527, "api_type": 3, "full_declaration": "CorsProcessor", "qualified_name": "org.springframework.web.cors.CorsProcessor", "short_description": " A strategy that takes a request and a  CorsConfiguration  and updates\nthe response. "},
{"api_id": 3528, "api_type": 2, "full_declaration": "CorsConfiguration", "qualified_name": "org.springframework.web.cors.CorsConfiguration", "short_description": " A container for CORS configuration along with methods to check against the\nactual origin, HTTP methods, and headers of a given request. "},
{"api_id": 3529, "api_type": 2, "full_declaration": "CorsUtils", "qualified_name": "org.springframework.web.cors.CorsUtils", "short_description": " Utility class for CORS request handling based on the CORS W3C recommendation . "},
{"api_id": 3530, "api_type": 2, "full_declaration": "DefaultCorsProcessor", "qualified_name": "org.springframework.web.cors.DefaultCorsProcessor", "short_description": " The default implementation of  CorsProcessor , as defined by the CORS W3C recommendation . "},
{"api_id": 3531, "api_type": 2, "full_declaration": "UrlBasedCorsConfigurationSource", "qualified_name": "org.springframework.web.cors.UrlBasedCorsConfigurationSource", "short_description": " CorsConfigurationSource  that uses URL path patterns to select the CorsConfiguration  for a request. "},
{"api_id": 3532, "api_type": 3, "full_declaration": "CorsConfigurationSource", "qualified_name": "org.springframework.web.cors.reactive.CorsConfigurationSource", "short_description": " Interface to be implemented by classes (usually HTTP request handlers) that\nprovides a  CorsConfiguration  instance based on the provided reactive request. "},
{"api_id": 3533, "api_type": 3, "full_declaration": "CorsProcessor", "qualified_name": "org.springframework.web.cors.reactive.CorsProcessor", "short_description": " A strategy to apply CORS validation checks and updates to a ServerWebExchange , either rejecting through the response or adding\nCORS related headers, based on a pre-selected  CorsConfiguration . "},
{"api_id": 3534, "api_type": 2, "full_declaration": "CorsUtils", "qualified_name": "org.springframework.web.cors.reactive.CorsUtils", "short_description": " Utility class for CORS reactive request handling based on the CORS W3C recommendation . "},
{"api_id": 3535, "api_type": 2, "full_declaration": "CorsWebFilter", "qualified_name": "org.springframework.web.cors.reactive.CorsWebFilter", "short_description": " WebFilter  that handles CORS preflight requests and intercepts\nCORS simple and actual requests thanks to a  CorsProcessor  implementation\n( DefaultCorsProcessor  by default) in order to add the relevant CORS\nresponse headers (like  Access-Control-Allow-Origin ) using the provided CorsConfigurationSource  (for example an  UrlBasedCorsConfigurationSource instance. "},
{"api_id": 3536, "api_type": 2, "full_declaration": "DefaultCorsProcessor", "qualified_name": "org.springframework.web.cors.reactive.DefaultCorsProcessor", "short_description": " The default implementation of  CorsProcessor ,\nas defined by the  CORS W3C recommendation . "},
{"api_id": 3537, "api_type": 2, "full_declaration": "UrlBasedCorsConfigurationSource", "qualified_name": "org.springframework.web.cors.reactive.UrlBasedCorsConfigurationSource", "short_description": " CorsConfigurationSource  that uses URL patterns to select the CorsConfiguration  for a request. "},
{"api_id": 3538, "api_type": 2, "full_declaration": "AbstractRequestLoggingFilter", "qualified_name": "org.springframework.web.filter.AbstractRequestLoggingFilter", "short_description": " Base class for  Filter s that perform logging operations before and after a request\nis processed. "},
{"api_id": 3539, "api_type": 2, "full_declaration": "CharacterEncodingFilter", "qualified_name": "org.springframework.web.filter.CharacterEncodingFilter", "short_description": " Servlet Filter that allows one to specify a character encoding for requests. "},
{"api_id": 3540, "api_type": 2, "full_declaration": "CommonsRequestLoggingFilter", "qualified_name": "org.springframework.web.filter.CommonsRequestLoggingFilter", "short_description": " Simple request logging filter that writes the request URI\n(and optionally the query string) to the Commons Log. "},
{"api_id": 3541, "api_type": 2, "full_declaration": "CompositeFilter", "qualified_name": "org.springframework.web.filter.CompositeFilter", "short_description": " A generic composite servlet  Filter  that just delegates its behavior\nto a chain (list) of user-supplied filters, achieving the functionality of a FilterChain , but conveniently using only  Filter  instances. "},
{"api_id": 3542, "api_type": 2, "full_declaration": "CorsFilter", "qualified_name": "org.springframework.web.filter.CorsFilter", "short_description": " Filter  to handle CORS pre-flight requests and intercept\nCORS simple and actual requests with a  CorsProcessor , and to update\nthe response, e.g. "},
{"api_id": 3543, "api_type": 2, "full_declaration": "DelegatingFilterProxy", "qualified_name": "org.springframework.web.filter.DelegatingFilterProxy", "short_description": " Proxy for a standard Servlet Filter, delegating to a Spring-managed bean that\nimplements the Filter interface. "},
{"api_id": 3544, "api_type": 2, "full_declaration": "FormContentFilter", "qualified_name": "org.springframework.web.filter.FormContentFilter", "short_description": " Filter  that parses form data for HTTP PUT, PATCH, and DELETE requests\nand exposes it as Servlet request parameters. "},
{"api_id": 3545, "api_type": 2, "full_declaration": "ForwardedHeaderFilter", "qualified_name": "org.springframework.web.filter.ForwardedHeaderFilter", "short_description": " Extract values from \"Forwarded\" and \"X-Forwarded-*\" headers, wrap the request\nand response, and make they reflect the client-originated protocol and\naddress in the following methods: getServerName()  getServerPort()  getScheme()  isSecure()  sendRedirect(String) . "},
{"api_id": 3546, "api_type": 2, "full_declaration": "GenericFilterBean", "qualified_name": "org.springframework.web.filter.GenericFilterBean", "short_description": " Simple base implementation of  Filter  which treats\nits config parameters ( init-param  entries within the filter  tag in  web.xml ) as bean properties. "},
{"api_id": 3547, "api_type": 2, "full_declaration": "HiddenHttpMethodFilter", "qualified_name": "org.springframework.web.filter.HiddenHttpMethodFilter", "short_description": " Filter  that converts posted method parameters into HTTP methods,\nretrievable via  HttpServletRequest.getMethod() . "},
{"api_id": 3548, "api_type": 2, "full_declaration": "HttpPutFormContentFilter", "qualified_name": "org.springframework.web.filter.HttpPutFormContentFilter", "short_description": "Deprecated as of 5.1 in favor of  FormContentFilter  which is the same\nbut also handles DELETE. "},
{"api_id": 3549, "api_type": 2, "full_declaration": "OncePerRequestFilter", "qualified_name": "org.springframework.web.filter.OncePerRequestFilter", "short_description": " Filter base class that aims to guarantee a single execution per request\ndispatch, on any servlet container. "},
{"api_id": 3550, "api_type": 2, "full_declaration": "RelativeRedirectFilter", "qualified_name": "org.springframework.web.filter.RelativeRedirectFilter", "short_description": " Overrides  HttpServletResponse.sendRedirect(String)  and handles it by\nsetting the HTTP status and \"Location\" headers, which keeps the Servlet\ncontainer from re-writing relative redirect URLs into absolute ones. "},
{"api_id": 3551, "api_type": 2, "full_declaration": "RequestContextFilter", "qualified_name": "org.springframework.web.filter.RequestContextFilter", "short_description": " Servlet Filter that exposes the request to the current thread,\nthrough both  LocaleContextHolder  and RequestContextHolder . "},
{"api_id": 3552, "api_type": 2, "full_declaration": "ServletContextRequestLoggingFilter", "qualified_name": "org.springframework.web.filter.ServletContextRequestLoggingFilter", "short_description": " Simple request logging filter that writes the request URI\n(and optionally the query string) to the ServletContext log. "},
{"api_id": 3553, "api_type": 2, "full_declaration": "ServletRequestPathFilter", "qualified_name": "org.springframework.web.filter.ServletRequestPathFilter", "short_description": " A  Filter  to  parse and cache a  RequestPath  for further access  throughout the\nfilter chain. "},
{"api_id": 3554, "api_type": 2, "full_declaration": "ShallowEtagHeaderFilter", "qualified_name": "org.springframework.web.filter.ShallowEtagHeaderFilter", "short_description": " Filter  that generates an  ETag  value based on the\ncontent on the response. "},
{"api_id": 3555, "api_type": 2, "full_declaration": "ForwardedHeaderFilter", "qualified_name": "org.springframework.web.filter.reactive.ForwardedHeaderFilter", "short_description": "Deprecated as of 5.1 this filter is deprecated in favor of using ForwardedHeaderTransformer  which can be declared as a bean with the\nname \"forwardedHeaderTransformer\" or registered explicitly in WebHttpHandlerBuilder . "},
{"api_id": 3556, "api_type": 2, "full_declaration": "HiddenHttpMethodFilter", "qualified_name": "org.springframework.web.filter.reactive.HiddenHttpMethodFilter", "short_description": " Reactive  WebFilter  that converts posted method parameters into HTTP methods,\nretrievable via  HttpRequest.getMethod() . "},
{"api_id": 3557, "api_type": 2, "full_declaration": "ServerWebExchangeContextFilter", "qualified_name": "org.springframework.web.filter.reactive.ServerWebExchangeContextFilter", "short_description": " Inserts an attribute in the Reactor  Context  that makes the current ServerWebExchange  available under the attribute name ServerWebExchangeContextFilter.EXCHANGE_CONTEXT_ATTRIBUTE . "},
{"api_id": 3558, "api_type": 2, "full_declaration": "DecoratingNavigationHandler", "qualified_name": "org.springframework.web.jsf.DecoratingNavigationHandler", "short_description": " Base class for JSF NavigationHandler implementations that want\nto be capable of decorating an original NavigationHandler. "},
{"api_id": 3559, "api_type": 2, "full_declaration": "DelegatingNavigationHandlerProxy", "qualified_name": "org.springframework.web.jsf.DelegatingNavigationHandlerProxy", "short_description": " JSF NavigationHandler implementation that delegates to a NavigationHandler\nbean obtained from the Spring root WebApplicationContext. "},
{"api_id": 3560, "api_type": 2, "full_declaration": "DelegatingPhaseListenerMulticaster", "qualified_name": "org.springframework.web.jsf.DelegatingPhaseListenerMulticaster", "short_description": " JSF PhaseListener implementation that delegates to one or more Spring-managed\nPhaseListener beans coming from the Spring root WebApplicationContext. "},
{"api_id": 3561, "api_type": 2, "full_declaration": "FacesContextUtils", "qualified_name": "org.springframework.web.jsf.FacesContextUtils", "short_description": " Convenience methods to retrieve Spring's root  WebApplicationContext for a given JSF  FacesContext . "},
{"api_id": 3562, "api_type": 2, "full_declaration": "SpringBeanFacesELResolver", "qualified_name": "org.springframework.web.jsf.el.SpringBeanFacesELResolver", "short_description": " JSF  ELResolver  that delegates to the Spring root  WebApplicationContext ,\nresolving name references to Spring-defined beans. "},
{"api_id": 3563, "api_type": 2, "full_declaration": "WebApplicationContextFacesELResolver", "qualified_name": "org.springframework.web.jsf.el.WebApplicationContextFacesELResolver", "short_description": " Special JSF  ELResolver  that exposes the Spring  WebApplicationContext instance under a variable named \"webApplicationContext\". "},
{"api_id": 3564, "api_type": 2, "full_declaration": "ControllerAdviceBean", "qualified_name": "org.springframework.web.method.ControllerAdviceBean", "short_description": " Encapsulates information about an  @ControllerAdvice Spring-managed bean without necessarily requiring it to be instantiated. "},
{"api_id": 3565, "api_type": 2, "full_declaration": "HandlerMethod", "qualified_name": "org.springframework.web.method.HandlerMethod", "short_description": " Encapsulates information about a handler method consisting of a method  and a  bean . "},
{"api_id": 3566, "api_type": 2, "full_declaration": "HandlerTypePredicate", "qualified_name": "org.springframework.web.method.HandlerTypePredicate", "short_description": " A  Predicate  to match request handling component types if any  of the following selectors match:\nBase packages -- for selecting handlers by their package. "},
{"api_id": 3567, "api_type": 2, "full_declaration": "HandlerTypePredicate.Builder", "qualified_name": "org.springframework.web.method.HandlerTypePredicate.Builder", "short_description": " A  HandlerTypePredicate  builder. "},
{"api_id": 3568, "api_type": 2, "full_declaration": "AbstractCookieValueMethodArgumentResolver", "qualified_name": "org.springframework.web.method.annotation.AbstractCookieValueMethodArgumentResolver", "short_description": " A base abstract class to resolve method arguments annotated with @CookieValue . "},
{"api_id": 3569, "api_type": 2, "full_declaration": "AbstractNamedValueMethodArgumentResolver", "qualified_name": "org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver", "short_description": " Abstract base class for resolving method arguments from a named value. "},
{"api_id": 3570, "api_type": 2, "full_declaration": "AbstractNamedValueMethodArgumentResolver.NamedValueInfo", "qualified_name": "org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.NamedValueInfo", "short_description": " Represents the information about a named value, including name, whether it's required and a default value. "},
{"api_id": 3571, "api_type": 2, "full_declaration": "AbstractWebArgumentResolverAdapter", "qualified_name": "org.springframework.web.method.annotation.AbstractWebArgumentResolverAdapter", "short_description": " An abstract base class adapting a  WebArgumentResolver  to the HandlerMethodArgumentResolver  contract. "},
{"api_id": 3572, "api_type": 2, "full_declaration": "ErrorsMethodArgumentResolver", "qualified_name": "org.springframework.web.method.annotation.ErrorsMethodArgumentResolver", "short_description": " Resolves  Errors  method arguments. "},
{"api_id": 3573, "api_type": 2, "full_declaration": "ExceptionHandlerMethodResolver", "qualified_name": "org.springframework.web.method.annotation.ExceptionHandlerMethodResolver", "short_description": " Discovers  @ExceptionHandler  methods in a given class,\nincluding all of its superclasses, and helps to resolve a given  Exception to the exception types supported by a given  Method . "},
{"api_id": 3574, "api_type": 2, "full_declaration": "ExpressionValueMethodArgumentResolver", "qualified_name": "org.springframework.web.method.annotation.ExpressionValueMethodArgumentResolver", "short_description": " Resolves method arguments annotated with  @Value . "},
{"api_id": 3575, "api_type": 2, "full_declaration": "InitBinderDataBinderFactory", "qualified_name": "org.springframework.web.method.annotation.InitBinderDataBinderFactory", "short_description": " Adds initialization to a WebDataBinder via  @InitBinder  methods. "},
{"api_id": 3576, "api_type": 2, "full_declaration": "MapMethodProcessor", "qualified_name": "org.springframework.web.method.annotation.MapMethodProcessor", "short_description": " Resolves  Map  method arguments and handles  Map  return values. "},
{"api_id": 3577, "api_type": 2, "full_declaration": "ModelAttributeMethodProcessor", "qualified_name": "org.springframework.web.method.annotation.ModelAttributeMethodProcessor", "short_description": " Resolve  @ModelAttribute  annotated method arguments and handle\nreturn values from  @ModelAttribute  annotated methods. "},
{"api_id": 3578, "api_type": 2, "full_declaration": "ModelFactory", "qualified_name": "org.springframework.web.method.annotation.ModelFactory", "short_description": " Assist with initialization of the  Model  before controller method\ninvocation and with updates to it after the invocation. "},
{"api_id": 3579, "api_type": 2, "full_declaration": "ModelMethodProcessor", "qualified_name": "org.springframework.web.method.annotation.ModelMethodProcessor", "short_description": " Resolves  Model  arguments and handles  Model  return values. "},
{"api_id": 3580, "api_type": 2, "full_declaration": "RequestHeaderMapMethodArgumentResolver", "qualified_name": "org.springframework.web.method.annotation.RequestHeaderMapMethodArgumentResolver", "short_description": " Resolves  Map  method arguments annotated with  @RequestHeader . "},
{"api_id": 3581, "api_type": 2, "full_declaration": "RequestHeaderMethodArgumentResolver", "qualified_name": "org.springframework.web.method.annotation.RequestHeaderMethodArgumentResolver", "short_description": " Resolves method arguments annotated with  @RequestHeader  except for Map  arguments. "},
{"api_id": 3582, "api_type": 2, "full_declaration": "RequestParamMapMethodArgumentResolver", "qualified_name": "org.springframework.web.method.annotation.RequestParamMapMethodArgumentResolver", "short_description": " Resolves  Map  method arguments annotated with an @ RequestParam where the annotation does not specify a request parameter name. "},
{"api_id": 3583, "api_type": 2, "full_declaration": "RequestParamMethodArgumentResolver", "qualified_name": "org.springframework.web.method.annotation.RequestParamMethodArgumentResolver", "short_description": " Resolves method arguments annotated with @ RequestParam , arguments of\ntype  MultipartFile  in conjunction with Spring's  MultipartResolver abstraction, and arguments of type  javax.servlet.http.Part  in conjunction\nwith Servlet 3.0 multipart requests. "},
{"api_id": 3584, "api_type": 2, "full_declaration": "SessionAttributesHandler", "qualified_name": "org.springframework.web.method.annotation.SessionAttributesHandler", "short_description": " Manages controller-specific session attributes declared via @SessionAttributes . "},
{"api_id": 3585, "api_type": 2, "full_declaration": "SessionStatusMethodArgumentResolver", "qualified_name": "org.springframework.web.method.annotation.SessionStatusMethodArgumentResolver", "short_description": " Resolves a  SessionStatus  argument by obtaining it from\nthe  ModelAndViewContainer . "},
{"api_id": 3586, "api_type": 4, "full_declaration": "MethodArgumentConversionNotSupportedException", "qualified_name": "org.springframework.web.method.annotation.MethodArgumentConversionNotSupportedException", "short_description": " A ConversionNotSupportedException raised while resolving a method argument. "},
{"api_id": 3587, "api_type": 4, "full_declaration": "MethodArgumentTypeMismatchException", "qualified_name": "org.springframework.web.method.annotation.MethodArgumentTypeMismatchException", "short_description": " A TypeMismatchException raised while resolving a controller method argument. "},
{"api_id": 3588, "api_type": 3, "full_declaration": "AsyncHandlerMethodReturnValueHandler", "qualified_name": "org.springframework.web.method.support.AsyncHandlerMethodReturnValueHandler", "short_description": " A return value handler that supports async types. "},
{"api_id": 3589, "api_type": 3, "full_declaration": "HandlerMethodArgumentResolver", "qualified_name": "org.springframework.web.method.support.HandlerMethodArgumentResolver", "short_description": " Strategy interface for resolving method parameters into argument values in\nthe context of a given request. "},
{"api_id": 3590, "api_type": 3, "full_declaration": "HandlerMethodReturnValueHandler", "qualified_name": "org.springframework.web.method.support.HandlerMethodReturnValueHandler", "short_description": " Strategy interface to handle the value returned from the invocation of a\nhandler method . "},
{"api_id": 3591, "api_type": 3, "full_declaration": "UriComponentsContributor", "qualified_name": "org.springframework.web.method.support.UriComponentsContributor", "short_description": " Strategy for contributing to the building of a  UriComponents  by\nlooking at a method parameter and an argument value and deciding what\npart of the target URL should be updated. "},
{"api_id": 3592, "api_type": 2, "full_declaration": "CompositeUriComponentsContributor", "qualified_name": "org.springframework.web.method.support.CompositeUriComponentsContributor", "short_description": " A  UriComponentsContributor  containing a list of other contributors\nto delegate and also encapsulating a specific  ConversionService  to\nuse for formatting method argument values to Strings. "},
{"api_id": 3593, "api_type": 2, "full_declaration": "HandlerMethodArgumentResolverComposite", "qualified_name": "org.springframework.web.method.support.HandlerMethodArgumentResolverComposite", "short_description": " Resolves method parameters by delegating to a list of registered HandlerMethodArgumentResolvers . "},
{"api_id": 3594, "api_type": 2, "full_declaration": "HandlerMethodReturnValueHandlerComposite", "qualified_name": "org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite", "short_description": " Handles method return values by delegating to a list of registered HandlerMethodReturnValueHandlers . "},
{"api_id": 3595, "api_type": 2, "full_declaration": "InvocableHandlerMethod", "qualified_name": "org.springframework.web.method.support.InvocableHandlerMethod", "short_description": " Extension of  HandlerMethod  that invokes the underlying method with\nargument values resolved from the current HTTP request through a list of HandlerMethodArgumentResolver . "},
{"api_id": 3596, "api_type": 2, "full_declaration": "ModelAndViewContainer", "qualified_name": "org.springframework.web.method.support.ModelAndViewContainer", "short_description": " Records model and view related decisions made by HandlerMethodArgumentResolvers  and HandlerMethodReturnValueHandlers  during the course of invocation of\na controller method. "},
{"api_id": 3597, "api_type": 3, "full_declaration": "MultipartFile", "qualified_name": "org.springframework.web.multipart.MultipartFile", "short_description": " A representation of an uploaded file received in a multipart request. "},
{"api_id": 3598, "api_type": 3, "full_declaration": "MultipartHttpServletRequest", "qualified_name": "org.springframework.web.multipart.MultipartHttpServletRequest", "short_description": " Provides additional methods for dealing with multipart content within a\nservlet request, allowing to access uploaded files. "},
{"api_id": 3599, "api_type": 3, "full_declaration": "MultipartRequest", "qualified_name": "org.springframework.web.multipart.MultipartRequest", "short_description": " This interface defines the multipart request access operations that are exposed\nfor actual multipart requests. "},
{"api_id": 3600, "api_type": 3, "full_declaration": "MultipartResolver", "qualified_name": "org.springframework.web.multipart.MultipartResolver", "short_description": " A strategy interface for multipart file upload resolution in accordance\nwith  RFC 1867 . "},
{"api_id": 3601, "api_type": 4, "full_declaration": "MaxUploadSizeExceededException", "qualified_name": "org.springframework.web.multipart.MaxUploadSizeExceededException", "short_description": " MultipartException subclass thrown when an upload exceeds the\nmaximum upload size allowed. "},
{"api_id": 3602, "api_type": 4, "full_declaration": "MultipartException", "qualified_name": "org.springframework.web.multipart.MultipartException", "short_description": " Exception thrown when multipart resolution fails. "},
{"api_id": 3603, "api_type": 2, "full_declaration": "CommonsFileUploadSupport", "qualified_name": "org.springframework.web.multipart.commons.CommonsFileUploadSupport", "short_description": " Base class for multipart resolvers that use Apache Commons FileUpload\n1.2 or above. "},
{"api_id": 3604, "api_type": 2, "full_declaration": "CommonsFileUploadSupport.MultipartParsingResult", "qualified_name": "org.springframework.web.multipart.commons.CommonsFileUploadSupport.MultipartParsingResult", "short_description": " Holder for a Map of Spring MultipartFiles and a Map of\nmultipart parameters. "},
{"api_id": 3605, "api_type": 2, "full_declaration": "CommonsMultipartFile", "qualified_name": "org.springframework.web.multipart.commons.CommonsMultipartFile", "short_description": " MultipartFile  implementation for Apache Commons FileUpload. "},
{"api_id": 3606, "api_type": 2, "full_declaration": "CommonsMultipartResolver", "qualified_name": "org.springframework.web.multipart.commons.CommonsMultipartResolver", "short_description": " Servlet-based  MultipartResolver  implementation for Apache Commons FileUpload 1.2 or above. "},
{"api_id": 3607, "api_type": 2, "full_declaration": "AbstractMultipartHttpServletRequest", "qualified_name": "org.springframework.web.multipart.support.AbstractMultipartHttpServletRequest", "short_description": " Abstract base implementation of the MultipartHttpServletRequest interface. "},
{"api_id": 3608, "api_type": 2, "full_declaration": "ByteArrayMultipartFileEditor", "qualified_name": "org.springframework.web.multipart.support.ByteArrayMultipartFileEditor", "short_description": " Custom  PropertyEditor  for converting MultipartFiles  to byte arrays. "},
{"api_id": 3609, "api_type": 2, "full_declaration": "DefaultMultipartHttpServletRequest", "qualified_name": "org.springframework.web.multipart.support.DefaultMultipartHttpServletRequest", "short_description": " Default implementation of the MultipartHttpServletRequest interface. "},
{"api_id": 3610, "api_type": 2, "full_declaration": "MultipartFilter", "qualified_name": "org.springframework.web.multipart.support.MultipartFilter", "short_description": " Servlet Filter that resolves multipart requests via a  MultipartResolver . "},
{"api_id": 3611, "api_type": 2, "full_declaration": "MultipartResolutionDelegate", "qualified_name": "org.springframework.web.multipart.support.MultipartResolutionDelegate", "short_description": " A common delegate for  HandlerMethodArgumentResolver  implementations\nwhich need to resolve  MultipartFile  and  Part  arguments. "},
{"api_id": 3612, "api_type": 2, "full_declaration": "RequestPartServletServerHttpRequest", "qualified_name": "org.springframework.web.multipart.support.RequestPartServletServerHttpRequest", "short_description": " ServerHttpRequest  implementation that accesses one part of a multipart\nrequest. "},
{"api_id": 3613, "api_type": 2, "full_declaration": "StandardMultipartHttpServletRequest", "qualified_name": "org.springframework.web.multipart.support.StandardMultipartHttpServletRequest", "short_description": " Spring MultipartHttpServletRequest adapter, wrapping a Servlet 3.0 HttpServletRequest\nand its Part objects. "},
{"api_id": 3614, "api_type": 2, "full_declaration": "StandardServletMultipartResolver", "qualified_name": "org.springframework.web.multipart.support.StandardServletMultipartResolver", "short_description": " Standard implementation of the  MultipartResolver  interface,\nbased on the Servlet 3.0  Part  API. "},
{"api_id": 3615, "api_type": 2, "full_declaration": "StandardServletPartUtils", "qualified_name": "org.springframework.web.multipart.support.StandardServletPartUtils", "short_description": " Utility methods for standard Servlet  Part  handling. "},
{"api_id": 3616, "api_type": 2, "full_declaration": "StringMultipartFileEditor", "qualified_name": "org.springframework.web.multipart.support.StringMultipartFileEditor", "short_description": " Custom  PropertyEditor  for converting MultipartFiles  to Strings. "},
{"api_id": 3617, "api_type": 4, "full_declaration": "MissingServletRequestPartException", "qualified_name": "org.springframework.web.multipart.support.MissingServletRequestPartException", "short_description": " Raised when the part of a \"multipart/form-data\" request identified by its\nname cannot be found. "},
{"api_id": 3618, "api_type": 3, "full_declaration": "HandlerAdapter", "qualified_name": "org.springframework.web.reactive.HandlerAdapter", "short_description": " Contract that decouples the  DispatcherHandler  from the details of\ninvoking a handler and makes it possible to support any handler type. "},
{"api_id": 3619, "api_type": 3, "full_declaration": "HandlerMapping", "qualified_name": "org.springframework.web.reactive.HandlerMapping", "short_description": " Interface to be implemented by objects that define a mapping between\nrequests and handler objects. "},
{"api_id": 3620, "api_type": 3, "full_declaration": "HandlerResultHandler", "qualified_name": "org.springframework.web.reactive.HandlerResultHandler", "short_description": " Process the  HandlerResult , usually returned by an  HandlerAdapter . "},
{"api_id": 3621, "api_type": 2, "full_declaration": "BindingContext", "qualified_name": "org.springframework.web.reactive.BindingContext", "short_description": " Context to assist with binding request data onto Objects and provide access\nto a shared  Model  with controller-specific attributes. "},
{"api_id": 3622, "api_type": 2, "full_declaration": "DispatcherHandler", "qualified_name": "org.springframework.web.reactive.DispatcherHandler", "short_description": " Central dispatcher for HTTP request handlers/controllers. "},
{"api_id": 3623, "api_type": 2, "full_declaration": "HandlerResult", "qualified_name": "org.springframework.web.reactive.HandlerResult", "short_description": " Represent the result of the invocation of a handler or a handler method. "},
{"api_id": 3624, "api_type": 3, "full_declaration": "RequestedContentTypeResolver", "qualified_name": "org.springframework.web.reactive.accept.RequestedContentTypeResolver", "short_description": " Strategy to resolve the requested media types for a  ServerWebExchange . "},
{"api_id": 3625, "api_type": 2, "full_declaration": "FixedContentTypeResolver", "qualified_name": "org.springframework.web.reactive.accept.FixedContentTypeResolver", "short_description": " Resolver that always resolves to a fixed list of media types. "},
{"api_id": 3626, "api_type": 2, "full_declaration": "HeaderContentTypeResolver", "qualified_name": "org.springframework.web.reactive.accept.HeaderContentTypeResolver", "short_description": " Resolver that looks at the 'Accept' header of the request. "},
{"api_id": 3627, "api_type": 2, "full_declaration": "ParameterContentTypeResolver", "qualified_name": "org.springframework.web.reactive.accept.ParameterContentTypeResolver", "short_description": " Resolver that checks a query parameter and uses it to lookup a matching\nMediaType. "},
{"api_id": 3628, "api_type": 2, "full_declaration": "RequestedContentTypeResolverBuilder", "qualified_name": "org.springframework.web.reactive.accept.RequestedContentTypeResolverBuilder", "short_description": " Builder for a composite  RequestedContentTypeResolver  that delegates\nto other resolvers each implementing a different strategy to determine the\nrequested content type -- e.g. "},
{"api_id": 3629, "api_type": 2, "full_declaration": "RequestedContentTypeResolverBuilder.ParameterResolverConfigurer", "qualified_name": "org.springframework.web.reactive.accept.RequestedContentTypeResolverBuilder.ParameterResolverConfigurer", "short_description": " Helper to create and configure  ParameterContentTypeResolver . "},
{"api_id": 3630, "api_type": 3, "full_declaration": "WebFluxConfigurer", "qualified_name": "org.springframework.web.reactive.config.WebFluxConfigurer", "short_description": " Defines callback methods to customize the configuration for WebFlux\napplications enabled via  @EnableWebFlux . "},
{"api_id": 3631, "api_type": 2, "full_declaration": "CorsRegistration", "qualified_name": "org.springframework.web.reactive.config.CorsRegistration", "short_description": " Assists with the creation of a  CorsConfiguration  instance for a given\nURL path pattern. "},
{"api_id": 3632, "api_type": 2, "full_declaration": "CorsRegistry", "qualified_name": "org.springframework.web.reactive.config.CorsRegistry", "short_description": " Assists with the registration of global, URL pattern based CorsConfiguration  mappings. "},
{"api_id": 3633, "api_type": 2, "full_declaration": "DelegatingWebFluxConfiguration", "qualified_name": "org.springframework.web.reactive.config.DelegatingWebFluxConfiguration", "short_description": " A subclass of  WebFluxConfigurationSupport  that detects and delegates\nto all beans of type  WebFluxConfigurer  allowing them to customize the\nconfiguration provided by  WebFluxConfigurationSupport . "},
{"api_id": 3634, "api_type": 2, "full_declaration": "PathMatchConfigurer", "qualified_name": "org.springframework.web.reactive.config.PathMatchConfigurer", "short_description": " Assist with configuring  HandlerMapping 's with path matching options. "},
{"api_id": 3635, "api_type": 2, "full_declaration": "ResourceChainRegistration", "qualified_name": "org.springframework.web.reactive.config.ResourceChainRegistration", "short_description": " Assists with the registration of resource resolvers and transformers. "},
{"api_id": 3636, "api_type": 2, "full_declaration": "ResourceHandlerRegistration", "qualified_name": "org.springframework.web.reactive.config.ResourceHandlerRegistration", "short_description": " Assist with creating and configuring a static resources handler. "},
{"api_id": 3637, "api_type": 2, "full_declaration": "ResourceHandlerRegistry", "qualified_name": "org.springframework.web.reactive.config.ResourceHandlerRegistry", "short_description": " Stores registrations of resource handlers for serving static resources such\nas images, css files and others through Spring WebFlux including setting cache\nheaders optimized for efficient loading in a web browser. "},
{"api_id": 3638, "api_type": 2, "full_declaration": "UrlBasedViewResolverRegistration", "qualified_name": "org.springframework.web.reactive.config.UrlBasedViewResolverRegistration", "short_description": " Assist with configuring properties of a  UrlBasedViewResolver . "},
{"api_id": 3639, "api_type": 2, "full_declaration": "ViewResolverRegistry", "qualified_name": "org.springframework.web.reactive.config.ViewResolverRegistry", "short_description": " Assist with the configuration of a chain of  ViewResolver 's supporting\ndifferent template mechanisms. "},
{"api_id": 3640, "api_type": 2, "full_declaration": "WebFluxConfigurationSupport", "qualified_name": "org.springframework.web.reactive.config.WebFluxConfigurationSupport", "short_description": " The main class for Spring WebFlux configuration. "},
{"api_id": 3641, "api_type": 2, "full_declaration": "WebFluxConfigurerComposite", "qualified_name": "org.springframework.web.reactive.config.WebFluxConfigurerComposite", "short_description": " A  WebFluxConfigurer  that delegates to one or more others. "},
{"api_id": 3642, "api_type": 9, "full_declaration": "EnableWebFlux", "qualified_name": "org.springframework.web.reactive.config.EnableWebFlux", "short_description": " Adding this annotation to an  @Configuration  class imports the Spring\nWebFlux configuration from  WebFluxConfigurationSupport  that enables\nuse of annotated controllers and functional endpoints. "},
{"api_id": 3643, "api_type": 3, "full_declaration": "BodyExtractor", "qualified_name": "org.springframework.web.reactive.function.BodyExtractor", "short_description": " A function that can extract data from a  ReactiveHttpInputMessage  body. "},
{"api_id": 3644, "api_type": 3, "full_declaration": "BodyExtractor.Context", "qualified_name": "org.springframework.web.reactive.function.BodyExtractor.Context", "short_description": " Defines the context used during the extraction. "},
{"api_id": 3645, "api_type": 3, "full_declaration": "BodyInserter", "qualified_name": "org.springframework.web.reactive.function.BodyInserter", "short_description": " A combination of functions that can populate a  ReactiveHttpOutputMessage  body. "},
{"api_id": 3646, "api_type": 3, "full_declaration": "BodyInserter.Context", "qualified_name": "org.springframework.web.reactive.function.BodyInserter.Context", "short_description": " Defines the context used during the insertion. "},
{"api_id": 3647, "api_type": 3, "full_declaration": "BodyInserters.FormInserter", "qualified_name": "org.springframework.web.reactive.function.BodyInserters.FormInserter", "short_description": " Extension of  BodyInserter  that allows for adding form data or\nmultipart form data. "},
{"api_id": 3648, "api_type": 3, "full_declaration": "BodyInserters.MultipartInserter", "qualified_name": "org.springframework.web.reactive.function.BodyInserters.MultipartInserter", "short_description": " Extension of  BodyInserters.FormInserter  that allows for adding asynchronous parts. "},
{"api_id": 3649, "api_type": 2, "full_declaration": "BodyExtractors", "qualified_name": "org.springframework.web.reactive.function.BodyExtractors", "short_description": " Static factory methods for  BodyExtractor  implementations. "},
{"api_id": 3650, "api_type": 2, "full_declaration": "BodyInserters", "qualified_name": "org.springframework.web.reactive.function.BodyInserters", "short_description": " Static factory methods for  BodyInserter  implementations. "},
{"api_id": 3651, "api_type": 4, "full_declaration": "UnsupportedMediaTypeException", "qualified_name": "org.springframework.web.reactive.function.UnsupportedMediaTypeException", "short_description": " Exception thrown to indicate that a  Content-Type  is not supported. "},
{"api_id": 3652, "api_type": 3, "full_declaration": "ClientRequest", "qualified_name": "org.springframework.web.reactive.function.client.ClientRequest", "short_description": " Represents a typed, immutable, client-side HTTP request, as executed by the ExchangeFunction . "},
{"api_id": 3653, "api_type": 3, "full_declaration": "ClientRequest.Builder", "qualified_name": "org.springframework.web.reactive.function.client.ClientRequest.Builder", "short_description": " Defines a builder for a request. "},
{"api_id": 3654, "api_type": 3, "full_declaration": "ClientResponse", "qualified_name": "org.springframework.web.reactive.function.client.ClientResponse", "short_description": " Represents an HTTP response, as returned by  WebClient  and also ExchangeFunction . "},
{"api_id": 3655, "api_type": 3, "full_declaration": "ClientResponse.Builder", "qualified_name": "org.springframework.web.reactive.function.client.ClientResponse.Builder", "short_description": " Defines a builder for a response. "},
{"api_id": 3656, "api_type": 3, "full_declaration": "ClientResponse.Headers", "qualified_name": "org.springframework.web.reactive.function.client.ClientResponse.Headers", "short_description": " Represents the headers of the HTTP response. "},
{"api_id": 3657, "api_type": 3, "full_declaration": "ExchangeFilterFunction", "qualified_name": "org.springframework.web.reactive.function.client.ExchangeFilterFunction", "short_description": " Represents a function that filters an  exchange function . "},
{"api_id": 3658, "api_type": 3, "full_declaration": "ExchangeFunction", "qualified_name": "org.springframework.web.reactive.function.client.ExchangeFunction", "short_description": " Represents a function that exchanges a  request  for a (delayed) ClientResponse . "},
{"api_id": 3659, "api_type": 3, "full_declaration": "ExchangeStrategies", "qualified_name": "org.springframework.web.reactive.function.client.ExchangeStrategies", "short_description": " Provides strategies for use in an  ExchangeFunction . "},
{"api_id": 3660, "api_type": 3, "full_declaration": "ExchangeStrategies.Builder", "qualified_name": "org.springframework.web.reactive.function.client.ExchangeStrategies.Builder", "short_description": " A mutable builder for an  ExchangeStrategies . "},
{"api_id": 3661, "api_type": 3, "full_declaration": "WebClient", "qualified_name": "org.springframework.web.reactive.function.client.WebClient", "short_description": " Non-blocking, reactive client to perform HTTP requests, exposing a fluent,\nreactive API over underlying HTTP client libraries such as Reactor Netty. "},
{"api_id": 3662, "api_type": 3, "full_declaration": "WebClient.Builder", "qualified_name": "org.springframework.web.reactive.function.client.WebClient.Builder", "short_description": " A mutable builder for creating a  WebClient . "},
{"api_id": 3663, "api_type": 3, "full_declaration": "WebClient.RequestBodySpec", "qualified_name": "org.springframework.web.reactive.function.client.WebClient.RequestBodySpec", "short_description": " Contract for specifying request headers and body leading up to the exchange. "},
{"api_id": 3664, "api_type": 3, "full_declaration": "WebClient.RequestBodyUriSpec", "qualified_name": "org.springframework.web.reactive.function.client.WebClient.RequestBodyUriSpec", "short_description": " Contract for specifying request headers, body and URI for a request. "},
{"api_id": 3665, "api_type": 3, "full_declaration": "WebClient.RequestHeadersSpec", "qualified_name": "org.springframework.web.reactive.function.client.WebClient.RequestHeadersSpec", "short_description": " Contract for specifying request headers leading up to the exchange. "},
{"api_id": 3666, "api_type": 3, "full_declaration": "WebClient.RequestHeadersUriSpec", "qualified_name": "org.springframework.web.reactive.function.client.WebClient.RequestHeadersUriSpec", "short_description": " Contract for specifying request headers and URI for a request. "},
{"api_id": 3667, "api_type": 3, "full_declaration": "WebClient.ResponseSpec", "qualified_name": "org.springframework.web.reactive.function.client.WebClient.ResponseSpec", "short_description": " Contract for specifying response operations following the exchange. "},
{"api_id": 3668, "api_type": 3, "full_declaration": "WebClient.UriSpec", "qualified_name": "org.springframework.web.reactive.function.client.WebClient.UriSpec", "short_description": " Contract for specifying the URI for a request. "},
{"api_id": 3669, "api_type": 2, "full_declaration": "ExchangeFilterFunctions", "qualified_name": "org.springframework.web.reactive.function.client.ExchangeFilterFunctions", "short_description": " Static factory methods providing access to built-in implementations of ExchangeFilterFunction  for basic authentication, error handling, etc. "},
{"api_id": 3670, "api_type": 2, "full_declaration": "ExchangeFilterFunctions.Credentials", "qualified_name": "org.springframework.web.reactive.function.client.ExchangeFilterFunctions.Credentials", "short_description": "Deprecated as of Spring 5.1 in favor of using HttpHeaders.setBasicAuth(String, String)  while building the request. "},
{"api_id": 3671, "api_type": 2, "full_declaration": "ExchangeFunctions", "qualified_name": "org.springframework.web.reactive.function.client.ExchangeFunctions", "short_description": " Static factory methods to create an  ExchangeFunction . "},
{"api_id": 3672, "api_type": 4, "full_declaration": "UnknownHttpStatusCodeException", "qualified_name": "org.springframework.web.reactive.function.client.UnknownHttpStatusCodeException", "short_description": " Exception thrown when an unknown (or custom) HTTP status code is received. "},
{"api_id": 3673, "api_type": 4, "full_declaration": "WebClientException", "qualified_name": "org.springframework.web.reactive.function.client.WebClientException", "short_description": " Abstract base class for exception published by  WebClient  in case of errors. "},
{"api_id": 3674, "api_type": 4, "full_declaration": "WebClientRequestException", "qualified_name": "org.springframework.web.reactive.function.client.WebClientRequestException", "short_description": " Exceptions that contain actual HTTP request data. "},
{"api_id": 3675, "api_type": 4, "full_declaration": "WebClientResponseException", "qualified_name": "org.springframework.web.reactive.function.client.WebClientResponseException", "short_description": " Exceptions that contain actual HTTP response data. "},
{"api_id": 3676, "api_type": 4, "full_declaration": "WebClientResponseException.BadGateway", "qualified_name": "org.springframework.web.reactive.function.client.WebClientResponseException.BadGateway", "short_description": " WebClientResponseException  for status HTTP HTTP 502 Bad Gateway. "},
{"api_id": 3677, "api_type": 4, "full_declaration": "WebClientResponseException.BadRequest", "qualified_name": "org.springframework.web.reactive.function.client.WebClientResponseException.BadRequest", "short_description": " WebClientResponseException  for status HTTP 400 Bad Request. "},
{"api_id": 3678, "api_type": 4, "full_declaration": "WebClientResponseException.Conflict", "qualified_name": "org.springframework.web.reactive.function.client.WebClientResponseException.Conflict", "short_description": " WebClientResponseException  for status HTTP 409 Conflict. "},
{"api_id": 3679, "api_type": 4, "full_declaration": "WebClientResponseException.Forbidden", "qualified_name": "org.springframework.web.reactive.function.client.WebClientResponseException.Forbidden", "short_description": " WebClientResponseException  for status HTTP 403 Forbidden. "},
{"api_id": 3680, "api_type": 4, "full_declaration": "WebClientResponseException.GatewayTimeout", "qualified_name": "org.springframework.web.reactive.function.client.WebClientResponseException.GatewayTimeout", "short_description": " WebClientResponseException  for status HTTP 504 Gateway Timeout. "},
{"api_id": 3681, "api_type": 4, "full_declaration": "WebClientResponseException.Gone", "qualified_name": "org.springframework.web.reactive.function.client.WebClientResponseException.Gone", "short_description": " WebClientResponseException  for status HTTP 410 Gone. "},
{"api_id": 3682, "api_type": 4, "full_declaration": "WebClientResponseException.InternalServerError", "qualified_name": "org.springframework.web.reactive.function.client.WebClientResponseException.InternalServerError", "short_description": " WebClientResponseException  for status HTTP 500 Internal Server Error. "},
{"api_id": 3683, "api_type": 4, "full_declaration": "WebClientResponseException.MethodNotAllowed", "qualified_name": "org.springframework.web.reactive.function.client.WebClientResponseException.MethodNotAllowed", "short_description": " WebClientResponseException  for status HTTP 405 Method Not Allowed. "},
{"api_id": 3684, "api_type": 4, "full_declaration": "WebClientResponseException.NotAcceptable", "qualified_name": "org.springframework.web.reactive.function.client.WebClientResponseException.NotAcceptable", "short_description": " WebClientResponseException  for status HTTP 406 Not Acceptable. "},
{"api_id": 3685, "api_type": 4, "full_declaration": "WebClientResponseException.NotFound", "qualified_name": "org.springframework.web.reactive.function.client.WebClientResponseException.NotFound", "short_description": " WebClientResponseException  for status HTTP 404 Not Found. "},
{"api_id": 3686, "api_type": 4, "full_declaration": "WebClientResponseException.NotImplemented", "qualified_name": "org.springframework.web.reactive.function.client.WebClientResponseException.NotImplemented", "short_description": " WebClientResponseException  for status HTTP 501 Not Implemented. "},
{"api_id": 3687, "api_type": 4, "full_declaration": "WebClientResponseException.ServiceUnavailable", "qualified_name": "org.springframework.web.reactive.function.client.WebClientResponseException.ServiceUnavailable", "short_description": " WebClientResponseException  for status HTTP 503 Service Unavailable. "},
{"api_id": 3688, "api_type": 4, "full_declaration": "WebClientResponseException.TooManyRequests", "qualified_name": "org.springframework.web.reactive.function.client.WebClientResponseException.TooManyRequests", "short_description": " WebClientResponseException  for status HTTP 429 Too Many Requests. "},
{"api_id": 3689, "api_type": 4, "full_declaration": "WebClientResponseException.Unauthorized", "qualified_name": "org.springframework.web.reactive.function.client.WebClientResponseException.Unauthorized", "short_description": " WebClientResponseException  for status HTTP 401 Unauthorized. "},
{"api_id": 3690, "api_type": 4, "full_declaration": "WebClientResponseException.UnprocessableEntity", "qualified_name": "org.springframework.web.reactive.function.client.WebClientResponseException.UnprocessableEntity", "short_description": " WebClientResponseException  for status HTTP 422 Unprocessable Entity. "},
{"api_id": 3691, "api_type": 4, "full_declaration": "WebClientResponseException.UnsupportedMediaType", "qualified_name": "org.springframework.web.reactive.function.client.WebClientResponseException.UnsupportedMediaType", "short_description": " WebClientResponseException  for status HTTP 415 Unsupported Media Type. "},
{"api_id": 3692, "api_type": 2, "full_declaration": "ClientResponseWrapper", "qualified_name": "org.springframework.web.reactive.function.client.support.ClientResponseWrapper", "short_description": " Implementation of the  ClientResponse  interface that can be subclassed\nto adapt the request in a exchange filter function . "},
{"api_id": 3693, "api_type": 2, "full_declaration": "ClientResponseWrapper.HeadersWrapper", "qualified_name": "org.springframework.web.reactive.function.client.support.ClientResponseWrapper.HeadersWrapper", "short_description": " Implementation of the  Headers  interface that can be subclassed\nto adapt the headers in a exchange filter function . "},
{"api_id": 3694, "api_type": 3, "full_declaration": "EntityResponse", "qualified_name": "org.springframework.web.reactive.function.server.EntityResponse", "short_description": " Entity-specific subtype of  ServerResponse  that exposes entity data. "},
{"api_id": 3695, "api_type": 3, "full_declaration": "EntityResponse.Builder", "qualified_name": "org.springframework.web.reactive.function.server.EntityResponse.Builder", "short_description": " Defines a builder for  EntityResponse . "},
{"api_id": 3696, "api_type": 3, "full_declaration": "HandlerFilterFunction", "qualified_name": "org.springframework.web.reactive.function.server.HandlerFilterFunction", "short_description": " Represents a function that filters a  handler function . "},
{"api_id": 3697, "api_type": 3, "full_declaration": "HandlerFunction", "qualified_name": "org.springframework.web.reactive.function.server.HandlerFunction", "short_description": " Represents a function that handles a  request . "},
{"api_id": 3698, "api_type": 3, "full_declaration": "HandlerStrategies", "qualified_name": "org.springframework.web.reactive.function.server.HandlerStrategies", "short_description": " Defines the strategies to be used for processing  HandlerFunctions . "},
{"api_id": 3699, "api_type": 3, "full_declaration": "HandlerStrategies.Builder", "qualified_name": "org.springframework.web.reactive.function.server.HandlerStrategies.Builder", "short_description": " A mutable builder for a  HandlerStrategies . "},
{"api_id": 3700, "api_type": 3, "full_declaration": "RenderingResponse", "qualified_name": "org.springframework.web.reactive.function.server.RenderingResponse", "short_description": " Rendering-specific subtype of  ServerResponse  that exposes model and template data. "},
{"api_id": 3701, "api_type": 3, "full_declaration": "RenderingResponse.Builder", "qualified_name": "org.springframework.web.reactive.function.server.RenderingResponse.Builder", "short_description": " Defines a builder for  RenderingResponse . "},
{"api_id": 3702, "api_type": 3, "full_declaration": "RequestPredicate", "qualified_name": "org.springframework.web.reactive.function.server.RequestPredicate", "short_description": " Represents a function that evaluates on a given  ServerRequest . "},
{"api_id": 3703, "api_type": 3, "full_declaration": "RequestPredicates.Visitor", "qualified_name": "org.springframework.web.reactive.function.server.RequestPredicates.Visitor", "short_description": " Receives notifications from the logical structure of request predicates. "},
{"api_id": 3704, "api_type": 3, "full_declaration": "RouterFunction", "qualified_name": "org.springframework.web.reactive.function.server.RouterFunction", "short_description": " Represents a function that routes to a  handler function . "},
{"api_id": 3705, "api_type": 3, "full_declaration": "RouterFunctions.Builder", "qualified_name": "org.springframework.web.reactive.function.server.RouterFunctions.Builder", "short_description": " Represents a discoverable builder for router functions. "},
{"api_id": 3706, "api_type": 3, "full_declaration": "RouterFunctions.Visitor", "qualified_name": "org.springframework.web.reactive.function.server.RouterFunctions.Visitor", "short_description": " Receives notifications from the logical structure of router functions. "},
{"api_id": 3707, "api_type": 3, "full_declaration": "ServerRequest", "qualified_name": "org.springframework.web.reactive.function.server.ServerRequest", "short_description": " Represents a server-side HTTP request, as handled by a  HandlerFunction . "},
{"api_id": 3708, "api_type": 3, "full_declaration": "ServerRequest.Builder", "qualified_name": "org.springframework.web.reactive.function.server.ServerRequest.Builder", "short_description": " Defines a builder for a request. "},
{"api_id": 3709, "api_type": 3, "full_declaration": "ServerRequest.Headers", "qualified_name": "org.springframework.web.reactive.function.server.ServerRequest.Headers", "short_description": " Represents the headers of the HTTP request. "},
{"api_id": 3710, "api_type": 3, "full_declaration": "ServerResponse", "qualified_name": "org.springframework.web.reactive.function.server.ServerResponse", "short_description": " Represents a typed server-side HTTP response, as returned\nby a  handler function  or filter function . "},
{"api_id": 3711, "api_type": 3, "full_declaration": "ServerResponse.BodyBuilder", "qualified_name": "org.springframework.web.reactive.function.server.ServerResponse.BodyBuilder", "short_description": " Defines a builder that adds a body to the response. "},
{"api_id": 3712, "api_type": 3, "full_declaration": "ServerResponse.Context", "qualified_name": "org.springframework.web.reactive.function.server.ServerResponse.Context", "short_description": " Defines the context used during the  ServerResponse.writeTo(ServerWebExchange, Context) . "},
{"api_id": 3713, "api_type": 3, "full_declaration": "ServerResponse.HeadersBuilder", "qualified_name": "org.springframework.web.reactive.function.server.ServerResponse.HeadersBuilder", "short_description": " Defines a builder that adds headers to the response. "},
{"api_id": 3714, "api_type": 2, "full_declaration": "RequestPredicates", "qualified_name": "org.springframework.web.reactive.function.server.RequestPredicates", "short_description": " Implementations of  RequestPredicate  that implement various useful\nrequest matching operations, such as matching based on path, HTTP method, etc. "},
{"api_id": 3715, "api_type": 2, "full_declaration": "RouterFunctions", "qualified_name": "org.springframework.web.reactive.function.server.RouterFunctions", "short_description": " Central entry point to Spring's functional web framework. Exposes routing functionality, such as to  create  a RouterFunction  using a discoverable builder-style API, to create  a  RouterFunction given a  RequestPredicate  and  HandlerFunction , and to do further subrouting  on an existing routing\nfunction. "},
{"api_id": 3716, "api_type": 2, "full_declaration": "HandlerFunctionAdapter", "qualified_name": "org.springframework.web.reactive.function.server.support.HandlerFunctionAdapter", "short_description": " HandlerAdapter  implementation that supports  HandlerFunctions . "},
{"api_id": 3717, "api_type": 2, "full_declaration": "RouterFunctionMapping", "qualified_name": "org.springframework.web.reactive.function.server.support.RouterFunctionMapping", "short_description": " HandlerMapping  implementation that supports  RouterFunctions . "},
{"api_id": 3718, "api_type": 2, "full_declaration": "ServerRequestWrapper", "qualified_name": "org.springframework.web.reactive.function.server.support.ServerRequestWrapper", "short_description": " Implementation of the  ServerRequest  interface that can be subclassed\nto adapt the request in a handler filter function . "},
{"api_id": 3719, "api_type": 2, "full_declaration": "ServerRequestWrapper.HeadersWrapper", "qualified_name": "org.springframework.web.reactive.function.server.support.ServerRequestWrapper.HeadersWrapper", "short_description": " Implementation of the  Headers  interface that can be subclassed\nto adapt the headers in a handler filter function . "},
{"api_id": 3720, "api_type": 2, "full_declaration": "ServerResponseResultHandler", "qualified_name": "org.springframework.web.reactive.function.server.support.ServerResponseResultHandler", "short_description": " HandlerResultHandler  implementation that supports  ServerResponses . "},
{"api_id": 3721, "api_type": 2, "full_declaration": "AbstractHandlerMapping", "qualified_name": "org.springframework.web.reactive.handler.AbstractHandlerMapping", "short_description": " Abstract base class for  HandlerMapping implementations. "},
{"api_id": 3722, "api_type": 2, "full_declaration": "AbstractUrlHandlerMapping", "qualified_name": "org.springframework.web.reactive.handler.AbstractUrlHandlerMapping", "short_description": " Abstract base class for URL-mapped HandlerMapping  implementations. "},
{"api_id": 3723, "api_type": 2, "full_declaration": "SimpleUrlHandlerMapping", "qualified_name": "org.springframework.web.reactive.handler.SimpleUrlHandlerMapping", "short_description": " Implementation of the  HandlerMapping interface to map from URLs to request handler beans. "},
{"api_id": 3724, "api_type": 2, "full_declaration": "WebFluxResponseStatusExceptionHandler", "qualified_name": "org.springframework.web.reactive.handler.WebFluxResponseStatusExceptionHandler", "short_description": " Common WebFlux exception handler that detects instances of ResponseStatusException (inherited from the base class) as well as exceptions annotated with @ResponseStatus  by determining the HTTP status\nfor them and updating the status of the response accordingly. "},
{"api_id": 3725, "api_type": 3, "full_declaration": "CssLinkResourceTransformer.LinkParser", "qualified_name": "org.springframework.web.reactive.resource.CssLinkResourceTransformer.LinkParser", "short_description": " Extract content chunks that represent links. "},
{"api_id": 3726, "api_type": 3, "full_declaration": "HttpResource", "qualified_name": "org.springframework.web.reactive.resource.HttpResource", "short_description": " Extended interface for a  Resource  to be written to an\nHTTP response. "},
{"api_id": 3727, "api_type": 3, "full_declaration": "ResourceResolver", "qualified_name": "org.springframework.web.reactive.resource.ResourceResolver", "short_description": " A strategy for resolving a request to a server-side resource. "},
{"api_id": 3728, "api_type": 3, "full_declaration": "ResourceResolverChain", "qualified_name": "org.springframework.web.reactive.resource.ResourceResolverChain", "short_description": " A contract for invoking a chain of  ResourceResolvers  where each resolver\nis given a reference to the chain allowing it to delegate when necessary. "},
{"api_id": 3729, "api_type": 3, "full_declaration": "ResourceTransformer", "qualified_name": "org.springframework.web.reactive.resource.ResourceTransformer", "short_description": " An abstraction for transforming the content of a resource. "},
{"api_id": 3730, "api_type": 3, "full_declaration": "ResourceTransformerChain", "qualified_name": "org.springframework.web.reactive.resource.ResourceTransformerChain", "short_description": " A contract for invoking a chain of  ResourceTransformers  where each resolver\nis given a reference to the chain allowing it to delegate when necessary. "},
{"api_id": 3731, "api_type": 3, "full_declaration": "VersionStrategy", "qualified_name": "org.springframework.web.reactive.resource.VersionStrategy", "short_description": " A strategy to determine the version of a static resource and to apply and/or\nextract it from the URL path. "},
{"api_id": 3732, "api_type": 2, "full_declaration": "AbstractFileNameVersionStrategy", "qualified_name": "org.springframework.web.reactive.resource.AbstractFileNameVersionStrategy", "short_description": " Abstract base class for filename suffix based  VersionStrategy implementations, e.g. "},
{"api_id": 3733, "api_type": 2, "full_declaration": "AbstractPrefixVersionStrategy", "qualified_name": "org.springframework.web.reactive.resource.AbstractPrefixVersionStrategy", "short_description": " Abstract base class for  VersionStrategy  implementations that insert\na prefix into the URL path, e.g. "},
{"api_id": 3734, "api_type": 2, "full_declaration": "AbstractResourceResolver", "qualified_name": "org.springframework.web.reactive.resource.AbstractResourceResolver", "short_description": " Base  ResourceResolver  providing consistent logging. "},
{"api_id": 3735, "api_type": 2, "full_declaration": "AppCacheManifestTransformer", "qualified_name": "org.springframework.web.reactive.resource.AppCacheManifestTransformer", "short_description": "Deprecated as of 5.3 since browser support is going away "},
{"api_id": 3736, "api_type": 2, "full_declaration": "CachingResourceResolver", "qualified_name": "org.springframework.web.reactive.resource.CachingResourceResolver", "short_description": " A  ResourceResolver  that resolves resources from a  Cache  or\notherwise delegates to the resolver chain and caches the result. "},
{"api_id": 3737, "api_type": 2, "full_declaration": "CachingResourceTransformer", "qualified_name": "org.springframework.web.reactive.resource.CachingResourceTransformer", "short_description": " A  ResourceTransformer  that checks a  Cache  to see if a\npreviously transformed resource exists in the cache and returns it if found,\nor otherwise delegates to the resolver chain and caches the result. "},
{"api_id": 3738, "api_type": 2, "full_declaration": "ContentVersionStrategy", "qualified_name": "org.springframework.web.reactive.resource.ContentVersionStrategy", "short_description": " A  VersionStrategy  that calculates an Hex MD5 hashes from the content\nof the resource and appends it to the file name, e.g. "},
{"api_id": 3739, "api_type": 2, "full_declaration": "CssLinkResourceTransformer", "qualified_name": "org.springframework.web.reactive.resource.CssLinkResourceTransformer", "short_description": " A  ResourceTransformer  implementation that modifies links in a CSS\nfile to match the public URL paths that should be exposed to clients (e.g. "},
{"api_id": 3740, "api_type": 2, "full_declaration": "CssLinkResourceTransformer.AbstractLinkParser", "qualified_name": "org.springframework.web.reactive.resource.CssLinkResourceTransformer.AbstractLinkParser", "short_description": " Abstract base class for  CssLinkResourceTransformer.LinkParser  implementations. "},
{"api_id": 3741, "api_type": 2, "full_declaration": "EncodedResourceResolver", "qualified_name": "org.springframework.web.reactive.resource.EncodedResourceResolver", "short_description": " Resolver that delegates to the chain, and if a resource is found, it then\nattempts to find an encoded (e.g. "},
{"api_id": 3742, "api_type": 2, "full_declaration": "FixedVersionStrategy", "qualified_name": "org.springframework.web.reactive.resource.FixedVersionStrategy", "short_description": " A  VersionStrategy  that relies on a fixed version applied as a request\npath prefix, e.g. "},
{"api_id": 3743, "api_type": 2, "full_declaration": "GzipResourceResolver", "qualified_name": "org.springframework.web.reactive.resource.GzipResourceResolver", "short_description": "Deprecated as of 5.1, in favor of using  EncodedResourceResolver "},
{"api_id": 3744, "api_type": 2, "full_declaration": "PathResourceResolver", "qualified_name": "org.springframework.web.reactive.resource.PathResourceResolver", "short_description": " A simple  ResourceResolver  that tries to find a resource under the given\nlocations matching to the request path. "},
{"api_id": 3745, "api_type": 2, "full_declaration": "ResourceTransformerSupport", "qualified_name": "org.springframework.web.reactive.resource.ResourceTransformerSupport", "short_description": " A base class for a  ResourceTransformer  with an optional helper method\nfor resolving public links within a transformed resource. "},
{"api_id": 3746, "api_type": 2, "full_declaration": "ResourceUrlProvider", "qualified_name": "org.springframework.web.reactive.resource.ResourceUrlProvider", "short_description": " A central component to use to obtain the public URL path that clients should\nuse to access a static resource. "},
{"api_id": 3747, "api_type": 2, "full_declaration": "ResourceWebHandler", "qualified_name": "org.springframework.web.reactive.resource.ResourceWebHandler", "short_description": " HttpRequestHandler  that serves static resources in an optimized way\naccording to the guidelines of Page Speed, YSlow, etc. "},
{"api_id": 3748, "api_type": 2, "full_declaration": "TransformedResource", "qualified_name": "org.springframework.web.reactive.resource.TransformedResource", "short_description": " An extension of  ByteArrayResource  that a  ResourceTransformer can use to represent an original resource preserving all other information\nexcept the content. "},
{"api_id": 3749, "api_type": 2, "full_declaration": "VersionResourceResolver", "qualified_name": "org.springframework.web.reactive.resource.VersionResourceResolver", "short_description": " Resolves request paths containing a version string that can be used as part\nof an HTTP caching strategy in which a resource is cached with a date in the\ndistant future (e.g. "},
{"api_id": 3750, "api_type": 2, "full_declaration": "WebJarsResourceResolver", "qualified_name": "org.springframework.web.reactive.resource.WebJarsResourceResolver", "short_description": " A  ResourceResolver  that delegates to the chain to locate a resource and then\nattempts to find a matching versioned resource contained in a WebJar JAR file. "},
{"api_id": 3751, "api_type": 2, "full_declaration": "HandlerResultHandlerSupport", "qualified_name": "org.springframework.web.reactive.result.HandlerResultHandlerSupport", "short_description": " Base class for  HandlerResultHandler  with support for content negotiation and access to a ReactiveAdapter  registry. "},
{"api_id": 3752, "api_type": 2, "full_declaration": "SimpleHandlerAdapter", "qualified_name": "org.springframework.web.reactive.result.SimpleHandlerAdapter", "short_description": " HandlerAdapter  that allows using the plain  WebHandler  contract\nwith the generic  DispatcherHandler . "},
{"api_id": 3753, "api_type": 3, "full_declaration": "MediaTypeExpression", "qualified_name": "org.springframework.web.reactive.result.condition.MediaTypeExpression", "short_description": " A contract for media type expressions (e.g. "},
{"api_id": 3754, "api_type": 3, "full_declaration": "NameValueExpression", "qualified_name": "org.springframework.web.reactive.result.condition.NameValueExpression", "short_description": " A contract for  \"name!=value\"  style expression used to specify request\nparameters and request header conditions in  @RequestMapping . "},
{"api_id": 3755, "api_type": 3, "full_declaration": "RequestCondition", "qualified_name": "org.springframework.web.reactive.result.condition.RequestCondition", "short_description": " Contract for request mapping conditions. "},
{"api_id": 3756, "api_type": 2, "full_declaration": "AbstractRequestCondition", "qualified_name": "org.springframework.web.reactive.result.condition.AbstractRequestCondition", "short_description": " A base class for  RequestCondition  types providing implementations of AbstractRequestCondition.equals(Object) ,  AbstractRequestCondition.hashCode() , and  AbstractRequestCondition.toString() . "},
{"api_id": 3757, "api_type": 2, "full_declaration": "CompositeRequestCondition", "qualified_name": "org.springframework.web.reactive.result.condition.CompositeRequestCondition", "short_description": " Implements the  RequestCondition  contract by delegating to multiple RequestCondition  types and using a logical conjunction (' && ') to\nensure all conditions match a given request. "},
{"api_id": 3758, "api_type": 2, "full_declaration": "ConsumesRequestCondition", "qualified_name": "org.springframework.web.reactive.result.condition.ConsumesRequestCondition", "short_description": " A logical disjunction (' || ') request condition to match a request's\n'Content-Type' header to a list of media type expressions. "},
{"api_id": 3759, "api_type": 2, "full_declaration": "HeadersRequestCondition", "qualified_name": "org.springframework.web.reactive.result.condition.HeadersRequestCondition", "short_description": " A logical conjunction (' && ') request condition that matches a request against\na set of header expressions with syntax defined in  RequestMapping.headers() . "},
{"api_id": 3760, "api_type": 2, "full_declaration": "ParamsRequestCondition", "qualified_name": "org.springframework.web.reactive.result.condition.ParamsRequestCondition", "short_description": " A logical conjunction (' && ') request condition that matches a request against\na set parameter expressions with syntax defined in  RequestMapping.params() . "},
{"api_id": 3761, "api_type": 2, "full_declaration": "PatternsRequestCondition", "qualified_name": "org.springframework.web.reactive.result.condition.PatternsRequestCondition", "short_description": " A logical disjunction (' || ') request condition that matches a request\nagainst a set of URL path patterns. "},
{"api_id": 3762, "api_type": 2, "full_declaration": "ProducesRequestCondition", "qualified_name": "org.springframework.web.reactive.result.condition.ProducesRequestCondition", "short_description": " A logical disjunction (' || ') request condition to match a request's 'Accept' header\nto a list of media type expressions. "},
{"api_id": 3763, "api_type": 2, "full_declaration": "RequestConditionHolder", "qualified_name": "org.springframework.web.reactive.result.condition.RequestConditionHolder", "short_description": " A holder for a  RequestCondition  useful when the type of the request\ncondition is not known ahead of time, e.g. "},
{"api_id": 3764, "api_type": 2, "full_declaration": "RequestMethodsRequestCondition", "qualified_name": "org.springframework.web.reactive.result.condition.RequestMethodsRequestCondition", "short_description": " A logical disjunction (' || ') request condition that matches a request\nagainst a set of  RequestMethods . "},
{"api_id": 3765, "api_type": 3, "full_declaration": "HandlerMethodArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.HandlerMethodArgumentResolver", "short_description": " Strategy to resolve the argument value for a method parameter in the context\nof the current HTTP request. "},
{"api_id": 3766, "api_type": 3, "full_declaration": "RequestMappingInfo.Builder", "qualified_name": "org.springframework.web.reactive.result.method.RequestMappingInfo.Builder", "short_description": " Defines a builder for creating a RequestMappingInfo. "},
{"api_id": 3767, "api_type": 3, "full_declaration": "SyncHandlerMethodArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.SyncHandlerMethodArgumentResolver", "short_description": " An extension of  HandlerMethodArgumentResolver  for implementations\nthat are synchronous in nature and do not block to resolve values. "},
{"api_id": 3768, "api_type": 2, "full_declaration": "AbstractHandlerMethodMapping", "qualified_name": "org.springframework.web.reactive.result.method.AbstractHandlerMethodMapping", "short_description": " Abstract base class for  HandlerMapping  implementations that define\na mapping between a request and a  HandlerMethod . "},
{"api_id": 3769, "api_type": 2, "full_declaration": "HandlerMethodArgumentResolverSupport", "qualified_name": "org.springframework.web.reactive.result.method.HandlerMethodArgumentResolverSupport", "short_description": " Base class for  HandlerMethodArgumentResolver  implementations with access to a ReactiveAdapterRegistry  and methods to check for method parameter support. "},
{"api_id": 3770, "api_type": 2, "full_declaration": "InvocableHandlerMethod", "qualified_name": "org.springframework.web.reactive.result.method.InvocableHandlerMethod", "short_description": " Extension of  HandlerMethod  that invokes the underlying method with\nargument values resolved from the current HTTP request through a list of HandlerMethodArgumentResolver . "},
{"api_id": 3771, "api_type": 2, "full_declaration": "RequestMappingInfo", "qualified_name": "org.springframework.web.reactive.result.method.RequestMappingInfo", "short_description": " Request mapping information. "},
{"api_id": 3772, "api_type": 2, "full_declaration": "RequestMappingInfo.BuilderConfiguration", "qualified_name": "org.springframework.web.reactive.result.method.RequestMappingInfo.BuilderConfiguration", "short_description": " Container for configuration options used for request mapping purposes. "},
{"api_id": 3773, "api_type": 2, "full_declaration": "RequestMappingInfoHandlerMapping", "qualified_name": "org.springframework.web.reactive.result.method.RequestMappingInfoHandlerMapping", "short_description": " Abstract base class for classes for which  RequestMappingInfo  defines\nthe mapping between a request and a handler method. "},
{"api_id": 3774, "api_type": 2, "full_declaration": "SyncInvocableHandlerMethod", "qualified_name": "org.springframework.web.reactive.result.method.SyncInvocableHandlerMethod", "short_description": " Extension of  HandlerMethod  that invokes the underlying method via InvocableHandlerMethod  but uses sync argument resolvers only and\nthus can return directly a  HandlerResult  with no async wrappers. "},
{"api_id": 3775, "api_type": 2, "full_declaration": "AbstractMessageReaderArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.annotation.AbstractMessageReaderArgumentResolver", "short_description": " Abstract base class for argument resolvers that resolve method arguments\nby reading the request body with an  HttpMessageReader . "},
{"api_id": 3776, "api_type": 2, "full_declaration": "AbstractMessageWriterResultHandler", "qualified_name": "org.springframework.web.reactive.result.method.annotation.AbstractMessageWriterResultHandler", "short_description": " Abstract base class for result handlers that handle return values by writing\nto the response with  HttpMessageWriter . "},
{"api_id": 3777, "api_type": 2, "full_declaration": "AbstractNamedValueArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.annotation.AbstractNamedValueArgumentResolver", "short_description": " Abstract base class for resolving method arguments from a named value. "},
{"api_id": 3778, "api_type": 2, "full_declaration": "AbstractNamedValueArgumentResolver.NamedValueInfo", "qualified_name": "org.springframework.web.reactive.result.method.annotation.AbstractNamedValueArgumentResolver.NamedValueInfo", "short_description": " Represents the information about a named value, including name, whether\nit's required and a default value. "},
{"api_id": 3779, "api_type": 2, "full_declaration": "AbstractNamedValueSyncArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.annotation.AbstractNamedValueSyncArgumentResolver", "short_description": " An extension of  AbstractNamedValueArgumentResolver  for named value\nresolvers that are synchronous and yet non-blocking. "},
{"api_id": 3780, "api_type": 2, "full_declaration": "ArgumentResolverConfigurer", "qualified_name": "org.springframework.web.reactive.result.method.annotation.ArgumentResolverConfigurer", "short_description": " Helps to configure resolvers for Controller method arguments. "},
{"api_id": 3781, "api_type": 2, "full_declaration": "ContinuationHandlerMethodArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.annotation.ContinuationHandlerMethodArgumentResolver", "short_description": " No-op resolver for method arguments of type  Continuation . "},
{"api_id": 3782, "api_type": 2, "full_declaration": "CookieValueMethodArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.annotation.CookieValueMethodArgumentResolver", "short_description": " Resolve method arguments annotated with  @CookieValue . "},
{"api_id": 3783, "api_type": 2, "full_declaration": "ErrorsMethodArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.annotation.ErrorsMethodArgumentResolver", "short_description": " Resolve  Errors  or  BindingResult  method arguments. "},
{"api_id": 3784, "api_type": 2, "full_declaration": "ExpressionValueMethodArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.annotation.ExpressionValueMethodArgumentResolver", "short_description": " Resolves method arguments annotated with  @Value . "},
{"api_id": 3785, "api_type": 2, "full_declaration": "HttpEntityMethodArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.annotation.HttpEntityMethodArgumentResolver", "short_description": " Resolves method arguments of type  HttpEntity  or  RequestEntity by reading the body of the request through a compatible HttpMessageReader . "},
{"api_id": 3786, "api_type": 2, "full_declaration": "MatrixVariableMapMethodArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.annotation.MatrixVariableMapMethodArgumentResolver", "short_description": " Resolves arguments of type  Map  annotated with  @MatrixVariable where the annotation does not specify a name. "},
{"api_id": 3787, "api_type": 2, "full_declaration": "MatrixVariableMethodArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.annotation.MatrixVariableMethodArgumentResolver", "short_description": " Resolves arguments annotated with  @MatrixVariable . "},
{"api_id": 3788, "api_type": 2, "full_declaration": "ModelAttributeMethodArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.annotation.ModelAttributeMethodArgumentResolver", "short_description": " Resolve  @ModelAttribute  annotated method arguments. "},
{"api_id": 3789, "api_type": 2, "full_declaration": "ModelMethodArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.annotation.ModelMethodArgumentResolver", "short_description": " Resolver for a controller method argument of type  Model  that can\nalso be resolved as a  Map . "},
{"api_id": 3790, "api_type": 2, "full_declaration": "PathVariableMapMethodArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.annotation.PathVariableMapMethodArgumentResolver", "short_description": " Resolver for  Map  method arguments also annotated with @PathVariable  where the annotation does not specify a\npath variable name. "},
{"api_id": 3791, "api_type": 2, "full_declaration": "PathVariableMethodArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.annotation.PathVariableMethodArgumentResolver", "short_description": " Resolves method arguments annotated with @ PathVariable . "},
{"api_id": 3792, "api_type": 2, "full_declaration": "PrincipalMethodArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.annotation.PrincipalMethodArgumentResolver", "short_description": " Resolves method argument value of type  Principal . "},
{"api_id": 3793, "api_type": 2, "full_declaration": "RequestAttributeMethodArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.annotation.RequestAttributeMethodArgumentResolver", "short_description": " Resolves method arguments annotated with an @ RequestAttribute . "},
{"api_id": 3794, "api_type": 2, "full_declaration": "RequestBodyMethodArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.annotation.RequestBodyMethodArgumentResolver", "short_description": " Resolves method arguments annotated with  @RequestBody  by reading the\nbody of the request through a compatible  HttpMessageReader . "},
{"api_id": 3795, "api_type": 2, "full_declaration": "RequestHeaderMapMethodArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.annotation.RequestHeaderMapMethodArgumentResolver", "short_description": " Resolves  Map  method arguments annotated with  @RequestHeader . "},
{"api_id": 3796, "api_type": 2, "full_declaration": "RequestHeaderMethodArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.annotation.RequestHeaderMethodArgumentResolver", "short_description": " Resolves method arguments annotated with  @RequestHeader  except for Map  arguments. "},
{"api_id": 3797, "api_type": 2, "full_declaration": "RequestMappingHandlerAdapter", "qualified_name": "org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerAdapter", "short_description": " Supports the invocation of @RequestMapping handler methods. "},
{"api_id": 3798, "api_type": 2, "full_declaration": "RequestMappingHandlerMapping", "qualified_name": "org.springframework.web.reactive.result.method.annotation.RequestMappingHandlerMapping", "short_description": " An extension of  RequestMappingInfoHandlerMapping  that creates RequestMappingInfo  instances from class-level and method-level @RequestMapping  annotations. "},
{"api_id": 3799, "api_type": 2, "full_declaration": "RequestParamMapMethodArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.annotation.RequestParamMapMethodArgumentResolver", "short_description": " Resolver for  Map  method arguments annotated with @RequestParam  where the annotation does not specify a\nrequest parameter name. "},
{"api_id": 3800, "api_type": 2, "full_declaration": "RequestParamMethodArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.annotation.RequestParamMethodArgumentResolver", "short_description": " Resolver for method arguments annotated with @ RequestParam  from URI\nquery string parameters. "},
{"api_id": 3801, "api_type": 2, "full_declaration": "RequestPartMethodArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.annotation.RequestPartMethodArgumentResolver", "short_description": " Resolver for  @RequestPart  arguments where the named part is decoded\nmuch like an  @RequestBody  argument but based on the content of an\nindividual part instead. "},
{"api_id": 3802, "api_type": 2, "full_declaration": "ResponseBodyResultHandler", "qualified_name": "org.springframework.web.reactive.result.method.annotation.ResponseBodyResultHandler", "short_description": " HandlerResultHandler  that handles return values from methods annotated\nwith  @ResponseBody  writing to the body of the request or response with\nan  HttpMessageWriter . "},
{"api_id": 3803, "api_type": 2, "full_declaration": "ResponseEntityResultHandler", "qualified_name": "org.springframework.web.reactive.result.method.annotation.ResponseEntityResultHandler", "short_description": " Handles  HttpEntity  and  ResponseEntity  return values. "},
{"api_id": 3804, "api_type": 2, "full_declaration": "ServerWebExchangeMethodArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.annotation.ServerWebExchangeMethodArgumentResolver", "short_description": " Resolves ServerWebExchange-related method argument values of the following types: ServerWebExchange  ServerHttpRequest  ServerHttpResponse  HttpMethod  Locale  TimeZone  ZoneId  UriBuilder  or  UriComponentsBuilder  -- for building URL's\nrelative to the current request "},
{"api_id": 3805, "api_type": 2, "full_declaration": "SessionAttributeMethodArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.annotation.SessionAttributeMethodArgumentResolver", "short_description": " Resolves method arguments annotated with an @ SessionAttribute . "},
{"api_id": 3806, "api_type": 2, "full_declaration": "SessionStatusMethodArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.annotation.SessionStatusMethodArgumentResolver", "short_description": " Resolver for a  SessionStatus  argument obtaining it from the BindingContext . "},
{"api_id": 3807, "api_type": 2, "full_declaration": "WebSessionMethodArgumentResolver", "qualified_name": "org.springframework.web.reactive.result.method.annotation.WebSessionMethodArgumentResolver", "short_description": " Resolves method argument value of type  WebSession . "},
{"api_id": 3808, "api_type": 3, "full_declaration": "Rendering", "qualified_name": "org.springframework.web.reactive.result.view.Rendering", "short_description": " Public API for HTML rendering. "},
{"api_id": 3809, "api_type": 3, "full_declaration": "Rendering.Builder", "qualified_name": "org.springframework.web.reactive.result.view.Rendering.Builder", "short_description": " Defines a builder for  Rendering . "},
{"api_id": 3810, "api_type": 3, "full_declaration": "Rendering.RedirectBuilder", "qualified_name": "org.springframework.web.reactive.result.view.Rendering.RedirectBuilder", "short_description": " Extends  Rendering.Builder  with extra options for redirect scenarios. "},
{"api_id": 3811, "api_type": 3, "full_declaration": "RequestDataValueProcessor", "qualified_name": "org.springframework.web.reactive.result.view.RequestDataValueProcessor", "short_description": " A contract for inspecting and potentially modifying request data values such\nas URL query parameters or form field values before they are rendered by a\nview or before a redirect. "},
{"api_id": 3812, "api_type": 3, "full_declaration": "View", "qualified_name": "org.springframework.web.reactive.result.view.View", "short_description": " Contract to render  HandlerResult  to the HTTP response. "},
{"api_id": 3813, "api_type": 3, "full_declaration": "ViewResolver", "qualified_name": "org.springframework.web.reactive.result.view.ViewResolver", "short_description": " Contract to resolve a view name to a  View  instance. "},
{"api_id": 3814, "api_type": 2, "full_declaration": "AbstractUrlBasedView", "qualified_name": "org.springframework.web.reactive.result.view.AbstractUrlBasedView", "short_description": " Abstract base class for URL-based views. "},
{"api_id": 3815, "api_type": 2, "full_declaration": "AbstractView", "qualified_name": "org.springframework.web.reactive.result.view.AbstractView", "short_description": " Base class for  View  implementations. "},
{"api_id": 3816, "api_type": 2, "full_declaration": "BindStatus", "qualified_name": "org.springframework.web.reactive.result.view.BindStatus", "short_description": " Simple adapter to expose the bind status of a field or object. "},
{"api_id": 3817, "api_type": 2, "full_declaration": "HttpMessageWriterView", "qualified_name": "org.springframework.web.reactive.result.view.HttpMessageWriterView", "short_description": " View  that writes model attribute(s) with an  HttpMessageWriter . "},
{"api_id": 3818, "api_type": 2, "full_declaration": "RedirectView", "qualified_name": "org.springframework.web.reactive.result.view.RedirectView", "short_description": " View that redirects to an absolute or context relative URL. "},
{"api_id": 3819, "api_type": 2, "full_declaration": "RequestContext", "qualified_name": "org.springframework.web.reactive.result.view.RequestContext", "short_description": " Context holder for request-specific state, like the  MessageSource  to\nuse, current locale, binding errors, etc. "},
{"api_id": 3820, "api_type": 2, "full_declaration": "UrlBasedViewResolver", "qualified_name": "org.springframework.web.reactive.result.view.UrlBasedViewResolver", "short_description": " A  ViewResolver  that allows direct resolution of symbolic view names\nto URLs without explicit mapping definitions. "},
{"api_id": 3821, "api_type": 2, "full_declaration": "ViewResolutionResultHandler", "qualified_name": "org.springframework.web.reactive.result.view.ViewResolutionResultHandler", "short_description": " HandlerResultHandler  that encapsulates the view resolution algorithm\nsupporting the following return types: Void  or no value -- default view name String  -- view name unless  @ModelAttribute -annotated View  -- View to render with Model  -- attributes to add to the model Map  -- attributes to add to the model Rendering  -- use case driven API for view resolution @ModelAttribute  -- attribute for the model\nNon-simple value -- attribute for the model "},
{"api_id": 3822, "api_type": 2, "full_declaration": "ViewResolverSupport", "qualified_name": "org.springframework.web.reactive.result.view.ViewResolverSupport", "short_description": " Base class for  ViewResolver  implementations with shared properties. "},
{"api_id": 3823, "api_type": 3, "full_declaration": "FreeMarkerConfig", "qualified_name": "org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfig", "short_description": " Interface to be implemented by objects that configure and manage a\nFreeMarker Configuration object in a web environment. "},
{"api_id": 3824, "api_type": 2, "full_declaration": "FreeMarkerConfigurer", "qualified_name": "org.springframework.web.reactive.result.view.freemarker.FreeMarkerConfigurer", "short_description": " Configures FreeMarker for web usage via the \"configLocation\" and/or\n\"freemarkerSettings\" and/or \"templateLoaderPath\" properties. "},
{"api_id": 3825, "api_type": 2, "full_declaration": "FreeMarkerView", "qualified_name": "org.springframework.web.reactive.result.view.freemarker.FreeMarkerView", "short_description": " A  View  implementation that uses the FreeMarker template engine. "},
{"api_id": 3826, "api_type": 2, "full_declaration": "FreeMarkerViewResolver", "qualified_name": "org.springframework.web.reactive.result.view.freemarker.FreeMarkerViewResolver", "short_description": " A  ViewResolver  for resolving  FreeMarkerView  instances, i.e. "},
{"api_id": 3827, "api_type": 3, "full_declaration": "ScriptTemplateConfig", "qualified_name": "org.springframework.web.reactive.result.view.script.ScriptTemplateConfig", "short_description": " Interface to be implemented by objects that configure and manage a\nJSR-223  ScriptEngine  for automatic lookup in a web environment. "},
{"api_id": 3828, "api_type": 2, "full_declaration": "RenderingContext", "qualified_name": "org.springframework.web.reactive.result.view.script.RenderingContext", "short_description": " Context passed to  ScriptTemplateView  render function in order to make\nthe application context, the locale, the template loader and the url available on\nscripting side. "},
{"api_id": 3829, "api_type": 2, "full_declaration": "ScriptTemplateConfigurer", "qualified_name": "org.springframework.web.reactive.result.view.script.ScriptTemplateConfigurer", "short_description": " An implementation of the Spring WebFlux  ScriptTemplateConfig  for\ncreating a  ScriptEngine  for use in a web application. "},
{"api_id": 3830, "api_type": 2, "full_declaration": "ScriptTemplateView", "qualified_name": "org.springframework.web.reactive.result.view.script.ScriptTemplateView", "short_description": " An  AbstractUrlBasedView  subclass designed to run any template library\nbased on a JSR-223 script engine. "},
{"api_id": 3831, "api_type": 2, "full_declaration": "ScriptTemplateViewResolver", "qualified_name": "org.springframework.web.reactive.result.view.script.ScriptTemplateViewResolver", "short_description": " Convenience subclass of  UrlBasedViewResolver  that supports ScriptTemplateView  and custom subclasses of it. "},
{"api_id": 3832, "api_type": 3, "full_declaration": "WebSocketHandler", "qualified_name": "org.springframework.web.reactive.socket.WebSocketHandler", "short_description": " Handler for a WebSocket session. "},
{"api_id": 3833, "api_type": 3, "full_declaration": "WebSocketSession", "qualified_name": "org.springframework.web.reactive.socket.WebSocketSession", "short_description": " Represents a WebSocket session. "},
{"api_id": 3834, "api_type": 2, "full_declaration": "CloseStatus", "qualified_name": "org.springframework.web.reactive.socket.CloseStatus", "short_description": " Representation of WebSocket \"close\" status codes and reasons. "},
{"api_id": 3835, "api_type": 2, "full_declaration": "HandshakeInfo", "qualified_name": "org.springframework.web.reactive.socket.HandshakeInfo", "short_description": " Simple container of information related to the handshake request that started\nthe  WebSocketSession  session. "},
{"api_id": 3836, "api_type": 2, "full_declaration": "WebSocketMessage", "qualified_name": "org.springframework.web.reactive.socket.WebSocketMessage", "short_description": " Representation of a WebSocket message. "},
{"api_id": 3837, "api_type": 8, "full_declaration": "WebSocketMessage.Type", "qualified_name": "org.springframework.web.reactive.socket.WebSocketMessage.Type", "short_description": " WebSocket message types. "},
{"api_id": 3838, "api_type": 2, "full_declaration": "AbstractListenerWebSocketSession", "qualified_name": "org.springframework.web.reactive.socket.adapter.AbstractListenerWebSocketSession", "short_description": " Base class for  WebSocketSession  implementations that bridge between\nevent-listener WebSocket APIs (e.g. "},
{"api_id": 3839, "api_type": 2, "full_declaration": "AbstractWebSocketSession", "qualified_name": "org.springframework.web.reactive.socket.adapter.AbstractWebSocketSession", "short_description": " Convenient base class for  WebSocketSession  implementations that\nholds common fields and exposes accessors. "},
{"api_id": 3840, "api_type": 2, "full_declaration": "JettyWebSocketHandlerAdapter", "qualified_name": "org.springframework.web.reactive.socket.adapter.JettyWebSocketHandlerAdapter", "short_description": " Jetty  @WebSocket  handler that delegates events to a\nreactive  WebSocketHandler  and its session. "},
{"api_id": 3841, "api_type": 2, "full_declaration": "JettyWebSocketSession", "qualified_name": "org.springframework.web.reactive.socket.adapter.JettyWebSocketSession", "short_description": " Spring  WebSocketSession  implementation that adapts to a Jetty\nWebSocket  Session . "},
{"api_id": 3842, "api_type": 2, "full_declaration": "NettyWebSocketSessionSupport", "qualified_name": "org.springframework.web.reactive.socket.adapter.NettyWebSocketSessionSupport", "short_description": " Base class for Netty-based  WebSocketSession  adapters that provides\nconvenience methods to convert Netty  WebSocketFrames  to and from WebSocketMessages . "},
{"api_id": 3843, "api_type": 2, "full_declaration": "ReactorNettyWebSocketSession", "qualified_name": "org.springframework.web.reactive.socket.adapter.ReactorNettyWebSocketSession", "short_description": " WebSocketSession  implementation for use with the Reactor Netty's NettyInbound  and  NettyOutbound . "},
{"api_id": 3844, "api_type": 2, "full_declaration": "ReactorNettyWebSocketSession.WebSocketConnection", "qualified_name": "org.springframework.web.reactive.socket.adapter.ReactorNettyWebSocketSession.WebSocketConnection", "short_description": " Simple container for  NettyInbound  and  NettyOutbound . "},
{"api_id": 3845, "api_type": 2, "full_declaration": "StandardWebSocketHandlerAdapter", "qualified_name": "org.springframework.web.reactive.socket.adapter.StandardWebSocketHandlerAdapter", "short_description": " Adapter for Java WebSocket API (JSR-356) that delegates events to a reactive WebSocketHandler  and its session. "},
{"api_id": 3846, "api_type": 2, "full_declaration": "StandardWebSocketSession", "qualified_name": "org.springframework.web.reactive.socket.adapter.StandardWebSocketSession", "short_description": " Spring  WebSocketSession  adapter for a standard Java (JSR 356) Session . "},
{"api_id": 3847, "api_type": 2, "full_declaration": "TomcatWebSocketSession", "qualified_name": "org.springframework.web.reactive.socket.adapter.TomcatWebSocketSession", "short_description": " Spring  WebSocketSession  adapter for Tomcat's Session . "},
{"api_id": 3848, "api_type": 2, "full_declaration": "UndertowWebSocketHandlerAdapter", "qualified_name": "org.springframework.web.reactive.socket.adapter.UndertowWebSocketHandlerAdapter", "short_description": " Undertow  WebSocketConnectionCallback  implementation that adapts and\ndelegates to a Spring  WebSocketHandler . "},
{"api_id": 3849, "api_type": 2, "full_declaration": "UndertowWebSocketSession", "qualified_name": "org.springframework.web.reactive.socket.adapter.UndertowWebSocketSession", "short_description": " Spring  WebSocketSession  implementation that adapts to an Undertow WebSocketChannel . "},
{"api_id": 3850, "api_type": 3, "full_declaration": "WebSocketClient", "qualified_name": "org.springframework.web.reactive.socket.client.WebSocketClient", "short_description": " Contract for reactive-style handling of a WebSocket session. "},
{"api_id": 3851, "api_type": 2, "full_declaration": "JettyWebSocketClient", "qualified_name": "org.springframework.web.reactive.socket.client.JettyWebSocketClient", "short_description": " A  WebSocketClient  implementation for use with Jetty WebSocketClient . "},
{"api_id": 3852, "api_type": 2, "full_declaration": "ReactorNettyWebSocketClient", "qualified_name": "org.springframework.web.reactive.socket.client.ReactorNettyWebSocketClient", "short_description": " WebSocketClient  implementation for use with Reactor Netty. "},
{"api_id": 3853, "api_type": 2, "full_declaration": "StandardWebSocketClient", "qualified_name": "org.springframework.web.reactive.socket.client.StandardWebSocketClient", "short_description": " WebSocketClient  implementation for use with the Java WebSocket API. "},
{"api_id": 3854, "api_type": 2, "full_declaration": "TomcatWebSocketClient", "qualified_name": "org.springframework.web.reactive.socket.client.TomcatWebSocketClient", "short_description": " WebSocketClient  implementation for use with the Java WebSocket API. "},
{"api_id": 3855, "api_type": 2, "full_declaration": "UndertowWebSocketClient", "qualified_name": "org.springframework.web.reactive.socket.client.UndertowWebSocketClient", "short_description": " Undertow based implementation of  WebSocketClient . "},
{"api_id": 3856, "api_type": 3, "full_declaration": "RequestUpgradeStrategy", "qualified_name": "org.springframework.web.reactive.socket.server.RequestUpgradeStrategy", "short_description": " A strategy for upgrading an HTTP request to a WebSocket session depending\non the underlying network runtime. "},
{"api_id": 3857, "api_type": 3, "full_declaration": "WebSocketService", "qualified_name": "org.springframework.web.reactive.socket.server.WebSocketService", "short_description": " A service to delegate WebSocket-related HTTP requests to. "},
{"api_id": 3858, "api_type": 2, "full_declaration": "HandshakeWebSocketService", "qualified_name": "org.springframework.web.reactive.socket.server.support.HandshakeWebSocketService", "short_description": " WebSocketService  implementation that handles a WebSocket HTTP\nhandshake request by delegating to a  RequestUpgradeStrategy  which\nis either auto-detected (no-arg constructor) from the classpath but can\nalso be explicitly configured. "},
{"api_id": 3859, "api_type": 2, "full_declaration": "WebSocketHandlerAdapter", "qualified_name": "org.springframework.web.reactive.socket.server.support.WebSocketHandlerAdapter", "short_description": " HandlerAdapter  that allows DispatcherHandler  to support\nhandlers of type  WebSocketHandler  with such handlers mapped to\nURL patterns via SimpleUrlHandlerMapping . "},
{"api_id": 3860, "api_type": 2, "full_declaration": "JettyRequestUpgradeStrategy", "qualified_name": "org.springframework.web.reactive.socket.server.upgrade.JettyRequestUpgradeStrategy", "short_description": " A  RequestUpgradeStrategy  for use with Jetty. "},
{"api_id": 3861, "api_type": 2, "full_declaration": "ReactorNettyRequestUpgradeStrategy", "qualified_name": "org.springframework.web.reactive.socket.server.upgrade.ReactorNettyRequestUpgradeStrategy", "short_description": " A  RequestUpgradeStrategy  for use with Reactor Netty. "},
{"api_id": 3862, "api_type": 2, "full_declaration": "TomcatRequestUpgradeStrategy", "qualified_name": "org.springframework.web.reactive.socket.server.upgrade.TomcatRequestUpgradeStrategy", "short_description": " A  RequestUpgradeStrategy  for use with Tomcat. "},
{"api_id": 3863, "api_type": 2, "full_declaration": "UndertowRequestUpgradeStrategy", "qualified_name": "org.springframework.web.reactive.socket.server.upgrade.UndertowRequestUpgradeStrategy", "short_description": " A  RequestUpgradeStrategy  for use with Undertow. "},
{"api_id": 3864, "api_type": 3, "full_declaration": "ServerWebExchange", "qualified_name": "org.springframework.web.server.ServerWebExchange", "short_description": " Contract for an HTTP request-response interaction. "},
{"api_id": 3865, "api_type": 3, "full_declaration": "ServerWebExchange.Builder", "qualified_name": "org.springframework.web.server.ServerWebExchange.Builder", "short_description": " Builder for mutating an existing  ServerWebExchange . "},
{"api_id": 3866, "api_type": 3, "full_declaration": "WebExceptionHandler", "qualified_name": "org.springframework.web.server.WebExceptionHandler", "short_description": " Contract for handling exceptions during web server exchange processing. "},
{"api_id": 3867, "api_type": 3, "full_declaration": "WebFilter", "qualified_name": "org.springframework.web.server.WebFilter", "short_description": " Contract for interception-style, chained processing of Web requests that may\nbe used to implement cross-cutting, application-agnostic requirements such\nas security, timeouts, and others. "},
{"api_id": 3868, "api_type": 3, "full_declaration": "WebFilterChain", "qualified_name": "org.springframework.web.server.WebFilterChain", "short_description": " Contract to allow a  WebFilter  to delegate to the next in the chain. "},
{"api_id": 3869, "api_type": 3, "full_declaration": "WebHandler", "qualified_name": "org.springframework.web.server.WebHandler", "short_description": " Contract to handle a web request. "},
{"api_id": 3870, "api_type": 3, "full_declaration": "WebSession", "qualified_name": "org.springframework.web.server.WebSession", "short_description": " Main contract for using a server-side session that provides access to session\nattributes across HTTP requests. "},
{"api_id": 3871, "api_type": 2, "full_declaration": "ServerWebExchangeDecorator", "qualified_name": "org.springframework.web.server.ServerWebExchangeDecorator", "short_description": " A convenient base class for classes that need to wrap another ServerWebExchange . "},
{"api_id": 3872, "api_type": 4, "full_declaration": "MediaTypeNotSupportedStatusException", "qualified_name": "org.springframework.web.server.MediaTypeNotSupportedStatusException", "short_description": "Deprecated in favor of  UnsupportedMediaTypeStatusException ,\nwith this class never thrown by Spring code and to be removed in 5.3 "},
{"api_id": 3873, "api_type": 4, "full_declaration": "MethodNotAllowedException", "qualified_name": "org.springframework.web.server.MethodNotAllowedException", "short_description": " Exception for errors that fit response status 405 (method not allowed). "},
{"api_id": 3874, "api_type": 4, "full_declaration": "NotAcceptableStatusException", "qualified_name": "org.springframework.web.server.NotAcceptableStatusException", "short_description": " Exception for errors that fit response status 406 (not acceptable). "},
{"api_id": 3875, "api_type": 4, "full_declaration": "ResponseStatusException", "qualified_name": "org.springframework.web.server.ResponseStatusException", "short_description": " Base class for exceptions associated with specific HTTP response status codes. "},
{"api_id": 3876, "api_type": 4, "full_declaration": "ServerErrorException", "qualified_name": "org.springframework.web.server.ServerErrorException", "short_description": " Exception for an  HttpStatus.INTERNAL_SERVER_ERROR  that exposes extra\ninformation about a controller method that failed, or a controller method\nargument that could not be resolved. "},
{"api_id": 3877, "api_type": 4, "full_declaration": "ServerWebInputException", "qualified_name": "org.springframework.web.server.ServerWebInputException", "short_description": " Exception for errors that fit response status 400 (bad request) for use in\nSpring Web applications. "},
{"api_id": 3878, "api_type": 4, "full_declaration": "UnsupportedMediaTypeStatusException", "qualified_name": "org.springframework.web.server.UnsupportedMediaTypeStatusException", "short_description": " Exception for errors that fit response status 415 (unsupported media type). "},
{"api_id": 3879, "api_type": 2, "full_declaration": "AbstractReactiveWebInitializer", "qualified_name": "org.springframework.web.server.adapter.AbstractReactiveWebInitializer", "short_description": " Base class for a  WebApplicationInitializer that installs a Spring Reactive Web Application on a Servlet container. "},
{"api_id": 3880, "api_type": 2, "full_declaration": "DefaultServerWebExchange", "qualified_name": "org.springframework.web.server.adapter.DefaultServerWebExchange", "short_description": " Default implementation of  ServerWebExchange . "},
{"api_id": 3881, "api_type": 2, "full_declaration": "ForwardedHeaderTransformer", "qualified_name": "org.springframework.web.server.adapter.ForwardedHeaderTransformer", "short_description": " Extract values from \"Forwarded\" and \"X-Forwarded-*\" headers to override\nthe request URI (i.e. "},
{"api_id": 3882, "api_type": 2, "full_declaration": "HttpWebHandlerAdapter", "qualified_name": "org.springframework.web.server.adapter.HttpWebHandlerAdapter", "short_description": " Default adapter of  WebHandler  to the  HttpHandler  contract. "},
{"api_id": 3883, "api_type": 2, "full_declaration": "WebHttpHandlerBuilder", "qualified_name": "org.springframework.web.server.adapter.WebHttpHandlerBuilder", "short_description": " This builder has two purposes: "},
{"api_id": 3884, "api_type": 2, "full_declaration": "DefaultWebFilterChain", "qualified_name": "org.springframework.web.server.handler.DefaultWebFilterChain", "short_description": " Default implementation of  WebFilterChain . "},
{"api_id": 3885, "api_type": 2, "full_declaration": "ExceptionHandlingWebHandler", "qualified_name": "org.springframework.web.server.handler.ExceptionHandlingWebHandler", "short_description": " WebHandler decorator that invokes one or more  WebExceptionHandlers after the delegate  WebHandler . "},
{"api_id": 3886, "api_type": 2, "full_declaration": "FilteringWebHandler", "qualified_name": "org.springframework.web.server.handler.FilteringWebHandler", "short_description": " WebHandlerDecorator  that invokes a chain of  WebFilters before invoking the delegate  WebHandler . "},
{"api_id": 3887, "api_type": 2, "full_declaration": "ResponseStatusExceptionHandler", "qualified_name": "org.springframework.web.server.handler.ResponseStatusExceptionHandler", "short_description": " Handle  ResponseStatusException  by setting the response status. "},
{"api_id": 3888, "api_type": 2, "full_declaration": "WebHandlerDecorator", "qualified_name": "org.springframework.web.server.handler.WebHandlerDecorator", "short_description": " WebHandler  that decorates and delegates to another  WebHandler . "},
{"api_id": 3889, "api_type": 3, "full_declaration": "LocaleContextResolver", "qualified_name": "org.springframework.web.server.i18n.LocaleContextResolver", "short_description": " Interface for web-based locale context resolution strategies that allows\nfor both locale context resolution via the request and locale context modification\nvia the HTTP exchange. "},
{"api_id": 3890, "api_type": 2, "full_declaration": "AcceptHeaderLocaleContextResolver", "qualified_name": "org.springframework.web.server.i18n.AcceptHeaderLocaleContextResolver", "short_description": " LocaleContextResolver  implementation that simply uses the primary locale\nspecified in the \"Accept-Language\" header of the HTTP request (that is,\nthe locale sent by the client browser, normally that of the client's OS). "},
{"api_id": 3891, "api_type": 2, "full_declaration": "FixedLocaleContextResolver", "qualified_name": "org.springframework.web.server.i18n.FixedLocaleContextResolver", "short_description": " LocaleContextResolver  implementation that always returns a fixed locale\nand optionally time zone. "},
{"api_id": 3892, "api_type": 3, "full_declaration": "WebSessionIdResolver", "qualified_name": "org.springframework.web.server.session.WebSessionIdResolver", "short_description": " Contract for session id resolution strategies. "},
{"api_id": 3893, "api_type": 3, "full_declaration": "WebSessionManager", "qualified_name": "org.springframework.web.server.session.WebSessionManager", "short_description": " Main class for access to the  WebSession  for an HTTP request. "},
{"api_id": 3894, "api_type": 3, "full_declaration": "WebSessionStore", "qualified_name": "org.springframework.web.server.session.WebSessionStore", "short_description": " Strategy for  WebSession  persistence. "},
{"api_id": 3895, "api_type": 2, "full_declaration": "CookieWebSessionIdResolver", "qualified_name": "org.springframework.web.server.session.CookieWebSessionIdResolver", "short_description": " Cookie-based  WebSessionIdResolver . "},
{"api_id": 3896, "api_type": 2, "full_declaration": "DefaultWebSessionManager", "qualified_name": "org.springframework.web.server.session.DefaultWebSessionManager", "short_description": " Default implementation of  WebSessionManager  delegating to a WebSessionIdResolver  for session id resolution and to a WebSessionStore . "},
{"api_id": 3897, "api_type": 2, "full_declaration": "HeaderWebSessionIdResolver", "qualified_name": "org.springframework.web.server.session.HeaderWebSessionIdResolver", "short_description": " Request and response header-based  WebSessionIdResolver . "},
{"api_id": 3898, "api_type": 2, "full_declaration": "InMemoryWebSessionStore", "qualified_name": "org.springframework.web.server.session.InMemoryWebSessionStore", "short_description": " Simple Map-based storage for  WebSession  instances. "},
{"api_id": 3899, "api_type": 3, "full_declaration": "AsyncHandlerInterceptor", "qualified_name": "org.springframework.web.servlet.AsyncHandlerInterceptor", "short_description": " Extends  HandlerInterceptor  with a callback method invoked after the\nstart of asynchronous request handling. "},
{"api_id": 3900, "api_type": 3, "full_declaration": "FlashMapManager", "qualified_name": "org.springframework.web.servlet.FlashMapManager", "short_description": " A strategy interface for retrieving and saving FlashMap instances. "},
{"api_id": 3901, "api_type": 3, "full_declaration": "HandlerAdapter", "qualified_name": "org.springframework.web.servlet.HandlerAdapter", "short_description": " MVC framework SPI, allowing parameterization of the core MVC workflow. "},
{"api_id": 3902, "api_type": 3, "full_declaration": "HandlerExceptionResolver", "qualified_name": "org.springframework.web.servlet.HandlerExceptionResolver", "short_description": " Interface to be implemented by objects that can resolve exceptions thrown during\nhandler mapping or execution, in the typical case to error views. "},
{"api_id": 3903, "api_type": 3, "full_declaration": "HandlerInterceptor", "qualified_name": "org.springframework.web.servlet.HandlerInterceptor", "short_description": " Workflow interface that allows for customized handler execution chains. "},
{"api_id": 3904, "api_type": 3, "full_declaration": "HandlerMapping", "qualified_name": "org.springframework.web.servlet.HandlerMapping", "short_description": " Interface to be implemented by objects that define a mapping between\nrequests and handler objects. "},
{"api_id": 3905, "api_type": 3, "full_declaration": "LocaleContextResolver", "qualified_name": "org.springframework.web.servlet.LocaleContextResolver", "short_description": " Extension of  LocaleResolver , adding support for a rich locale context\n(potentially including locale and time zone information). "},
{"api_id": 3906, "api_type": 3, "full_declaration": "LocaleResolver", "qualified_name": "org.springframework.web.servlet.LocaleResolver", "short_description": " Interface for web-based locale resolution strategies that allows for\nboth locale resolution via the request and locale modification via\nrequest and response. "},
{"api_id": 3907, "api_type": 3, "full_declaration": "RequestToViewNameTranslator", "qualified_name": "org.springframework.web.servlet.RequestToViewNameTranslator", "short_description": " Strategy interface for translating an incoming HttpServletRequest  into a\nlogical view name when no view name is explicitly supplied. "},
{"api_id": 3908, "api_type": 3, "full_declaration": "SmartView", "qualified_name": "org.springframework.web.servlet.SmartView", "short_description": " Provides additional information about a View such as whether it\nperforms redirects. "},
{"api_id": 3909, "api_type": 3, "full_declaration": "ThemeResolver", "qualified_name": "org.springframework.web.servlet.ThemeResolver", "short_description": " Interface for web-based theme resolution strategies that allows for\nboth theme resolution via the request and theme modification via\nrequest and response. "},
{"api_id": 3910, "api_type": 3, "full_declaration": "View", "qualified_name": "org.springframework.web.servlet.View", "short_description": " MVC View for a web interaction. "},
{"api_id": 3911, "api_type": 3, "full_declaration": "ViewResolver", "qualified_name": "org.springframework.web.servlet.ViewResolver", "short_description": " Interface to be implemented by objects that can resolve views by name. "},
{"api_id": 3912, "api_type": 2, "full_declaration": "DispatcherServlet", "qualified_name": "org.springframework.web.servlet.DispatcherServlet", "short_description": " Central dispatcher for HTTP request handlers/controllers, e.g. "},
{"api_id": 3913, "api_type": 2, "full_declaration": "FlashMap", "qualified_name": "org.springframework.web.servlet.FlashMap", "short_description": " A FlashMap provides a way for one request to store attributes intended for\nuse in another. "},
{"api_id": 3914, "api_type": 2, "full_declaration": "FrameworkServlet", "qualified_name": "org.springframework.web.servlet.FrameworkServlet", "short_description": " Base servlet for Spring's web framework. "},
{"api_id": 3915, "api_type": 2, "full_declaration": "HandlerExecutionChain", "qualified_name": "org.springframework.web.servlet.HandlerExecutionChain", "short_description": " Handler execution chain, consisting of handler object and any handler interceptors. "},
{"api_id": 3916, "api_type": 2, "full_declaration": "HttpServletBean", "qualified_name": "org.springframework.web.servlet.HttpServletBean", "short_description": " Simple extension of  HttpServlet  which treats\nits config parameters ( init-param  entries within the servlet  tag in  web.xml ) as bean properties. "},
{"api_id": 3917, "api_type": 2, "full_declaration": "ModelAndView", "qualified_name": "org.springframework.web.servlet.ModelAndView", "short_description": " Holder for both Model and View in the web MVC framework. "},
{"api_id": 3918, "api_type": 4, "full_declaration": "ModelAndViewDefiningException", "qualified_name": "org.springframework.web.servlet.ModelAndViewDefiningException", "short_description": " Exception to be thrown on error conditions that should forward\nto a specific view with a specific model. "},
{"api_id": 3919, "api_type": 4, "full_declaration": "NoHandlerFoundException", "qualified_name": "org.springframework.web.servlet.NoHandlerFoundException", "short_description": " By default when the DispatcherServlet can't find a handler for a request it\nsends a 404 response. "},
{"api_id": 3920, "api_type": 2, "full_declaration": "CorsBeanDefinitionParser", "qualified_name": "org.springframework.web.servlet.config.CorsBeanDefinitionParser", "short_description": " BeanDefinitionParser  that parses a cors  element in order to set the CORS configuration in the various\n{AbstractHandlerMapping} beans created by  AnnotationDrivenBeanDefinitionParser , ResourcesBeanDefinitionParser  and  ViewControllerBeanDefinitionParser . "},
{"api_id": 3921, "api_type": 2, "full_declaration": "FreeMarkerConfigurerBeanDefinitionParser", "qualified_name": "org.springframework.web.servlet.config.FreeMarkerConfigurerBeanDefinitionParser", "short_description": " Parse the  <mvc:freemarker-configurer>  MVC namespace element and\nregister  FreeMarkerConfigurer  bean. "},
{"api_id": 3922, "api_type": 2, "full_declaration": "GroovyMarkupConfigurerBeanDefinitionParser", "qualified_name": "org.springframework.web.servlet.config.GroovyMarkupConfigurerBeanDefinitionParser", "short_description": " Parse the  <mvc:groovy-configurer>  MVC namespace element and register a GroovyConfigurer  bean. "},
{"api_id": 3923, "api_type": 2, "full_declaration": "MvcNamespaceHandler", "qualified_name": "org.springframework.web.servlet.config.MvcNamespaceHandler", "short_description": " NamespaceHandler  for Spring MVC configuration namespace. "},
{"api_id": 3924, "api_type": 2, "full_declaration": "MvcNamespaceUtils", "qualified_name": "org.springframework.web.servlet.config.MvcNamespaceUtils", "short_description": " Convenience methods for use in MVC namespace BeanDefinitionParsers. "},
{"api_id": 3925, "api_type": 2, "full_declaration": "ScriptTemplateConfigurerBeanDefinitionParser", "qualified_name": "org.springframework.web.servlet.config.ScriptTemplateConfigurerBeanDefinitionParser", "short_description": " Parse the  <mvc:script-template-configurer>  MVC namespace element and\nregister a  ScriptTemplateConfigurer  bean. "},
{"api_id": 3926, "api_type": 2, "full_declaration": "TilesConfigurerBeanDefinitionParser", "qualified_name": "org.springframework.web.servlet.config.TilesConfigurerBeanDefinitionParser", "short_description": " Parse the  <mvc:tiles-configurer>  MVC namespace element and register\na corresponding  TilesConfigurer  bean. "},
{"api_id": 3927, "api_type": 2, "full_declaration": "ViewResolversBeanDefinitionParser", "qualified_name": "org.springframework.web.servlet.config.ViewResolversBeanDefinitionParser", "short_description": " Parse the  view-resolvers  MVC namespace element and register ViewResolver  bean definitions. "},
{"api_id": 3928, "api_type": 3, "full_declaration": "WebMvcConfigurer", "qualified_name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurer", "short_description": " Defines callback methods to customize the Java-based configuration for\nSpring MVC enabled via  @EnableWebMvc . "},
{"api_id": 3929, "api_type": 2, "full_declaration": "AsyncSupportConfigurer", "qualified_name": "org.springframework.web.servlet.config.annotation.AsyncSupportConfigurer", "short_description": " Helps with configuring options for asynchronous request processing. "},
{"api_id": 3930, "api_type": 2, "full_declaration": "ContentNegotiationConfigurer", "qualified_name": "org.springframework.web.servlet.config.annotation.ContentNegotiationConfigurer", "short_description": " Creates a  ContentNegotiationManager  and configures it with\none or more  ContentNegotiationStrategy  instances. "},
{"api_id": 3931, "api_type": 2, "full_declaration": "CorsRegistration", "qualified_name": "org.springframework.web.servlet.config.annotation.CorsRegistration", "short_description": " Assists with the creation of a  CorsConfiguration  instance for a given\nURL path pattern. "},
{"api_id": 3932, "api_type": 2, "full_declaration": "CorsRegistry", "qualified_name": "org.springframework.web.servlet.config.annotation.CorsRegistry", "short_description": " Assists with the registration of global, URL pattern based CorsConfiguration  mappings. "},
{"api_id": 3933, "api_type": 2, "full_declaration": "DefaultServletHandlerConfigurer", "qualified_name": "org.springframework.web.servlet.config.annotation.DefaultServletHandlerConfigurer", "short_description": " Configures a request handler for serving static resources by forwarding\nthe request to the Servlet container's \"default\" Servlet. "},
{"api_id": 3934, "api_type": 2, "full_declaration": "DelegatingWebMvcConfiguration", "qualified_name": "org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration", "short_description": " A subclass of  WebMvcConfigurationSupport  that detects and delegates\nto all beans of type  WebMvcConfigurer  allowing them to customize the\nconfiguration provided by  WebMvcConfigurationSupport . "},
{"api_id": 3935, "api_type": 2, "full_declaration": "InterceptorRegistration", "qualified_name": "org.springframework.web.servlet.config.annotation.InterceptorRegistration", "short_description": " Assists with the creation of a  MappedInterceptor . "},
{"api_id": 3936, "api_type": 2, "full_declaration": "InterceptorRegistry", "qualified_name": "org.springframework.web.servlet.config.annotation.InterceptorRegistry", "short_description": " Helps with configuring a list of mapped interceptors. "},
{"api_id": 3937, "api_type": 2, "full_declaration": "PathMatchConfigurer", "qualified_name": "org.springframework.web.servlet.config.annotation.PathMatchConfigurer", "short_description": " Configure path matching options. "},
{"api_id": 3938, "api_type": 2, "full_declaration": "RedirectViewControllerRegistration", "qualified_name": "org.springframework.web.servlet.config.annotation.RedirectViewControllerRegistration", "short_description": " Assist with the registration of a single redirect view controller. "},
{"api_id": 3939, "api_type": 2, "full_declaration": "ResourceChainRegistration", "qualified_name": "org.springframework.web.servlet.config.annotation.ResourceChainRegistration", "short_description": " Assists with the registration of resource resolvers and transformers. "},
{"api_id": 3940, "api_type": 2, "full_declaration": "ResourceHandlerRegistration", "qualified_name": "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistration", "short_description": " Encapsulates information required to create a resource handler. "},
{"api_id": 3941, "api_type": 2, "full_declaration": "ResourceHandlerRegistry", "qualified_name": "org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry", "short_description": " Stores registrations of resource handlers for serving static resources such\nas images, css files and others through Spring MVC including setting cache\nheaders optimized for efficient loading in a web browser. "},
{"api_id": 3942, "api_type": 2, "full_declaration": "UrlBasedViewResolverRegistration", "qualified_name": "org.springframework.web.servlet.config.annotation.UrlBasedViewResolverRegistration", "short_description": " Assist with configuring a  UrlBasedViewResolver . "},
{"api_id": 3943, "api_type": 2, "full_declaration": "ViewControllerRegistration", "qualified_name": "org.springframework.web.servlet.config.annotation.ViewControllerRegistration", "short_description": " Assist with the registration of a single view controller. "},
{"api_id": 3944, "api_type": 2, "full_declaration": "ViewControllerRegistry", "qualified_name": "org.springframework.web.servlet.config.annotation.ViewControllerRegistry", "short_description": " Assists with the registration of simple automated controllers pre-configured\nwith status code and/or a view. "},
{"api_id": 3945, "api_type": 2, "full_declaration": "ViewResolverRegistry", "qualified_name": "org.springframework.web.servlet.config.annotation.ViewResolverRegistry", "short_description": " Assist with the configuration of a chain of ViewResolver  instances. "},
{"api_id": 3946, "api_type": 2, "full_declaration": "WebMvcConfigurationSupport", "qualified_name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport", "short_description": " This is the main class providing the configuration behind the MVC Java config. "},
{"api_id": 3947, "api_type": 2, "full_declaration": "WebMvcConfigurerAdapter", "qualified_name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurerAdapter", "short_description": "Deprecated as of 5.0  WebMvcConfigurer  has default methods (made\npossible by a Java 8 baseline) and can be implemented directly without the\nneed for this adapter "},
{"api_id": 3948, "api_type": 9, "full_declaration": "EnableWebMvc", "qualified_name": "org.springframework.web.servlet.config.annotation.EnableWebMvc", "short_description": " Adding this annotation to an  @Configuration  class imports the Spring MVC\nconfiguration from  WebMvcConfigurationSupport , e.g.:  @Configuration\n @EnableWebMvc\n @ComponentScan(basePackageClasses = MyConfiguration.class)\n public class MyConfiguration {\n\n } "},
{"api_id": 3949, "api_type": 3, "full_declaration": "EntityResponse", "qualified_name": "org.springframework.web.servlet.function.EntityResponse", "short_description": " Entity-specific subtype of  ServerResponse  that exposes entity data. "},
{"api_id": 3950, "api_type": 3, "full_declaration": "EntityResponse.Builder", "qualified_name": "org.springframework.web.servlet.function.EntityResponse.Builder", "short_description": " Defines a builder for  EntityResponse . "},
{"api_id": 3951, "api_type": 3, "full_declaration": "HandlerFilterFunction", "qualified_name": "org.springframework.web.servlet.function.HandlerFilterFunction", "short_description": " Represents a function that filters a  handler function . "},
{"api_id": 3952, "api_type": 3, "full_declaration": "HandlerFunction", "qualified_name": "org.springframework.web.servlet.function.HandlerFunction", "short_description": " Represents a function that handles a  request . "},
{"api_id": 3953, "api_type": 3, "full_declaration": "RenderingResponse", "qualified_name": "org.springframework.web.servlet.function.RenderingResponse", "short_description": " Rendering-specific subtype of  ServerResponse  that exposes model and template data. "},
{"api_id": 3954, "api_type": 3, "full_declaration": "RenderingResponse.Builder", "qualified_name": "org.springframework.web.servlet.function.RenderingResponse.Builder", "short_description": " Defines a builder for  RenderingResponse . "},
{"api_id": 3955, "api_type": 3, "full_declaration": "RequestPredicate", "qualified_name": "org.springframework.web.servlet.function.RequestPredicate", "short_description": " Represents a function that evaluates on a given  ServerRequest . "},
{"api_id": 3956, "api_type": 3, "full_declaration": "RequestPredicates.Visitor", "qualified_name": "org.springframework.web.servlet.function.RequestPredicates.Visitor", "short_description": " Receives notifications from the logical structure of request predicates. "},
{"api_id": 3957, "api_type": 3, "full_declaration": "RouterFunction", "qualified_name": "org.springframework.web.servlet.function.RouterFunction", "short_description": " Represents a function that routes to a  handler function . "},
{"api_id": 3958, "api_type": 3, "full_declaration": "RouterFunctions.Builder", "qualified_name": "org.springframework.web.servlet.function.RouterFunctions.Builder", "short_description": " Represents a discoverable builder for router functions. "},
{"api_id": 3959, "api_type": 3, "full_declaration": "RouterFunctions.Visitor", "qualified_name": "org.springframework.web.servlet.function.RouterFunctions.Visitor", "short_description": " Receives notifications from the logical structure of router functions. "},
{"api_id": 3960, "api_type": 3, "full_declaration": "ServerRequest", "qualified_name": "org.springframework.web.servlet.function.ServerRequest", "short_description": " Represents a server-side HTTP request, as handled by a  HandlerFunction . "},
{"api_id": 3961, "api_type": 3, "full_declaration": "ServerRequest.Builder", "qualified_name": "org.springframework.web.servlet.function.ServerRequest.Builder", "short_description": " Defines a builder for a request. "},
{"api_id": 3962, "api_type": 3, "full_declaration": "ServerRequest.Headers", "qualified_name": "org.springframework.web.servlet.function.ServerRequest.Headers", "short_description": " Represents the headers of the HTTP request. "},
{"api_id": 3963, "api_type": 3, "full_declaration": "ServerResponse", "qualified_name": "org.springframework.web.servlet.function.ServerResponse", "short_description": " Represents a typed server-side HTTP response, as returned\nby a  handler function  or filter function . "},
{"api_id": 3964, "api_type": 3, "full_declaration": "ServerResponse.BodyBuilder", "qualified_name": "org.springframework.web.servlet.function.ServerResponse.BodyBuilder", "short_description": " Defines a builder that adds a body to the response. "},
{"api_id": 3965, "api_type": 3, "full_declaration": "ServerResponse.Context", "qualified_name": "org.springframework.web.servlet.function.ServerResponse.Context", "short_description": " Defines the context used during the  ServerResponse.writeTo(HttpServletRequest, HttpServletResponse, Context) . "},
{"api_id": 3966, "api_type": 3, "full_declaration": "ServerResponse.HeadersBuilder", "qualified_name": "org.springframework.web.servlet.function.ServerResponse.HeadersBuilder", "short_description": " Defines a builder that adds headers to the response. "},
{"api_id": 3967, "api_type": 2, "full_declaration": "RequestPredicates", "qualified_name": "org.springframework.web.servlet.function.RequestPredicates", "short_description": " Implementations of  RequestPredicate  that implement various useful\nrequest matching operations, such as matching based on path, HTTP method, etc. "},
{"api_id": 3968, "api_type": 2, "full_declaration": "RouterFunctions", "qualified_name": "org.springframework.web.servlet.function.RouterFunctions", "short_description": " Central entry point to Spring's functional web framework. Exposes routing functionality, such as to  create  a RouterFunction  using a discoverable builder-style API, to create  a  RouterFunction given a  RequestPredicate  and  HandlerFunction , and to do further subrouting  on an existing routing\nfunction. "},
{"api_id": 3969, "api_type": 2, "full_declaration": "HandlerFunctionAdapter", "qualified_name": "org.springframework.web.servlet.function.support.HandlerFunctionAdapter", "short_description": " HandlerAdapter  implementation that supports  HandlerFunction s. "},
{"api_id": 3970, "api_type": 2, "full_declaration": "RouterFunctionMapping", "qualified_name": "org.springframework.web.servlet.function.support.RouterFunctionMapping", "short_description": " HandlerMapping  implementation that supports  RouterFunctions . "},
{"api_id": 3971, "api_type": 3, "full_declaration": "HandlerMethodMappingNamingStrategy", "qualified_name": "org.springframework.web.servlet.handler.HandlerMethodMappingNamingStrategy", "short_description": " A strategy for assigning a name to a handler method's mapping. "},
{"api_id": 3972, "api_type": 3, "full_declaration": "MatchableHandlerMapping", "qualified_name": "org.springframework.web.servlet.handler.MatchableHandlerMapping", "short_description": " Additional interface that a  HandlerMapping  can implement to expose\na request matching API aligned with its internal request matching\nconfiguration and implementation. "},
{"api_id": 3973, "api_type": 2, "full_declaration": "AbstractDetectingUrlHandlerMapping", "qualified_name": "org.springframework.web.servlet.handler.AbstractDetectingUrlHandlerMapping", "short_description": " Abstract implementation of the  HandlerMapping interface, detecting URL mappings for handler beans through introspection of all\ndefined beans in the application context. "},
{"api_id": 3974, "api_type": 2, "full_declaration": "AbstractHandlerExceptionResolver", "qualified_name": "org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver", "short_description": " Abstract base class for  HandlerExceptionResolver  implementations. "},
{"api_id": 3975, "api_type": 2, "full_declaration": "AbstractHandlerMapping", "qualified_name": "org.springframework.web.servlet.handler.AbstractHandlerMapping", "short_description": " Abstract base class for  HandlerMapping implementations. "},
{"api_id": 3976, "api_type": 2, "full_declaration": "AbstractHandlerMethodExceptionResolver", "qualified_name": "org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver", "short_description": " Abstract base class for HandlerExceptionResolver implementations that support handling exceptions from handlers of type  HandlerMethod . "},
{"api_id": 3977, "api_type": 2, "full_declaration": "AbstractHandlerMethodMapping", "qualified_name": "org.springframework.web.servlet.handler.AbstractHandlerMethodMapping", "short_description": " Abstract base class for  HandlerMapping  implementations that define\na mapping between a request and a  HandlerMethod . "},
{"api_id": 3978, "api_type": 2, "full_declaration": "AbstractUrlHandlerMapping", "qualified_name": "org.springframework.web.servlet.handler.AbstractUrlHandlerMapping", "short_description": " Abstract base class for URL-mapped  HandlerMapping  implementations. "},
{"api_id": 3979, "api_type": 2, "full_declaration": "BeanNameUrlHandlerMapping", "qualified_name": "org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping", "short_description": " Implementation of the  HandlerMapping interface that maps from URLs to beans with names that start with a slash (\"/\"),\nsimilar to how Struts maps URLs to action names. "},
{"api_id": 3980, "api_type": 2, "full_declaration": "ConversionServiceExposingInterceptor", "qualified_name": "org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor", "short_description": " Interceptor that places the configured  ConversionService  in request scope\nso it's available during request processing. "},
{"api_id": 3981, "api_type": 2, "full_declaration": "DispatcherServletWebRequest", "qualified_name": "org.springframework.web.servlet.handler.DispatcherServletWebRequest", "short_description": " ServletWebRequest  subclass that is aware of DispatcherServlet 's\nrequest context, such as the Locale determined by the configured LocaleResolver . "},
{"api_id": 3982, "api_type": 2, "full_declaration": "HandlerExceptionResolverComposite", "qualified_name": "org.springframework.web.servlet.handler.HandlerExceptionResolverComposite", "short_description": " A  HandlerExceptionResolver  that delegates to a list of other HandlerExceptionResolvers . "},
{"api_id": 3983, "api_type": 2, "full_declaration": "HandlerInterceptorAdapter", "qualified_name": "org.springframework.web.servlet.handler.HandlerInterceptorAdapter", "short_description": "Deprecated as of 5.3 in favor of implementing  HandlerInterceptor and/or  AsyncHandlerInterceptor  directly. "},
{"api_id": 3984, "api_type": 2, "full_declaration": "HandlerMappingIntrospector", "qualified_name": "org.springframework.web.servlet.handler.HandlerMappingIntrospector", "short_description": " Helper class to get information from the  HandlerMapping  that would\nserve a specific request. "},
{"api_id": 3985, "api_type": 2, "full_declaration": "MappedInterceptor", "qualified_name": "org.springframework.web.servlet.handler.MappedInterceptor", "short_description": " Wraps a  HandlerInterceptor  and uses URL patterns to determine whether\nit applies to a given request. "},
{"api_id": 3986, "api_type": 2, "full_declaration": "RequestMatchResult", "qualified_name": "org.springframework.web.servlet.handler.RequestMatchResult", "short_description": " Container for the result from request pattern matching via MatchableHandlerMapping  with a method to further extract\nURI template variables from the pattern. "},
{"api_id": 3987, "api_type": 2, "full_declaration": "SimpleMappingExceptionResolver", "qualified_name": "org.springframework.web.servlet.handler.SimpleMappingExceptionResolver", "short_description": " HandlerExceptionResolver  implementation\nthat allows for mapping exception class names to view names, either for a set of\ngiven handlers or for all handlers in the DispatcherServlet. "},
{"api_id": 3988, "api_type": 2, "full_declaration": "SimpleServletHandlerAdapter", "qualified_name": "org.springframework.web.servlet.handler.SimpleServletHandlerAdapter", "short_description": " Adapter to use the Servlet interface with the generic DispatcherServlet. "},
{"api_id": 3989, "api_type": 2, "full_declaration": "SimpleServletPostProcessor", "qualified_name": "org.springframework.web.servlet.handler.SimpleServletPostProcessor", "short_description": " BeanPostProcessor that applies initialization and destruction callbacks to beans that\nimplement the  Servlet  interface. "},
{"api_id": 3990, "api_type": 2, "full_declaration": "SimpleUrlHandlerMapping", "qualified_name": "org.springframework.web.servlet.handler.SimpleUrlHandlerMapping", "short_description": " Implementation of the  HandlerMapping interface that maps from URLs to request handler beans. "},
{"api_id": 3991, "api_type": 2, "full_declaration": "UserRoleAuthorizationInterceptor", "qualified_name": "org.springframework.web.servlet.handler.UserRoleAuthorizationInterceptor", "short_description": " Interceptor that checks the authorization of the current user via the\nuser's roles, as evaluated by HttpServletRequest's isUserInRole method. "},
{"api_id": 3992, "api_type": 2, "full_declaration": "WebRequestHandlerInterceptorAdapter", "qualified_name": "org.springframework.web.servlet.handler.WebRequestHandlerInterceptorAdapter", "short_description": " Adapter that implements the Servlet HandlerInterceptor interface\nand wraps an underlying WebRequestInterceptor. "},
{"api_id": 3993, "api_type": 2, "full_declaration": "AbstractLocaleContextResolver", "qualified_name": "org.springframework.web.servlet.i18n.AbstractLocaleContextResolver", "short_description": " Abstract base class for  LocaleContextResolver  implementations. "},
{"api_id": 3994, "api_type": 2, "full_declaration": "AbstractLocaleResolver", "qualified_name": "org.springframework.web.servlet.i18n.AbstractLocaleResolver", "short_description": " Abstract base class for  LocaleResolver  implementations. "},
{"api_id": 3995, "api_type": 2, "full_declaration": "AcceptHeaderLocaleResolver", "qualified_name": "org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver", "short_description": " LocaleResolver  implementation that simply uses the primary locale\nspecified in the \"accept-language\" header of the HTTP request (that is,\nthe locale sent by the client browser, normally that of the client's OS). "},
{"api_id": 3996, "api_type": 2, "full_declaration": "CookieLocaleResolver", "qualified_name": "org.springframework.web.servlet.i18n.CookieLocaleResolver", "short_description": " LocaleResolver  implementation that uses a cookie sent back to the user\nin case of a custom setting, with a fallback to the specified default locale\nor the request's accept-header locale. "},
{"api_id": 3997, "api_type": 2, "full_declaration": "FixedLocaleResolver", "qualified_name": "org.springframework.web.servlet.i18n.FixedLocaleResolver", "short_description": " LocaleResolver  implementation\nthat always returns a fixed default locale and optionally time zone. "},
{"api_id": 3998, "api_type": 2, "full_declaration": "LocaleChangeInterceptor", "qualified_name": "org.springframework.web.servlet.i18n.LocaleChangeInterceptor", "short_description": " Interceptor that allows for changing the current locale on every request,\nvia a configurable request parameter (default parameter name: \"locale\"). "},
{"api_id": 3999, "api_type": 2, "full_declaration": "SessionLocaleResolver", "qualified_name": "org.springframework.web.servlet.i18n.SessionLocaleResolver", "short_description": " LocaleResolver  implementation that\nuses a locale attribute in the user's session in case of a custom setting,\nwith a fallback to the specified default locale or the request's\naccept-header locale. "},
{"api_id": 4000, "api_type": 3, "full_declaration": "Controller", "qualified_name": "org.springframework.web.servlet.mvc.Controller", "short_description": " Base Controller interface, representing a component that receives HttpServletRequest  and  HttpServletResponse instances just like a  HttpServlet  but is able to\nparticipate in an MVC workflow. "},
{"api_id": 4001, "api_type": 3, "full_declaration": "LastModified", "qualified_name": "org.springframework.web.servlet.mvc.LastModified", "short_description": " Supports last-modified HTTP requests to facilitate content caching. "},
{"api_id": 4002, "api_type": 2, "full_declaration": "AbstractController", "qualified_name": "org.springframework.web.servlet.mvc.AbstractController", "short_description": " Convenient superclass for controller implementations, using the Template Method\ndesign pattern. "},
{"api_id": 4003, "api_type": 2, "full_declaration": "AbstractUrlViewController", "qualified_name": "org.springframework.web.servlet.mvc.AbstractUrlViewController", "short_description": " Abstract base class for  Controllers  that return a view name\nbased on the request URL. "},
{"api_id": 4004, "api_type": 2, "full_declaration": "HttpRequestHandlerAdapter", "qualified_name": "org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter", "short_description": " Adapter to use the plain  HttpRequestHandler interface with the generic  DispatcherServlet . "},
{"api_id": 4005, "api_type": 2, "full_declaration": "ParameterizableViewController", "qualified_name": "org.springframework.web.servlet.mvc.ParameterizableViewController", "short_description": " Trivial controller that always returns a pre-configured view and optionally\nsets the response status code. "},
{"api_id": 4006, "api_type": 2, "full_declaration": "ServletForwardingController", "qualified_name": "org.springframework.web.servlet.mvc.ServletForwardingController", "short_description": " Spring Controller implementation that forwards to a named servlet,\ni.e. "},
{"api_id": 4007, "api_type": 2, "full_declaration": "ServletWrappingController", "qualified_name": "org.springframework.web.servlet.mvc.ServletWrappingController", "short_description": " Spring Controller implementation that wraps a servlet instance which it manages\ninternally. "},
{"api_id": 4008, "api_type": 2, "full_declaration": "SimpleControllerHandlerAdapter", "qualified_name": "org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter", "short_description": " Adapter to use the plain  Controller  workflow interface with\nthe generic  DispatcherServlet . "},
{"api_id": 4009, "api_type": 2, "full_declaration": "UrlFilenameViewController", "qualified_name": "org.springframework.web.servlet.mvc.UrlFilenameViewController", "short_description": " Simple  Controller  implementation that transforms the virtual\npath of a URL into a view name and returns that view. "},
{"api_id": 4010, "api_type": 2, "full_declaration": "WebContentInterceptor", "qualified_name": "org.springframework.web.servlet.mvc.WebContentInterceptor", "short_description": " Handler interceptor that checks the request for supported methods and a\nrequired session and prepares the response by applying the configured\ncache settings. "},
{"api_id": 4011, "api_type": 3, "full_declaration": "ModelAndViewResolver", "qualified_name": "org.springframework.web.servlet.mvc.annotation.ModelAndViewResolver", "short_description": " SPI for resolving custom return values from a specific handler method. "},
{"api_id": 4012, "api_type": 2, "full_declaration": "ResponseStatusExceptionResolver", "qualified_name": "org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver", "short_description": " A  HandlerExceptionResolver  that uses the  @ResponseStatus annotation to map exceptions to HTTP status codes. "},
{"api_id": 4013, "api_type": 3, "full_declaration": "MediaTypeExpression", "qualified_name": "org.springframework.web.servlet.mvc.condition.MediaTypeExpression", "short_description": " A contract for media type expressions (e.g. "},
{"api_id": 4014, "api_type": 3, "full_declaration": "NameValueExpression", "qualified_name": "org.springframework.web.servlet.mvc.condition.NameValueExpression", "short_description": " A contract for  \"name!=value\"  style expression used to specify request\nparameters and request header conditions in  @RequestMapping . "},
{"api_id": 4015, "api_type": 3, "full_declaration": "RequestCondition", "qualified_name": "org.springframework.web.servlet.mvc.condition.RequestCondition", "short_description": " Contract for request mapping conditions. "},
{"api_id": 4016, "api_type": 2, "full_declaration": "AbstractRequestCondition", "qualified_name": "org.springframework.web.servlet.mvc.condition.AbstractRequestCondition", "short_description": " A base class for  RequestCondition  types providing implementations of AbstractRequestCondition.equals(Object) ,  AbstractRequestCondition.hashCode() , and  AbstractRequestCondition.toString() . "},
{"api_id": 4017, "api_type": 2, "full_declaration": "CompositeRequestCondition", "qualified_name": "org.springframework.web.servlet.mvc.condition.CompositeRequestCondition", "short_description": " Implements the  RequestCondition  contract by delegating to multiple RequestCondition  types and using a logical conjunction (' && ') to\nensure all conditions match a given request. "},
{"api_id": 4018, "api_type": 2, "full_declaration": "ConsumesRequestCondition", "qualified_name": "org.springframework.web.servlet.mvc.condition.ConsumesRequestCondition", "short_description": " A logical disjunction (' || ') request condition to match a request's\n'Content-Type' header to a list of media type expressions. "},
{"api_id": 4019, "api_type": 2, "full_declaration": "HeadersRequestCondition", "qualified_name": "org.springframework.web.servlet.mvc.condition.HeadersRequestCondition", "short_description": " A logical conjunction (' && ') request condition that matches a request against\na set of header expressions with syntax defined in  RequestMapping.headers() . "},
{"api_id": 4020, "api_type": 2, "full_declaration": "ParamsRequestCondition", "qualified_name": "org.springframework.web.servlet.mvc.condition.ParamsRequestCondition", "short_description": " A logical conjunction (' && ') request condition that matches a request against\na set parameter expressions with syntax defined in  RequestMapping.params() . "},
{"api_id": 4021, "api_type": 2, "full_declaration": "PathPatternsRequestCondition", "qualified_name": "org.springframework.web.servlet.mvc.condition.PathPatternsRequestCondition", "short_description": " A logical disjunction (' || ') request condition that matches a request\nagainst a set of URL path patterns. "},
{"api_id": 4022, "api_type": 2, "full_declaration": "PatternsRequestCondition", "qualified_name": "org.springframework.web.servlet.mvc.condition.PatternsRequestCondition", "short_description": " A logical disjunction (' || ') request condition that matches a request\nagainst a set of URL path patterns. "},
{"api_id": 4023, "api_type": 2, "full_declaration": "ProducesRequestCondition", "qualified_name": "org.springframework.web.servlet.mvc.condition.ProducesRequestCondition", "short_description": " A logical disjunction (' || ') request condition to match a request's 'Accept' header\nto a list of media type expressions. "},
{"api_id": 4024, "api_type": 2, "full_declaration": "RequestConditionHolder", "qualified_name": "org.springframework.web.servlet.mvc.condition.RequestConditionHolder", "short_description": " A holder for a  RequestCondition  useful when the type of the request\ncondition is not known ahead of time, e.g. "},
{"api_id": 4025, "api_type": 2, "full_declaration": "RequestMethodsRequestCondition", "qualified_name": "org.springframework.web.servlet.mvc.condition.RequestMethodsRequestCondition", "short_description": " A logical disjunction (' || ') request condition that matches a request\nagainst a set of  RequestMethods . "},
{"api_id": 4026, "api_type": 3, "full_declaration": "RequestMappingInfo.Builder", "qualified_name": "org.springframework.web.servlet.mvc.method.RequestMappingInfo.Builder", "short_description": " Defines a builder for creating a RequestMappingInfo. "},
{"api_id": 4027, "api_type": 2, "full_declaration": "AbstractHandlerMethodAdapter", "qualified_name": "org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter", "short_description": " Abstract base class for  HandlerAdapter  implementations that support\nhandlers of type  HandlerMethod . "},
{"api_id": 4028, "api_type": 2, "full_declaration": "RequestMappingInfo", "qualified_name": "org.springframework.web.servlet.mvc.method.RequestMappingInfo", "short_description": " Request mapping information. "},
{"api_id": 4029, "api_type": 2, "full_declaration": "RequestMappingInfo.BuilderConfiguration", "qualified_name": "org.springframework.web.servlet.mvc.method.RequestMappingInfo.BuilderConfiguration", "short_description": " Container for configuration options used for request mapping purposes. "},
{"api_id": 4030, "api_type": 2, "full_declaration": "RequestMappingInfoHandlerMapping", "qualified_name": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping", "short_description": " Abstract base class for classes for which  RequestMappingInfo  defines\nthe mapping between a request and a handler method. "},
{"api_id": 4031, "api_type": 2, "full_declaration": "RequestMappingInfoHandlerMethodMappingNamingStrategy", "qualified_name": "org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMethodMappingNamingStrategy", "short_description": " A  HandlerMethodMappingNamingStrategy  for  RequestMappingInfo -based handler\nmethod mappings. "},
{"api_id": 4032, "api_type": 3, "full_declaration": "MvcUriComponentsBuilder.MethodInvocationInfo", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder.MethodInvocationInfo", "short_description": " Method invocation information. "},
{"api_id": 4033, "api_type": 3, "full_declaration": "RequestBodyAdvice", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.RequestBodyAdvice", "short_description": " Allows customizing the request before its body is read and converted into an\nObject and also allows for processing of the resulting Object before it is\npassed into a controller method as an  @RequestBody  or an HttpEntity  method argument. "},
{"api_id": 4034, "api_type": 3, "full_declaration": "ResponseBodyAdvice", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.ResponseBodyAdvice", "short_description": " Allows customizing the response after the execution of an  @ResponseBody or a  ResponseEntity  controller method but before the body is written\nwith an  HttpMessageConverter . "},
{"api_id": 4035, "api_type": 3, "full_declaration": "SseEmitter.SseEventBuilder", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.SseEmitter.SseEventBuilder", "short_description": " A builder for an SSE event. "},
{"api_id": 4036, "api_type": 3, "full_declaration": "StreamingResponseBody", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.StreamingResponseBody", "short_description": " A controller method return value type for asynchronous request processing\nwhere the application can write directly to the response  OutputStream without holding up the Servlet container thread. "},
{"api_id": 4037, "api_type": 2, "full_declaration": "AbstractMappingJacksonResponseBodyAdvice", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.AbstractMappingJacksonResponseBodyAdvice", "short_description": " A convenient base class for  ResponseBodyAdvice  implementations\nthat customize the response before JSON serialization with AbstractJackson2HttpMessageConverter 's concrete subclasses. "},
{"api_id": 4038, "api_type": 2, "full_declaration": "AbstractMessageConverterMethodArgumentResolver", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodArgumentResolver", "short_description": " A base class for resolving method argument values by reading from the body of\na request with  HttpMessageConverters . "},
{"api_id": 4039, "api_type": 2, "full_declaration": "AbstractMessageConverterMethodProcessor", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor", "short_description": " Extends  AbstractMessageConverterMethodArgumentResolver  with the ability to handle method\nreturn values by writing to the response with  HttpMessageConverters . "},
{"api_id": 4040, "api_type": 2, "full_declaration": "AsyncTaskMethodReturnValueHandler", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.AsyncTaskMethodReturnValueHandler", "short_description": " Handles return values of type  WebAsyncTask . "},
{"api_id": 4041, "api_type": 2, "full_declaration": "CallableMethodReturnValueHandler", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.CallableMethodReturnValueHandler", "short_description": " Handles return values of type  Callable . "},
{"api_id": 4042, "api_type": 2, "full_declaration": "ContinuationHandlerMethodArgumentResolver", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.ContinuationHandlerMethodArgumentResolver", "short_description": " No-op resolver for method arguments of type  Continuation . "},
{"api_id": 4043, "api_type": 2, "full_declaration": "DeferredResultMethodReturnValueHandler", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.DeferredResultMethodReturnValueHandler", "short_description": " Handler for return values of type  DeferredResult , ListenableFuture , and  CompletionStage . "},
{"api_id": 4044, "api_type": 2, "full_declaration": "ExceptionHandlerExceptionResolver", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver", "short_description": " An  AbstractHandlerMethodExceptionResolver  that resolves exceptions\nthrough  @ExceptionHandler  methods. "},
{"api_id": 4045, "api_type": 2, "full_declaration": "ExtendedServletRequestDataBinder", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.ExtendedServletRequestDataBinder", "short_description": " Subclass of  ServletRequestDataBinder  that adds URI template variables\nto the values used for data binding. "},
{"api_id": 4046, "api_type": 2, "full_declaration": "HttpEntityMethodProcessor", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor", "short_description": " Resolves  HttpEntity  and  RequestEntity  method argument values\nand also handles  HttpEntity  and  ResponseEntity  return values. "},
{"api_id": 4047, "api_type": 2, "full_declaration": "HttpHeadersReturnValueHandler", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.HttpHeadersReturnValueHandler", "short_description": " Handles  HttpHeaders  return values. "},
{"api_id": 4048, "api_type": 2, "full_declaration": "JsonViewRequestBodyAdvice", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.JsonViewRequestBodyAdvice", "short_description": " A  RequestBodyAdvice  implementation that adds support for Jackson's @JsonView  annotation declared on a Spring MVC  @HttpEntity or  @RequestBody  method parameter. "},
{"api_id": 4049, "api_type": 2, "full_declaration": "JsonViewResponseBodyAdvice", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.JsonViewResponseBodyAdvice", "short_description": " A  ResponseBodyAdvice  implementation that adds support for Jackson's @JsonView  annotation declared on a Spring MVC  @RequestMapping or  @ExceptionHandler  method. "},
{"api_id": 4050, "api_type": 2, "full_declaration": "MatrixVariableMapMethodArgumentResolver", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.MatrixVariableMapMethodArgumentResolver", "short_description": " Resolves arguments of type  Map  annotated with  @MatrixVariable where the annotation does not specify a name. "},
{"api_id": 4051, "api_type": 2, "full_declaration": "MatrixVariableMethodArgumentResolver", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.MatrixVariableMethodArgumentResolver", "short_description": " Resolves arguments annotated with  @MatrixVariable . "},
{"api_id": 4052, "api_type": 2, "full_declaration": "ModelAndViewMethodReturnValueHandler", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.ModelAndViewMethodReturnValueHandler", "short_description": " Handles return values of type  ModelAndView  copying view and model\ninformation to the  ModelAndViewContainer . "},
{"api_id": 4053, "api_type": 2, "full_declaration": "ModelAndViewResolverMethodReturnValueHandler", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.ModelAndViewResolverMethodReturnValueHandler", "short_description": " This return value handler is intended to be ordered after all others as it\nattempts to handle _any_ return value type (i.e. "},
{"api_id": 4054, "api_type": 2, "full_declaration": "MvcUriComponentsBuilder", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder", "short_description": " Creates instances of  UriComponentsBuilder by pointing to  @RequestMapping  methods on Spring MVC controllers. "},
{"api_id": 4055, "api_type": 2, "full_declaration": "MvcUriComponentsBuilder.MethodArgumentBuilder", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.MvcUriComponentsBuilder.MethodArgumentBuilder", "short_description": " Builder class to create URLs for method arguments. "},
{"api_id": 4056, "api_type": 2, "full_declaration": "PathVariableMapMethodArgumentResolver", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.PathVariableMapMethodArgumentResolver", "short_description": " Resolves  Map  method arguments annotated with an @ PathVariable where the annotation does not specify a path variable name. "},
{"api_id": 4057, "api_type": 2, "full_declaration": "PathVariableMethodArgumentResolver", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.PathVariableMethodArgumentResolver", "short_description": " Resolves method arguments annotated with an @ PathVariable . "},
{"api_id": 4058, "api_type": 2, "full_declaration": "PrincipalMethodArgumentResolver", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.PrincipalMethodArgumentResolver", "short_description": " Resolves an argument of type  Principal , similar to ServletRequestMethodArgumentResolver  but irrespective of whether the\nargument is annotated or not. "},
{"api_id": 4059, "api_type": 2, "full_declaration": "RedirectAttributesMethodArgumentResolver", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.RedirectAttributesMethodArgumentResolver", "short_description": " Resolves method arguments of type  RedirectAttributes . "},
{"api_id": 4060, "api_type": 2, "full_declaration": "RequestAttributeMethodArgumentResolver", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.RequestAttributeMethodArgumentResolver", "short_description": " Resolves method arguments annotated with an @ RequestAttribute . "},
{"api_id": 4061, "api_type": 2, "full_declaration": "RequestBodyAdviceAdapter", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.RequestBodyAdviceAdapter", "short_description": " A convenient starting point for implementing ResponseBodyAdvice  with default method implementations. "},
{"api_id": 4062, "api_type": 2, "full_declaration": "RequestMappingHandlerAdapter", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter", "short_description": " Extension of  AbstractHandlerMethodAdapter  that supports @RequestMapping  annotated  HandlerMethods . "},
{"api_id": 4063, "api_type": 2, "full_declaration": "RequestMappingHandlerMapping", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping", "short_description": " Creates  RequestMappingInfo  instances from type and method-level @RequestMapping  annotations in @Controller  classes. "},
{"api_id": 4064, "api_type": 2, "full_declaration": "RequestPartMethodArgumentResolver", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.RequestPartMethodArgumentResolver", "short_description": " Resolves the following method arguments:\nAnnotated with @ RequestPart Of type  MultipartFile  in conjunction with Spring's  MultipartResolver  abstraction\nOf type  javax.servlet.http.Part  in conjunction with Servlet 3.0 multipart requests "},
{"api_id": 4065, "api_type": 2, "full_declaration": "RequestResponseBodyMethodProcessor", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor", "short_description": " Resolves method arguments annotated with  @RequestBody  and handles return\nvalues from methods annotated with  @ResponseBody  by reading and writing\nto the body of the request or response with an  HttpMessageConverter . "},
{"api_id": 4066, "api_type": 2, "full_declaration": "ResponseBodyEmitter", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter", "short_description": " A controller method return value type for asynchronous request processing\nwhere one or more objects are written to the response. "},
{"api_id": 4067, "api_type": 2, "full_declaration": "ResponseBodyEmitter.DataWithMediaType", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitter.DataWithMediaType", "short_description": " A simple holder of data to be written along with a MediaType hint for\nselecting a message converter to write with. "},
{"api_id": 4068, "api_type": 2, "full_declaration": "ResponseBodyEmitterReturnValueHandler", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.ResponseBodyEmitterReturnValueHandler", "short_description": " Handler for return values of type  ResponseBodyEmitter  and sub-classes\nsuch as  SseEmitter  including the same types wrapped with ResponseEntity . "},
{"api_id": 4069, "api_type": 2, "full_declaration": "ResponseEntityExceptionHandler", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.ResponseEntityExceptionHandler", "short_description": " A convenient base class for  @ControllerAdvice  classes\nthat wish to provide centralized exception handling across all @RequestMapping  methods through  @ExceptionHandler  methods. "},
{"api_id": 4070, "api_type": 2, "full_declaration": "ServletCookieValueMethodArgumentResolver", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.ServletCookieValueMethodArgumentResolver", "short_description": " An  AbstractCookieValueMethodArgumentResolver that resolves cookie values from an  HttpServletRequest . "},
{"api_id": 4071, "api_type": 2, "full_declaration": "ServletInvocableHandlerMethod", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod", "short_description": " Extends  InvocableHandlerMethod  with the ability to handle return\nvalues through a registered  HandlerMethodReturnValueHandler  and\nalso supports setting the response status based on a method-level @ResponseStatus  annotation. "},
{"api_id": 4072, "api_type": 2, "full_declaration": "ServletModelAttributeMethodProcessor", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.ServletModelAttributeMethodProcessor", "short_description": " A Servlet-specific  ModelAttributeMethodProcessor  that applies data\nbinding through a WebDataBinder of type  ServletRequestDataBinder . "},
{"api_id": 4073, "api_type": 2, "full_declaration": "ServletRequestDataBinderFactory", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.ServletRequestDataBinderFactory", "short_description": " Creates a  ServletRequestDataBinder . "},
{"api_id": 4074, "api_type": 2, "full_declaration": "ServletRequestMethodArgumentResolver", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.ServletRequestMethodArgumentResolver", "short_description": " Resolves servlet backed request-related method arguments. "},
{"api_id": 4075, "api_type": 2, "full_declaration": "ServletResponseMethodArgumentResolver", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.ServletResponseMethodArgumentResolver", "short_description": " Resolves servlet backed response-related method arguments. "},
{"api_id": 4076, "api_type": 2, "full_declaration": "ServletWebArgumentResolverAdapter", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.ServletWebArgumentResolverAdapter", "short_description": " A Servlet-specific AbstractWebArgumentResolverAdapter that creates a  NativeWebRequest  from  ServletRequestAttributes . "},
{"api_id": 4077, "api_type": 2, "full_declaration": "SessionAttributeMethodArgumentResolver", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.SessionAttributeMethodArgumentResolver", "short_description": " Resolves method arguments annotated with an @ SessionAttribute . "},
{"api_id": 4078, "api_type": 2, "full_declaration": "SseEmitter", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.SseEmitter", "short_description": " A specialization of  ResponseBodyEmitter  for sending Server-Sent Events . "},
{"api_id": 4079, "api_type": 2, "full_declaration": "StreamingResponseBodyReturnValueHandler", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.StreamingResponseBodyReturnValueHandler", "short_description": " Supports return values of type StreamingResponseBody and also  ResponseEntity<StreamingResponseBody> . "},
{"api_id": 4080, "api_type": 2, "full_declaration": "UriComponentsBuilderMethodArgumentResolver", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.UriComponentsBuilderMethodArgumentResolver", "short_description": " Resolvers argument values of type  UriComponentsBuilder . "},
{"api_id": 4081, "api_type": 2, "full_declaration": "ViewMethodReturnValueHandler", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.ViewMethodReturnValueHandler", "short_description": " Handles return values that are of type  View . "},
{"api_id": 4082, "api_type": 2, "full_declaration": "ViewNameMethodReturnValueHandler", "qualified_name": "org.springframework.web.servlet.mvc.method.annotation.ViewNameMethodReturnValueHandler", "short_description": " Handles return values of types  void  and  String  interpreting them\nas view name reference. "},
{"api_id": 4083, "api_type": 3, "full_declaration": "RedirectAttributes", "qualified_name": "org.springframework.web.servlet.mvc.support.RedirectAttributes", "short_description": " A specialization of the  Model  interface that controllers can use to\nselect attributes for a redirect scenario. "},
{"api_id": 4084, "api_type": 2, "full_declaration": "DefaultHandlerExceptionResolver", "qualified_name": "org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver", "short_description": " The default implementation of the  HandlerExceptionResolver interface, resolving standard Spring MVC exceptions and translating them to corresponding\nHTTP status codes. "},
{"api_id": 4085, "api_type": 2, "full_declaration": "RedirectAttributesModelMap", "qualified_name": "org.springframework.web.servlet.mvc.support.RedirectAttributesModelMap", "short_description": " A  ModelMap  implementation of  RedirectAttributes  that formats\nvalues as Strings using a  DataBinder . "},
{"api_id": 4086, "api_type": 3, "full_declaration": "CssLinkResourceTransformer.LinkParser", "qualified_name": "org.springframework.web.servlet.resource.CssLinkResourceTransformer.LinkParser", "short_description": " Extract content chunks that represent links. "},
{"api_id": 4087, "api_type": 3, "full_declaration": "HttpResource", "qualified_name": "org.springframework.web.servlet.resource.HttpResource", "short_description": " Extended interface for a  Resource  to be written to an\nHTTP response. "},
{"api_id": 4088, "api_type": 3, "full_declaration": "ResourceResolver", "qualified_name": "org.springframework.web.servlet.resource.ResourceResolver", "short_description": " A strategy for resolving a request to a server-side resource. "},
{"api_id": 4089, "api_type": 3, "full_declaration": "ResourceResolverChain", "qualified_name": "org.springframework.web.servlet.resource.ResourceResolverChain", "short_description": " A contract for invoking a chain of  ResourceResolvers  where each resolver\nis given a reference to the chain allowing it to delegate when necessary. "},
{"api_id": 4090, "api_type": 3, "full_declaration": "ResourceTransformer", "qualified_name": "org.springframework.web.servlet.resource.ResourceTransformer", "short_description": " An abstraction for transforming the content of a resource. "},
{"api_id": 4091, "api_type": 3, "full_declaration": "ResourceTransformerChain", "qualified_name": "org.springframework.web.servlet.resource.ResourceTransformerChain", "short_description": " A contract for invoking a chain of  ResourceTransformers  where each resolver\nis given a reference to the chain allowing it to delegate when necessary. "},
{"api_id": 4092, "api_type": 3, "full_declaration": "VersionPathStrategy", "qualified_name": "org.springframework.web.servlet.resource.VersionPathStrategy", "short_description": " A strategy for extracting and embedding a resource version in its URL path. "},
{"api_id": 4093, "api_type": 3, "full_declaration": "VersionStrategy", "qualified_name": "org.springframework.web.servlet.resource.VersionStrategy", "short_description": " An extension of  VersionPathStrategy  that adds a method\nto determine the actual version of a  Resource . "},
{"api_id": 4094, "api_type": 2, "full_declaration": "AbstractResourceResolver", "qualified_name": "org.springframework.web.servlet.resource.AbstractResourceResolver", "short_description": " Base class for  ResourceResolver implementations. "},
{"api_id": 4095, "api_type": 2, "full_declaration": "AbstractVersionStrategy", "qualified_name": "org.springframework.web.servlet.resource.AbstractVersionStrategy", "short_description": " Abstract base class for  VersionStrategy  implementations. "},
{"api_id": 4096, "api_type": 2, "full_declaration": "AbstractVersionStrategy.FileNameVersionPathStrategy", "qualified_name": "org.springframework.web.servlet.resource.AbstractVersionStrategy.FileNameVersionPathStrategy", "short_description": " File name-based  VersionPathStrategy ,\ne.g. "},
{"api_id": 4097, "api_type": 2, "full_declaration": "AbstractVersionStrategy.PrefixVersionPathStrategy", "qualified_name": "org.springframework.web.servlet.resource.AbstractVersionStrategy.PrefixVersionPathStrategy", "short_description": " A prefix-based  VersionPathStrategy ,\ne.g. "},
{"api_id": 4098, "api_type": 2, "full_declaration": "AppCacheManifestTransformer", "qualified_name": "org.springframework.web.servlet.resource.AppCacheManifestTransformer", "short_description": "Deprecated as of 5.3 since browser support is going away "},
{"api_id": 4099, "api_type": 2, "full_declaration": "CachingResourceResolver", "qualified_name": "org.springframework.web.servlet.resource.CachingResourceResolver", "short_description": " A  ResourceResolver  that\nresolves resources from a  Cache  or otherwise\ndelegates to the resolver chain and saves the result in the cache. "},
{"api_id": 4100, "api_type": 2, "full_declaration": "CachingResourceTransformer", "qualified_name": "org.springframework.web.servlet.resource.CachingResourceTransformer", "short_description": " A  ResourceTransformer  that checks a Cache  to see if a previously transformed resource\nexists in the cache and returns it if found, and otherwise delegates to the resolver\nchain and saves the result in the cache. "},
{"api_id": 4101, "api_type": 2, "full_declaration": "ContentVersionStrategy", "qualified_name": "org.springframework.web.servlet.resource.ContentVersionStrategy", "short_description": " A  VersionStrategy  that calculates an Hex MD5 hashes from the content\nof the resource and appends it to the file name, e.g. "},
{"api_id": 4102, "api_type": 2, "full_declaration": "CssLinkResourceTransformer", "qualified_name": "org.springframework.web.servlet.resource.CssLinkResourceTransformer", "short_description": " A  ResourceTransformer  implementation that modifies links in a CSS\nfile to match the public URL paths that should be exposed to clients (e.g. "},
{"api_id": 4103, "api_type": 2, "full_declaration": "CssLinkResourceTransformer.AbstractLinkParser", "qualified_name": "org.springframework.web.servlet.resource.CssLinkResourceTransformer.AbstractLinkParser", "short_description": " Abstract base class for  CssLinkResourceTransformer.LinkParser  implementations. "},
{"api_id": 4104, "api_type": 2, "full_declaration": "DefaultServletHttpRequestHandler", "qualified_name": "org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler", "short_description": " An  HttpRequestHandler  for serving static files using the Servlet container's \"default\" Servlet. "},
{"api_id": 4105, "api_type": 2, "full_declaration": "EncodedResourceResolver", "qualified_name": "org.springframework.web.servlet.resource.EncodedResourceResolver", "short_description": " Resolver that delegates to the chain, and if a resource is found, it then\nattempts to find an encoded (e.g. "},
{"api_id": 4106, "api_type": 2, "full_declaration": "FixedVersionStrategy", "qualified_name": "org.springframework.web.servlet.resource.FixedVersionStrategy", "short_description": " A  VersionStrategy  that relies on a fixed version applied as a request\npath prefix, e.g. "},
{"api_id": 4107, "api_type": 2, "full_declaration": "GzipResourceResolver", "qualified_name": "org.springframework.web.servlet.resource.GzipResourceResolver", "short_description": "Deprecated as of 5.1, in favor of using  EncodedResourceResolver "},
{"api_id": 4108, "api_type": 2, "full_declaration": "PathResourceResolver", "qualified_name": "org.springframework.web.servlet.resource.PathResourceResolver", "short_description": " A simple  ResourceResolver  that tries to find a resource under the given\nlocations matching to the request path. "},
{"api_id": 4109, "api_type": 2, "full_declaration": "ResourceHttpRequestHandler", "qualified_name": "org.springframework.web.servlet.resource.ResourceHttpRequestHandler", "short_description": " HttpRequestHandler  that serves static resources in an optimized way\naccording to the guidelines of Page Speed, YSlow, etc. "},
{"api_id": 4110, "api_type": 2, "full_declaration": "ResourceTransformerSupport", "qualified_name": "org.springframework.web.servlet.resource.ResourceTransformerSupport", "short_description": " A base class for a  ResourceTransformer  with an optional helper method\nfor resolving public links within a transformed resource. "},
{"api_id": 4111, "api_type": 2, "full_declaration": "ResourceUrlEncodingFilter", "qualified_name": "org.springframework.web.servlet.resource.ResourceUrlEncodingFilter", "short_description": " A filter that wraps the  HttpServletResponse  and overrides its encodeURL  method in order to\ntranslate internal resource request URLs into public URL paths for external use. "},
{"api_id": 4112, "api_type": 2, "full_declaration": "ResourceUrlProvider", "qualified_name": "org.springframework.web.servlet.resource.ResourceUrlProvider", "short_description": " A central component to use to obtain the public URL path that clients should\nuse to access a static resource. "},
{"api_id": 4113, "api_type": 2, "full_declaration": "ResourceUrlProviderExposingInterceptor", "qualified_name": "org.springframework.web.servlet.resource.ResourceUrlProviderExposingInterceptor", "short_description": " An interceptor that exposes the  ResourceUrlProvider  instance it\nis configured with as a request attribute. "},
{"api_id": 4114, "api_type": 2, "full_declaration": "TransformedResource", "qualified_name": "org.springframework.web.servlet.resource.TransformedResource", "short_description": " An extension of  ByteArrayResource  that a  ResourceTransformer can use to represent an original resource preserving all other information\nexcept the content. "},
{"api_id": 4115, "api_type": 2, "full_declaration": "VersionResourceResolver", "qualified_name": "org.springframework.web.servlet.resource.VersionResourceResolver", "short_description": " Resolves request paths containing a version string that can be used as part\nof an HTTP caching strategy in which a resource is cached with a date in the\ndistant future (e.g. "},
{"api_id": 4116, "api_type": 2, "full_declaration": "WebJarsResourceResolver", "qualified_name": "org.springframework.web.servlet.resource.WebJarsResourceResolver", "short_description": " A  ResourceResolver  that delegates to the chain to locate a resource and then\nattempts to find a matching versioned resource contained in a WebJar JAR file. "},
{"api_id": 4117, "api_type": 3, "full_declaration": "RequestDataValueProcessor", "qualified_name": "org.springframework.web.servlet.support.RequestDataValueProcessor", "short_description": " A contract for inspecting and potentially modifying request data values such\nas URL query parameters or form field values before they are rendered by a\nview or before a redirect. "},
{"api_id": 4118, "api_type": 2, "full_declaration": "AbstractAnnotationConfigDispatcherServletInitializer", "qualified_name": "org.springframework.web.servlet.support.AbstractAnnotationConfigDispatcherServletInitializer", "short_description": " WebApplicationInitializer to register a  DispatcherServlet  and use Java-based Spring configuration. "},
{"api_id": 4119, "api_type": 2, "full_declaration": "AbstractDispatcherServletInitializer", "qualified_name": "org.springframework.web.servlet.support.AbstractDispatcherServletInitializer", "short_description": " Base class for  WebApplicationInitializer implementations that register a  DispatcherServlet  in the servlet context. "},
{"api_id": 4120, "api_type": 2, "full_declaration": "AbstractFlashMapManager", "qualified_name": "org.springframework.web.servlet.support.AbstractFlashMapManager", "short_description": " A base class for  FlashMapManager  implementations. "},
{"api_id": 4121, "api_type": 2, "full_declaration": "BindStatus", "qualified_name": "org.springframework.web.servlet.support.BindStatus", "short_description": " Simple adapter to expose the bind status of a field or object. "},
{"api_id": 4122, "api_type": 2, "full_declaration": "JspAwareRequestContext", "qualified_name": "org.springframework.web.servlet.support.JspAwareRequestContext", "short_description": " JSP-aware (and JSTL-aware) subclass of RequestContext, allowing for\npopulation of the context from a  javax.servlet.jsp.PageContext . "},
{"api_id": 4123, "api_type": 2, "full_declaration": "JstlUtils", "qualified_name": "org.springframework.web.servlet.support.JstlUtils", "short_description": " Helper class for preparing JSTL views,\nin particular for exposing a JSTL localization context. "},
{"api_id": 4124, "api_type": 2, "full_declaration": "RequestContext", "qualified_name": "org.springframework.web.servlet.support.RequestContext", "short_description": " Context holder for request-specific state, like current web application context, current locale,\ncurrent theme, and potential binding errors. "},
{"api_id": 4125, "api_type": 2, "full_declaration": "RequestContextUtils", "qualified_name": "org.springframework.web.servlet.support.RequestContextUtils", "short_description": " Utility class for easy access to request-specific state which has been\nset by the  DispatcherServlet . "},
{"api_id": 4126, "api_type": 2, "full_declaration": "ServletUriComponentsBuilder", "qualified_name": "org.springframework.web.servlet.support.ServletUriComponentsBuilder", "short_description": " UriComponentsBuilder with additional static factory methods to create links\nbased on the current HttpServletRequest. "},
{"api_id": 4127, "api_type": 2, "full_declaration": "SessionFlashMapManager", "qualified_name": "org.springframework.web.servlet.support.SessionFlashMapManager", "short_description": " Store and retrieve  FlashMap  instances to and from the HTTP session. "},
{"api_id": 4128, "api_type": 2, "full_declaration": "WebContentGenerator", "qualified_name": "org.springframework.web.servlet.support.WebContentGenerator", "short_description": " Convenient superclass for any kind of web content generator,\nlike  AbstractController and  WebContentInterceptor . "},
{"api_id": 4129, "api_type": 3, "full_declaration": "ArgumentAware", "qualified_name": "org.springframework.web.servlet.tags.ArgumentAware", "short_description": " Allows implementing tag to utilize nested  spring:argument  tags. "},
{"api_id": 4130, "api_type": 3, "full_declaration": "EditorAwareTag", "qualified_name": "org.springframework.web.servlet.tags.EditorAwareTag", "short_description": " Interface to be implemented by JSP tags that expose a\nPropertyEditor for a property that they are currently bound to. "},
{"api_id": 4131, "api_type": 3, "full_declaration": "ParamAware", "qualified_name": "org.springframework.web.servlet.tags.ParamAware", "short_description": " Allows implementing tag to utilize nested  spring:param  tags. "},
{"api_id": 4132, "api_type": 2, "full_declaration": "ArgumentTag", "qualified_name": "org.springframework.web.servlet.tags.ArgumentTag", "short_description": " The  <argument>  tag is based on the JSTL  fmt:param  tag. "},
{"api_id": 4133, "api_type": 2, "full_declaration": "BindErrorsTag", "qualified_name": "org.springframework.web.servlet.tags.BindErrorsTag", "short_description": " This  <hasBindErrors>  tag provides an  Errors  instance in case of\nbind errors. "},
{"api_id": 4134, "api_type": 2, "full_declaration": "BindTag", "qualified_name": "org.springframework.web.servlet.tags.BindTag", "short_description": " The  <bind>  tag supports evaluation of binding errors for a certain\nbean or bean property. "},
{"api_id": 4135, "api_type": 2, "full_declaration": "EscapeBodyTag", "qualified_name": "org.springframework.web.servlet.tags.EscapeBodyTag", "short_description": " The  <escapeBody>  tag is used to escape its enclosed body content,\napplying HTML escaping and/or JavaScript escaping. "},
{"api_id": 4136, "api_type": 2, "full_declaration": "EvalTag", "qualified_name": "org.springframework.web.servlet.tags.EvalTag", "short_description": " The  <eval>  tag evaluates a Spring expression (SpEL) and either prints\nthe result or assigns it to a variable. "},
{"api_id": 4137, "api_type": 2, "full_declaration": "HtmlEscapeTag", "qualified_name": "org.springframework.web.servlet.tags.HtmlEscapeTag", "short_description": " The  <htmlEscape>  tag sets default HTML escape value for the current\npage. "},
{"api_id": 4138, "api_type": 2, "full_declaration": "HtmlEscapingAwareTag", "qualified_name": "org.springframework.web.servlet.tags.HtmlEscapingAwareTag", "short_description": " Superclass for tags that output content that might get HTML-escaped. "},
{"api_id": 4139, "api_type": 2, "full_declaration": "MessageTag", "qualified_name": "org.springframework.web.servlet.tags.MessageTag", "short_description": " The  <message>  tag looks up a message in the scope of this page. "},
{"api_id": 4140, "api_type": 2, "full_declaration": "NestedPathTag", "qualified_name": "org.springframework.web.servlet.tags.NestedPathTag", "short_description": " The  <nestedPath>  tag supports and assists with nested beans or\nbean properties in the model. "},
{"api_id": 4141, "api_type": 2, "full_declaration": "Param", "qualified_name": "org.springframework.web.servlet.tags.Param", "short_description": " Bean used to pass name-value pair parameters from a  ParamTag  to a ParamAware  tag. "},
{"api_id": 4142, "api_type": 2, "full_declaration": "ParamTag", "qualified_name": "org.springframework.web.servlet.tags.ParamTag", "short_description": " The  <param>  tag collects name-value parameters and passes them to a ParamAware  ancestor in the tag hierarchy. "},
{"api_id": 4143, "api_type": 2, "full_declaration": "RequestContextAwareTag", "qualified_name": "org.springframework.web.servlet.tags.RequestContextAwareTag", "short_description": " Superclass for all tags that require a  RequestContext . "},
{"api_id": 4144, "api_type": 2, "full_declaration": "ThemeTag", "qualified_name": "org.springframework.web.servlet.tags.ThemeTag", "short_description": " The  <theme>  tag looks up a theme message in the scope of this page. "},
{"api_id": 4145, "api_type": 2, "full_declaration": "TransformTag", "qualified_name": "org.springframework.web.servlet.tags.TransformTag", "short_description": " The  <transform>  tag provides transformation for reference data values\nfrom controllers and other objects inside a  spring:bind  tag (or a\ndata-bound form element tag from Spring's form tag library). "},
{"api_id": 4146, "api_type": 2, "full_declaration": "UrlTag", "qualified_name": "org.springframework.web.servlet.tags.UrlTag", "short_description": " The  <url>  tag creates URLs. "},
{"api_id": 4147, "api_type": 2, "full_declaration": "AbstractCheckedElementTag", "qualified_name": "org.springframework.web.servlet.tags.form.AbstractCheckedElementTag", "short_description": " Abstract base class to provide common methods for\nimplementing databinding-aware JSP tags for rendering an HTML ' input '\nelement with a ' type ' of ' checkbox ' or ' radio '. "},
{"api_id": 4148, "api_type": 2, "full_declaration": "AbstractDataBoundFormElementTag", "qualified_name": "org.springframework.web.servlet.tags.form.AbstractDataBoundFormElementTag", "short_description": " Base tag for all data-binding aware JSP form tags. "},
{"api_id": 4149, "api_type": 2, "full_declaration": "AbstractFormTag", "qualified_name": "org.springframework.web.servlet.tags.form.AbstractFormTag", "short_description": " Base class for all JSP form tags. "},
{"api_id": 4150, "api_type": 2, "full_declaration": "AbstractHtmlElementBodyTag", "qualified_name": "org.springframework.web.servlet.tags.form.AbstractHtmlElementBodyTag", "short_description": " Convenient super class for many html tags that render content using the databinding\nfeatures of the  AbstractHtmlElementTag . "},
{"api_id": 4151, "api_type": 2, "full_declaration": "AbstractHtmlElementTag", "qualified_name": "org.springframework.web.servlet.tags.form.AbstractHtmlElementTag", "short_description": " Base class for databinding-aware JSP tags that render HTML element. "},
{"api_id": 4152, "api_type": 2, "full_declaration": "AbstractHtmlInputElementTag", "qualified_name": "org.springframework.web.servlet.tags.form.AbstractHtmlInputElementTag", "short_description": " Base class for databinding-aware JSP tags that render HTML form input element. "},
{"api_id": 4153, "api_type": 2, "full_declaration": "AbstractMultiCheckedElementTag", "qualified_name": "org.springframework.web.servlet.tags.form.AbstractMultiCheckedElementTag", "short_description": " Abstract base class to provide common methods for implementing\ndatabinding-aware JSP tags for rendering  multiple HTML ' input ' elements with a ' type '\nof ' checkbox ' or ' radio '. "},
{"api_id": 4154, "api_type": 2, "full_declaration": "AbstractSingleCheckedElementTag", "qualified_name": "org.springframework.web.servlet.tags.form.AbstractSingleCheckedElementTag", "short_description": " Abstract base class to provide common methods for implementing databinding-aware\nJSP tags for rendering a  single  HTML ' input ' element with a\n' type ' of ' checkbox ' or ' radio '. "},
{"api_id": 4155, "api_type": 2, "full_declaration": "ButtonTag", "qualified_name": "org.springframework.web.servlet.tags.form.ButtonTag", "short_description": " The  <button>  tag renders a form field label in an HTML 'button' tag. "},
{"api_id": 4156, "api_type": 2, "full_declaration": "CheckboxesTag", "qualified_name": "org.springframework.web.servlet.tags.form.CheckboxesTag", "short_description": " The  <checkboxes>  tag renders multiple HTML 'input' tags with type 'checkbox'. "},
{"api_id": 4157, "api_type": 2, "full_declaration": "CheckboxTag", "qualified_name": "org.springframework.web.servlet.tags.form.CheckboxTag", "short_description": " The  <checkbox>  tag renders an HTML 'input' tag with type 'checkbox'. "},
{"api_id": 4158, "api_type": 2, "full_declaration": "ErrorsTag", "qualified_name": "org.springframework.web.servlet.tags.form.ErrorsTag", "short_description": " The  <errors>  tag renders field errors in an HTML 'span' tag. "},
{"api_id": 4159, "api_type": 2, "full_declaration": "FormTag", "qualified_name": "org.springframework.web.servlet.tags.form.FormTag", "short_description": " The  <form>  tag renders an HTML 'form' tag and exposes a binding path to\ninner tags for binding. "},
{"api_id": 4160, "api_type": 2, "full_declaration": "HiddenInputTag", "qualified_name": "org.springframework.web.servlet.tags.form.HiddenInputTag", "short_description": " The  <hidden>  tag renders an HTML 'input' tag with type 'hidden' using\nthe bound value. "},
{"api_id": 4161, "api_type": 2, "full_declaration": "InputTag", "qualified_name": "org.springframework.web.servlet.tags.form.InputTag", "short_description": " The  <input>  tag renders an HTML 'input' tag with type 'text' using\nthe bound value. "},
{"api_id": 4162, "api_type": 2, "full_declaration": "LabelTag", "qualified_name": "org.springframework.web.servlet.tags.form.LabelTag", "short_description": " The  <label>  tag renders a form field label in an HTML 'label' tag. "},
{"api_id": 4163, "api_type": 2, "full_declaration": "OptionsTag", "qualified_name": "org.springframework.web.servlet.tags.form.OptionsTag", "short_description": " The  <options>  tag renders a list of HTML 'option' tags. "},
{"api_id": 4164, "api_type": 2, "full_declaration": "OptionTag", "qualified_name": "org.springframework.web.servlet.tags.form.OptionTag", "short_description": " The  <option>  tag renders a single HTML 'option'. "},
{"api_id": 4165, "api_type": 2, "full_declaration": "PasswordInputTag", "qualified_name": "org.springframework.web.servlet.tags.form.PasswordInputTag", "short_description": " The  <password>  tag renders an HTML 'input' tag with type 'password'\nusing the bound value. "},
{"api_id": 4166, "api_type": 2, "full_declaration": "RadioButtonsTag", "qualified_name": "org.springframework.web.servlet.tags.form.RadioButtonsTag", "short_description": " The  <radiobuttons>  tag renders multiple HTML 'input' tags with type 'radio'. "},
{"api_id": 4167, "api_type": 2, "full_declaration": "RadioButtonTag", "qualified_name": "org.springframework.web.servlet.tags.form.RadioButtonTag", "short_description": " The  <radiobutton>  tag renders an HTML 'input' tag with type 'radio'. "},
{"api_id": 4168, "api_type": 2, "full_declaration": "SelectTag", "qualified_name": "org.springframework.web.servlet.tags.form.SelectTag", "short_description": " The  <select>  tag renders an HTML 'select' element. "},
{"api_id": 4169, "api_type": 2, "full_declaration": "TagWriter", "qualified_name": "org.springframework.web.servlet.tags.form.TagWriter", "short_description": " Utility class for writing HTML content to a  Writer  instance. "},
{"api_id": 4170, "api_type": 2, "full_declaration": "TextareaTag", "qualified_name": "org.springframework.web.servlet.tags.form.TextareaTag", "short_description": " The  <textarea>  tag renders an HTML 'textarea'. "},
{"api_id": 4171, "api_type": 2, "full_declaration": "AbstractThemeResolver", "qualified_name": "org.springframework.web.servlet.theme.AbstractThemeResolver", "short_description": " Abstract base class for  ThemeResolver  implementations. "},
{"api_id": 4172, "api_type": 2, "full_declaration": "CookieThemeResolver", "qualified_name": "org.springframework.web.servlet.theme.CookieThemeResolver", "short_description": " ThemeResolver  implementation that uses a cookie sent back to the user\nin case of a custom setting, with a fallback to the default theme. "},
{"api_id": 4173, "api_type": 2, "full_declaration": "FixedThemeResolver", "qualified_name": "org.springframework.web.servlet.theme.FixedThemeResolver", "short_description": " ThemeResolver  implementation\nthat simply uses a fixed theme. "},
{"api_id": 4174, "api_type": 2, "full_declaration": "SessionThemeResolver", "qualified_name": "org.springframework.web.servlet.theme.SessionThemeResolver", "short_description": " ThemeResolver  implementation that\nuses a theme attribute in the user's session in case of a custom setting,\nwith a fallback to the default theme. "},
{"api_id": 4175, "api_type": 2, "full_declaration": "ThemeChangeInterceptor", "qualified_name": "org.springframework.web.servlet.theme.ThemeChangeInterceptor", "short_description": " Interceptor that allows for changing the current theme on every request,\nvia a configurable request parameter (default parameter name: \"theme\"). "},
{"api_id": 4176, "api_type": 3, "full_declaration": "AbstractCachingViewResolver.CacheFilter", "qualified_name": "org.springframework.web.servlet.view.AbstractCachingViewResolver.CacheFilter", "short_description": " Filter that determines if view should be cached. "},
{"api_id": 4177, "api_type": 2, "full_declaration": "AbstractCachingViewResolver", "qualified_name": "org.springframework.web.servlet.view.AbstractCachingViewResolver", "short_description": " Convenient base class for  ViewResolver implementations. "},
{"api_id": 4178, "api_type": 2, "full_declaration": "AbstractTemplateView", "qualified_name": "org.springframework.web.servlet.view.AbstractTemplateView", "short_description": " Adapter base class for template-based view technologies such as FreeMarker,\nwith the ability to use request and session attributes in their model and\nthe option to expose helper objects for Spring's FreeMarker macro library. "},
{"api_id": 4179, "api_type": 2, "full_declaration": "AbstractTemplateViewResolver", "qualified_name": "org.springframework.web.servlet.view.AbstractTemplateViewResolver", "short_description": " Abstract base class for template view resolvers, in particular for FreeMarker views. "},
{"api_id": 4180, "api_type": 2, "full_declaration": "AbstractUrlBasedView", "qualified_name": "org.springframework.web.servlet.view.AbstractUrlBasedView", "short_description": " Abstract base class for URL-based views. "},
{"api_id": 4181, "api_type": 2, "full_declaration": "AbstractView", "qualified_name": "org.springframework.web.servlet.view.AbstractView", "short_description": " Abstract base class for  View implementations. "},
{"api_id": 4182, "api_type": 2, "full_declaration": "BeanNameViewResolver", "qualified_name": "org.springframework.web.servlet.view.BeanNameViewResolver", "short_description": " A simple implementation of  ViewResolver that interprets a view name as a bean name in the current application context,\ni.e. "},
{"api_id": 4183, "api_type": 2, "full_declaration": "ContentNegotiatingViewResolver", "qualified_name": "org.springframework.web.servlet.view.ContentNegotiatingViewResolver", "short_description": " Implementation of  ViewResolver  that resolves a view based on the request file name\nor  Accept  header. "},
{"api_id": 4184, "api_type": 2, "full_declaration": "DefaultRequestToViewNameTranslator", "qualified_name": "org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator", "short_description": " RequestToViewNameTranslator  that simply transforms the URI of\nthe incoming request into a view name. "},
{"api_id": 4185, "api_type": 2, "full_declaration": "InternalResourceView", "qualified_name": "org.springframework.web.servlet.view.InternalResourceView", "short_description": " Wrapper for a JSP or other resource within the same web application. "},
{"api_id": 4186, "api_type": 2, "full_declaration": "InternalResourceViewResolver", "qualified_name": "org.springframework.web.servlet.view.InternalResourceViewResolver", "short_description": " Convenient subclass of  UrlBasedViewResolver  that supports InternalResourceView  (i.e. "},
{"api_id": 4187, "api_type": 2, "full_declaration": "JstlView", "qualified_name": "org.springframework.web.servlet.view.JstlView", "short_description": " Specialization of  InternalResourceView  for JSTL pages,\ni.e. "},
{"api_id": 4188, "api_type": 2, "full_declaration": "RedirectView", "qualified_name": "org.springframework.web.servlet.view.RedirectView", "short_description": " View that redirects to an absolute, context relative, or current request\nrelative URL. "},
{"api_id": 4189, "api_type": 2, "full_declaration": "ResourceBundleViewResolver", "qualified_name": "org.springframework.web.servlet.view.ResourceBundleViewResolver", "short_description": "Deprecated as of 5.3, in favor of Spring's common view resolver variants\nand/or custom resolver implementations "},
{"api_id": 4190, "api_type": 2, "full_declaration": "UrlBasedViewResolver", "qualified_name": "org.springframework.web.servlet.view.UrlBasedViewResolver", "short_description": " Simple implementation of the  ViewResolver interface, allowing for direct resolution of symbolic view names to URLs,\nwithout explicit mapping definitions. "},
{"api_id": 4191, "api_type": 2, "full_declaration": "ViewResolverComposite", "qualified_name": "org.springframework.web.servlet.view.ViewResolverComposite", "short_description": " A  ViewResolver  that delegates to others. "},
{"api_id": 4192, "api_type": 2, "full_declaration": "XmlViewResolver", "qualified_name": "org.springframework.web.servlet.view.XmlViewResolver", "short_description": "Deprecated as of 5.3, in favor of Spring's common view resolver variants\nand/or custom resolver implementations "},
{"api_id": 4193, "api_type": 2, "full_declaration": "AbstractPdfStamperView", "qualified_name": "org.springframework.web.servlet.view.document.AbstractPdfStamperView", "short_description": " Abstract superclass for PDF views that operate on an existing\ndocument with an AcroForm. "},
{"api_id": 4194, "api_type": 2, "full_declaration": "AbstractPdfView", "qualified_name": "org.springframework.web.servlet.view.document.AbstractPdfView", "short_description": " Abstract superclass for PDF views. "},
{"api_id": 4195, "api_type": 2, "full_declaration": "AbstractXlsView", "qualified_name": "org.springframework.web.servlet.view.document.AbstractXlsView", "short_description": " Convenient superclass for Excel document views in traditional XLS format. "},
{"api_id": 4196, "api_type": 2, "full_declaration": "AbstractXlsxStreamingView", "qualified_name": "org.springframework.web.servlet.view.document.AbstractXlsxStreamingView", "short_description": " Convenient superclass for Excel document views in the Office 2007 XLSX format,\nusing POI's streaming variant. "},
{"api_id": 4197, "api_type": 2, "full_declaration": "AbstractXlsxView", "qualified_name": "org.springframework.web.servlet.view.document.AbstractXlsxView", "short_description": " Convenient superclass for Excel document views in the Office 2007 XLSX format\n(as supported by POI-OOXML). "},
{"api_id": 4198, "api_type": 2, "full_declaration": "AbstractAtomFeedView", "qualified_name": "org.springframework.web.servlet.view.feed.AbstractAtomFeedView", "short_description": " Abstract superclass for Atom Feed views, using the ROME  package. "},
{"api_id": 4199, "api_type": 2, "full_declaration": "AbstractFeedView", "qualified_name": "org.springframework.web.servlet.view.feed.AbstractFeedView", "short_description": " Abstract base class for Atom and RSS Feed views, using the ROME  package. "},
{"api_id": 4200, "api_type": 2, "full_declaration": "AbstractRssFeedView", "qualified_name": "org.springframework.web.servlet.view.feed.AbstractRssFeedView", "short_description": " Abstract superclass for RSS Feed views, using the ROME  package. "},
{"api_id": 4201, "api_type": 3, "full_declaration": "FreeMarkerConfig", "qualified_name": "org.springframework.web.servlet.view.freemarker.FreeMarkerConfig", "short_description": " Interface to be implemented by objects that configure and manage a\nFreeMarker Configuration object in a web environment. "},
{"api_id": 4202, "api_type": 2, "full_declaration": "FreeMarkerConfigurer", "qualified_name": "org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer", "short_description": " JavaBean to configure FreeMarker for web usage, via the \"configLocation\"\nand/or \"freemarkerSettings\" and/or \"templateLoaderPath\" properties. "},
{"api_id": 4203, "api_type": 2, "full_declaration": "FreeMarkerView", "qualified_name": "org.springframework.web.servlet.view.freemarker.FreeMarkerView", "short_description": " View using the FreeMarker template engine. "},
{"api_id": 4204, "api_type": 2, "full_declaration": "FreeMarkerViewResolver", "qualified_name": "org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver", "short_description": " Convenience subclass of  UrlBasedViewResolver that supports  FreeMarkerView  (i.e. "},
{"api_id": 4205, "api_type": 3, "full_declaration": "GroovyMarkupConfig", "qualified_name": "org.springframework.web.servlet.view.groovy.GroovyMarkupConfig", "short_description": " Interface to be implemented by objects that configure and manage a Groovy MarkupTemplateEngine  for automatic lookup in a web environment. "},
{"api_id": 4206, "api_type": 2, "full_declaration": "GroovyMarkupConfigurer", "qualified_name": "org.springframework.web.servlet.view.groovy.GroovyMarkupConfigurer", "short_description": " An extension of Groovy's  TemplateConfiguration  and\nan implementation of Spring MVC's  GroovyMarkupConfig  for creating\na  MarkupTemplateEngine  for use in a web application. "},
{"api_id": 4207, "api_type": 2, "full_declaration": "GroovyMarkupView", "qualified_name": "org.springframework.web.servlet.view.groovy.GroovyMarkupView", "short_description": " An  AbstractTemplateView  subclass based on Groovy XML/XHTML markup templates. "},
{"api_id": 4208, "api_type": 2, "full_declaration": "GroovyMarkupViewResolver", "qualified_name": "org.springframework.web.servlet.view.groovy.GroovyMarkupViewResolver", "short_description": " Convenience subclass of @link AbstractTemplateViewResolver} that supports GroovyMarkupView  (i.e. "},
{"api_id": 4209, "api_type": 2, "full_declaration": "AbstractJackson2View", "qualified_name": "org.springframework.web.servlet.view.json.AbstractJackson2View", "short_description": " Abstract base class for Jackson based and content type independent AbstractView  implementations. "},
{"api_id": 4210, "api_type": 2, "full_declaration": "MappingJackson2JsonView", "qualified_name": "org.springframework.web.servlet.view.json.MappingJackson2JsonView", "short_description": " Spring MVC  View  that renders JSON content by serializing the model for the current request\nusing  Jackson 2's   ObjectMapper . "},
{"api_id": 4211, "api_type": 3, "full_declaration": "ScriptTemplateConfig", "qualified_name": "org.springframework.web.servlet.view.script.ScriptTemplateConfig", "short_description": " Interface to be implemented by objects that configure and manage a\nJSR-223  ScriptEngine  for automatic lookup in a web environment. "},
{"api_id": 4212, "api_type": 2, "full_declaration": "RenderingContext", "qualified_name": "org.springframework.web.servlet.view.script.RenderingContext", "short_description": " Context passed to  ScriptTemplateView  render function in order to make\nthe application context, the locale, the template loader and the url available on\nscripting side. "},
{"api_id": 4213, "api_type": 2, "full_declaration": "ScriptTemplateConfigurer", "qualified_name": "org.springframework.web.servlet.view.script.ScriptTemplateConfigurer", "short_description": " An implementation of Spring MVC's  ScriptTemplateConfig  for creating\na  ScriptEngine  for use in a web application. "},
{"api_id": 4214, "api_type": 2, "full_declaration": "ScriptTemplateView", "qualified_name": "org.springframework.web.servlet.view.script.ScriptTemplateView", "short_description": " An  AbstractUrlBasedView  subclass designed to run any template library\nbased on a JSR-223 script engine. "},
{"api_id": 4215, "api_type": 2, "full_declaration": "ScriptTemplateViewResolver", "qualified_name": "org.springframework.web.servlet.view.script.ScriptTemplateViewResolver", "short_description": " Convenience subclass of  UrlBasedViewResolver  that supports ScriptTemplateView  and custom subclasses of it. "},
{"api_id": 4216, "api_type": 2, "full_declaration": "AbstractSpringPreparerFactory", "qualified_name": "org.springframework.web.servlet.view.tiles3.AbstractSpringPreparerFactory", "short_description": " Abstract implementation of the Tiles  PreparerFactory interface, obtaining the current Spring WebApplicationContext and delegating to AbstractSpringPreparerFactory.getPreparer(String, org.springframework.web.context.WebApplicationContext) . "},
{"api_id": 4217, "api_type": 2, "full_declaration": "SimpleSpringPreparerFactory", "qualified_name": "org.springframework.web.servlet.view.tiles3.SimpleSpringPreparerFactory", "short_description": " Tiles  PreparerFactory  implementation\nthat expects preparer class names and builds preparer instances for those,\ncreating them through the Spring ApplicationContext in order to apply\nSpring container callbacks and configured Spring BeanPostProcessors. "},
{"api_id": 4218, "api_type": 2, "full_declaration": "SpringBeanPreparerFactory", "qualified_name": "org.springframework.web.servlet.view.tiles3.SpringBeanPreparerFactory", "short_description": " Tiles  PreparerFactory  implementation\nthat expects preparer bean names and obtains preparer beans from the\nSpring ApplicationContext. "},
{"api_id": 4219, "api_type": 2, "full_declaration": "SpringLocaleResolver", "qualified_name": "org.springframework.web.servlet.view.tiles3.SpringLocaleResolver", "short_description": " Tiles LocaleResolver adapter that delegates to a Spring LocaleResolver , exposing the\nDispatcherServlet-managed locale. "},
{"api_id": 4220, "api_type": 2, "full_declaration": "SpringWildcardServletTilesApplicationContext", "qualified_name": "org.springframework.web.servlet.view.tiles3.SpringWildcardServletTilesApplicationContext", "short_description": " Spring-specific subclass of the Tiles ServletApplicationContext. "},
{"api_id": 4221, "api_type": 2, "full_declaration": "TilesConfigurer", "qualified_name": "org.springframework.web.servlet.view.tiles3.TilesConfigurer", "short_description": " Helper class to configure Tiles 3.x for the Spring Framework. "},
{"api_id": 4222, "api_type": 2, "full_declaration": "TilesView", "qualified_name": "org.springframework.web.servlet.view.tiles3.TilesView", "short_description": " View  implementation that renders\nthrough the Tiles Request API. "},
{"api_id": 4223, "api_type": 2, "full_declaration": "TilesViewResolver", "qualified_name": "org.springframework.web.servlet.view.tiles3.TilesViewResolver", "short_description": " Convenience subclass of  UrlBasedViewResolver  that supports TilesView  (i.e. "},
{"api_id": 4224, "api_type": 2, "full_declaration": "MappingJackson2XmlView", "qualified_name": "org.springframework.web.servlet.view.xml.MappingJackson2XmlView", "short_description": " Spring MVC  View  that renders XML content by serializing the model for the current request\nusing  Jackson 2's   XmlMapper . "},
{"api_id": 4225, "api_type": 2, "full_declaration": "MarshallingView", "qualified_name": "org.springframework.web.servlet.view.xml.MarshallingView", "short_description": " Spring-MVC  View  that allows for response context to be rendered as the result\nof marshalling by a  Marshaller . "},
{"api_id": 4226, "api_type": 2, "full_declaration": "XsltView", "qualified_name": "org.springframework.web.servlet.view.xslt.XsltView", "short_description": " XSLT-driven View that allows for response context to be rendered as the\nresult of an XSLT transformation. "},
{"api_id": 4227, "api_type": 2, "full_declaration": "XsltViewResolver", "qualified_name": "org.springframework.web.servlet.view.xslt.XsltViewResolver", "short_description": " ViewResolver  implementation that\nresolves instances of  XsltView  by translating the supplied view name\ninto the URL of the XSLT stylesheet. "},
{"api_id": 4228, "api_type": 3, "full_declaration": "SubProtocolCapable", "qualified_name": "org.springframework.web.socket.SubProtocolCapable", "short_description": " An interface for WebSocket handlers that support sub-protocols as defined in RFC 6455. "},
{"api_id": 4229, "api_type": 3, "full_declaration": "WebSocketHandler", "qualified_name": "org.springframework.web.socket.WebSocketHandler", "short_description": " A handler for WebSocket messages and lifecycle events. "},
{"api_id": 4230, "api_type": 3, "full_declaration": "WebSocketMessage", "qualified_name": "org.springframework.web.socket.WebSocketMessage", "short_description": " A message that can be handled or sent on a WebSocket connection. "},
{"api_id": 4231, "api_type": 3, "full_declaration": "WebSocketSession", "qualified_name": "org.springframework.web.socket.WebSocketSession", "short_description": " A WebSocket session abstraction. "},
{"api_id": 4232, "api_type": 2, "full_declaration": "AbstractWebSocketMessage", "qualified_name": "org.springframework.web.socket.AbstractWebSocketMessage", "short_description": " A message that can be handled or sent on a WebSocket connection. "},
{"api_id": 4233, "api_type": 2, "full_declaration": "BinaryMessage", "qualified_name": "org.springframework.web.socket.BinaryMessage", "short_description": " A binary WebSocket message. "},
{"api_id": 4234, "api_type": 2, "full_declaration": "CloseStatus", "qualified_name": "org.springframework.web.socket.CloseStatus", "short_description": " Represents a WebSocket close status code and reason. "},
{"api_id": 4235, "api_type": 2, "full_declaration": "PingMessage", "qualified_name": "org.springframework.web.socket.PingMessage", "short_description": " A WebSocket ping message. "},
{"api_id": 4236, "api_type": 2, "full_declaration": "PongMessage", "qualified_name": "org.springframework.web.socket.PongMessage", "short_description": " A WebSocket pong message. "},
{"api_id": 4237, "api_type": 2, "full_declaration": "TextMessage", "qualified_name": "org.springframework.web.socket.TextMessage", "short_description": " A text WebSocket message. "},
{"api_id": 4238, "api_type": 2, "full_declaration": "WebSocketExtension", "qualified_name": "org.springframework.web.socket.WebSocketExtension", "short_description": " Represents a WebSocket extension as defined in the RFC 6455. "},
{"api_id": 4239, "api_type": 2, "full_declaration": "WebSocketHttpHeaders", "qualified_name": "org.springframework.web.socket.WebSocketHttpHeaders", "short_description": " An  HttpHeaders  variant that adds support for\nthe HTTP headers defined by the WebSocket specification RFC 6455. "},
{"api_id": 4240, "api_type": 3, "full_declaration": "NativeWebSocketSession", "qualified_name": "org.springframework.web.socket.adapter.NativeWebSocketSession", "short_description": " A  WebSocketSession  that exposes the underlying, native WebSocketSession\nthrough a getter. "},
{"api_id": 4241, "api_type": 2, "full_declaration": "AbstractWebSocketSession", "qualified_name": "org.springframework.web.socket.adapter.AbstractWebSocketSession", "short_description": " An abstract base class for implementations of  WebSocketSession . "},
{"api_id": 4242, "api_type": 2, "full_declaration": "JettyWebSocketHandlerAdapter", "qualified_name": "org.springframework.web.socket.adapter.jetty.JettyWebSocketHandlerAdapter", "short_description": " Adapts  WebSocketHandler  to the Jetty 9 WebSocket API. "},
{"api_id": 4243, "api_type": 2, "full_declaration": "JettyWebSocketSession", "qualified_name": "org.springframework.web.socket.adapter.jetty.JettyWebSocketSession", "short_description": " A  WebSocketSession  for use with the Jetty 9.4 WebSocket API. "},
{"api_id": 4244, "api_type": 2, "full_declaration": "WebSocketToJettyExtensionConfigAdapter", "qualified_name": "org.springframework.web.socket.adapter.jetty.WebSocketToJettyExtensionConfigAdapter", "short_description": " Adapter class to convert a  WebSocketExtension  to a Jetty ExtensionConfig . "},
{"api_id": 4245, "api_type": 2, "full_declaration": "ConvertingEncoderDecoderSupport", "qualified_name": "org.springframework.web.socket.adapter.standard.ConvertingEncoderDecoderSupport", "short_description": " Base class that can be used to implement a standard  Encoder and/or  Decoder . "},
{"api_id": 4246, "api_type": 2, "full_declaration": "ConvertingEncoderDecoderSupport.BinaryDecoder", "qualified_name": "org.springframework.web.socket.adapter.standard.ConvertingEncoderDecoderSupport.BinaryDecoder", "short_description": " A binary  javax.websocket.Encoder  that delegates\nto Spring's conversion service. "},
{"api_id": 4247, "api_type": 2, "full_declaration": "ConvertingEncoderDecoderSupport.BinaryEncoder", "qualified_name": "org.springframework.web.socket.adapter.standard.ConvertingEncoderDecoderSupport.BinaryEncoder", "short_description": " A binary  javax.websocket.Encoder  that delegates\nto Spring's conversion service. "},
{"api_id": 4248, "api_type": 2, "full_declaration": "ConvertingEncoderDecoderSupport.TextDecoder", "qualified_name": "org.springframework.web.socket.adapter.standard.ConvertingEncoderDecoderSupport.TextDecoder", "short_description": " A Text  javax.websocket.Encoder  that delegates\nto Spring's conversion service. "},
{"api_id": 4249, "api_type": 2, "full_declaration": "ConvertingEncoderDecoderSupport.TextEncoder", "qualified_name": "org.springframework.web.socket.adapter.standard.ConvertingEncoderDecoderSupport.TextEncoder", "short_description": " A text  javax.websocket.Encoder  that delegates\nto Spring's conversion service. "},
{"api_id": 4250, "api_type": 2, "full_declaration": "StandardToWebSocketExtensionAdapter", "qualified_name": "org.springframework.web.socket.adapter.standard.StandardToWebSocketExtensionAdapter", "short_description": " A sub-class of  WebSocketExtension  that\ncan be constructed from an  Extension . "},
{"api_id": 4251, "api_type": 2, "full_declaration": "StandardWebSocketHandlerAdapter", "qualified_name": "org.springframework.web.socket.adapter.standard.StandardWebSocketHandlerAdapter", "short_description": " Adapts a  WebSocketHandler  to the standard WebSocket for Java API. "},
{"api_id": 4252, "api_type": 2, "full_declaration": "StandardWebSocketSession", "qualified_name": "org.springframework.web.socket.adapter.standard.StandardWebSocketSession", "short_description": " A  WebSocketSession  for use with the standard WebSocket for Java API. "},
{"api_id": 4253, "api_type": 2, "full_declaration": "WebSocketToStandardExtensionAdapter", "qualified_name": "org.springframework.web.socket.adapter.standard.WebSocketToStandardExtensionAdapter", "short_description": " Adapt an instance of  WebSocketExtension  to\nthe  Extension  interface. "},
{"api_id": 4254, "api_type": 3, "full_declaration": "WebSocketClient", "qualified_name": "org.springframework.web.socket.client.WebSocketClient", "short_description": " Contract for initiating a WebSocket request. "},
{"api_id": 4255, "api_type": 2, "full_declaration": "AbstractWebSocketClient", "qualified_name": "org.springframework.web.socket.client.AbstractWebSocketClient", "short_description": " Abstract base class for  WebSocketClient  implementations. "},
{"api_id": 4256, "api_type": 2, "full_declaration": "ConnectionManagerSupport", "qualified_name": "org.springframework.web.socket.client.ConnectionManagerSupport", "short_description": " A base class for WebSocket connection managers. "},
{"api_id": 4257, "api_type": 2, "full_declaration": "WebSocketConnectionManager", "qualified_name": "org.springframework.web.socket.client.WebSocketConnectionManager", "short_description": " A WebSocket connection manager that is given a URI, a  WebSocketClient , and a WebSocketHandler , connects to a WebSocket server through  ConnectionManagerSupport.start()  and ConnectionManagerSupport.stop()  methods. "},
{"api_id": 4258, "api_type": 2, "full_declaration": "JettyWebSocketClient", "qualified_name": "org.springframework.web.socket.client.jetty.JettyWebSocketClient", "short_description": " Initiates WebSocket requests to a WebSocket server programmatically\nthrough the Jetty WebSocket API. "},
{"api_id": 4259, "api_type": 2, "full_declaration": "AnnotatedEndpointConnectionManager", "qualified_name": "org.springframework.web.socket.client.standard.AnnotatedEndpointConnectionManager", "short_description": " A WebSocket connection manager that is given a URI, a ClientEndpoint -annotated endpoint, connects to a\nWebSocket server through the  ConnectionManagerSupport.start()  and  ConnectionManagerSupport.stop()  methods. "},
{"api_id": 4260, "api_type": 2, "full_declaration": "EndpointConnectionManager", "qualified_name": "org.springframework.web.socket.client.standard.EndpointConnectionManager", "short_description": " A WebSocket connection manager that is given a URI, an  Endpoint , connects to a\nWebSocket server through the  ConnectionManagerSupport.start()  and  ConnectionManagerSupport.stop()  methods. "},
{"api_id": 4261, "api_type": 2, "full_declaration": "StandardWebSocketClient", "qualified_name": "org.springframework.web.socket.client.standard.StandardWebSocketClient", "short_description": " A WebSocketClient based on standard Java WebSocket API. "},
{"api_id": 4262, "api_type": 2, "full_declaration": "WebSocketContainerFactoryBean", "qualified_name": "org.springframework.web.socket.client.standard.WebSocketContainerFactoryBean", "short_description": " A FactoryBean for creating and configuring a  WebSocketContainer through Spring XML configuration. "},
{"api_id": 4263, "api_type": 2, "full_declaration": "WebSocketMessageBrokerStats", "qualified_name": "org.springframework.web.socket.config.WebSocketMessageBrokerStats", "short_description": " A central class for aggregating information about internal state and counters\nfrom key infrastructure components of the setup that comes with @EnableWebSocketMessageBroker  for Java config and <websocket:message-broker>  for XML. "},
{"api_id": 4264, "api_type": 2, "full_declaration": "WebSocketNamespaceHandler", "qualified_name": "org.springframework.web.socket.config.WebSocketNamespaceHandler", "short_description": " NamespaceHandler  for Spring WebSocket\nconfiguration namespace. "},
{"api_id": 4265, "api_type": 3, "full_declaration": "StompEndpointRegistry", "qualified_name": "org.springframework.web.socket.config.annotation.StompEndpointRegistry", "short_description": " A contract for registering STOMP over WebSocket endpoints. "},
{"api_id": 4266, "api_type": 3, "full_declaration": "StompWebSocketEndpointRegistration", "qualified_name": "org.springframework.web.socket.config.annotation.StompWebSocketEndpointRegistration", "short_description": " A contract for configuring a STOMP over WebSocket endpoint. "},
{"api_id": 4267, "api_type": 3, "full_declaration": "WebSocketConfigurer", "qualified_name": "org.springframework.web.socket.config.annotation.WebSocketConfigurer", "short_description": " Defines callback methods to configure the WebSocket request handling\nvia  @EnableWebSocket . "},
{"api_id": 4268, "api_type": 3, "full_declaration": "WebSocketHandlerRegistration", "qualified_name": "org.springframework.web.socket.config.annotation.WebSocketHandlerRegistration", "short_description": " Provides methods for configuring a WebSocket handler. "},
{"api_id": 4269, "api_type": 3, "full_declaration": "WebSocketHandlerRegistry", "qualified_name": "org.springframework.web.socket.config.annotation.WebSocketHandlerRegistry", "short_description": " Provides methods for configuring  WebSocketHandler  request mappings. "},
{"api_id": 4270, "api_type": 3, "full_declaration": "WebSocketMessageBrokerConfigurer", "qualified_name": "org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurer", "short_description": " Defines methods for configuring message handling with simple messaging\nprotocols (e.g. "},
{"api_id": 4271, "api_type": 2, "full_declaration": "AbstractWebSocketHandlerRegistration", "qualified_name": "org.springframework.web.socket.config.annotation.AbstractWebSocketHandlerRegistration", "short_description": " Base class for  WebSocketHandlerRegistrations  that gathers all the configuration\noptions but allows sub-classes to put together the actual HTTP request mappings. "},
{"api_id": 4272, "api_type": 2, "full_declaration": "AbstractWebSocketMessageBrokerConfigurer", "qualified_name": "org.springframework.web.socket.config.annotation.AbstractWebSocketMessageBrokerConfigurer", "short_description": "Deprecated as of 5.0 in favor of simply using  WebSocketMessageBrokerConfigurer which has default methods, made possible by a Java 8 baseline. "},
{"api_id": 4273, "api_type": 2, "full_declaration": "DelegatingWebSocketConfiguration", "qualified_name": "org.springframework.web.socket.config.annotation.DelegatingWebSocketConfiguration", "short_description": " A variation of  WebSocketConfigurationSupport  that detects implementations of WebSocketConfigurer  in Spring configuration and invokes them in order to\nconfigure WebSocket request handling. "},
{"api_id": 4274, "api_type": 2, "full_declaration": "DelegatingWebSocketMessageBrokerConfiguration", "qualified_name": "org.springframework.web.socket.config.annotation.DelegatingWebSocketMessageBrokerConfiguration", "short_description": " A  WebSocketMessageBrokerConfigurationSupport  extension that detects\nbeans of type  WebSocketMessageBrokerConfigurer  and delegates to all\nof them allowing callback style customization of the configuration provided\nin  WebSocketMessageBrokerConfigurationSupport . "},
{"api_id": 4275, "api_type": 2, "full_declaration": "ServletWebSocketHandlerRegistration", "qualified_name": "org.springframework.web.socket.config.annotation.ServletWebSocketHandlerRegistration", "short_description": " A helper class for configuring  WebSocketHandler  request handling\nincluding SockJS fallback options. "},
{"api_id": 4276, "api_type": 2, "full_declaration": "ServletWebSocketHandlerRegistry", "qualified_name": "org.springframework.web.socket.config.annotation.ServletWebSocketHandlerRegistry", "short_description": " WebSocketHandlerRegistry  with Spring MVC handler mappings for the\nhandshake requests. "},
{"api_id": 4277, "api_type": 2, "full_declaration": "SockJsServiceRegistration", "qualified_name": "org.springframework.web.socket.config.annotation.SockJsServiceRegistration", "short_description": " A helper class for configuring SockJS fallback options for use with an EnableWebSocket  and WebSocketConfigurer  setup. "},
{"api_id": 4278, "api_type": 2, "full_declaration": "WebMvcStompEndpointRegistry", "qualified_name": "org.springframework.web.socket.config.annotation.WebMvcStompEndpointRegistry", "short_description": " A registry for STOMP over WebSocket endpoints that maps the endpoints with a HandlerMapping  for use in Spring MVC. "},
{"api_id": 4279, "api_type": 2, "full_declaration": "WebMvcStompWebSocketEndpointRegistration", "qualified_name": "org.springframework.web.socket.config.annotation.WebMvcStompWebSocketEndpointRegistration", "short_description": " An abstract base class for configuring STOMP over WebSocket/SockJS endpoints. "},
{"api_id": 4280, "api_type": 2, "full_declaration": "WebSocketConfigurationSupport", "qualified_name": "org.springframework.web.socket.config.annotation.WebSocketConfigurationSupport", "short_description": " Configuration support for WebSocket request handling. "},
{"api_id": 4281, "api_type": 2, "full_declaration": "WebSocketMessageBrokerConfigurationSupport", "qualified_name": "org.springframework.web.socket.config.annotation.WebSocketMessageBrokerConfigurationSupport", "short_description": " Extends  AbstractMessageBrokerConfiguration  and adds configuration for\nreceiving and responding to STOMP messages from WebSocket clients. "},
{"api_id": 4282, "api_type": 2, "full_declaration": "WebSocketTransportRegistration", "qualified_name": "org.springframework.web.socket.config.annotation.WebSocketTransportRegistration", "short_description": " Configure the processing of messages received from and sent to WebSocket clients. "},
{"api_id": 4283, "api_type": 9, "full_declaration": "EnableWebSocket", "qualified_name": "org.springframework.web.socket.config.annotation.EnableWebSocket", "short_description": " Add this annotation to an  @Configuration  class to configure\nprocessing WebSocket requests. "},
{"api_id": 4284, "api_type": 9, "full_declaration": "EnableWebSocketMessageBroker", "qualified_name": "org.springframework.web.socket.config.annotation.EnableWebSocketMessageBroker", "short_description": " Add this annotation to an  @Configuration  class to enable broker-backed\nmessaging over WebSocket using a higher-level messaging sub-protocol. "},
{"api_id": 4285, "api_type": 3, "full_declaration": "WebSocketHandlerDecoratorFactory", "qualified_name": "org.springframework.web.socket.handler.WebSocketHandlerDecoratorFactory", "short_description": " A factory for applying decorators to a WebSocketHandler. "},
{"api_id": 4286, "api_type": 2, "full_declaration": "AbstractWebSocketHandler", "qualified_name": "org.springframework.web.socket.handler.AbstractWebSocketHandler", "short_description": " A convenient base class for  WebSocketHandler  implementation with empty methods. "},
{"api_id": 4287, "api_type": 2, "full_declaration": "BeanCreatingHandlerProvider", "qualified_name": "org.springframework.web.socket.handler.BeanCreatingHandlerProvider", "short_description": " Instantiates a target handler through a Spring  BeanFactory  and also provides\nan equivalent destroy method. "},
{"api_id": 4288, "api_type": 2, "full_declaration": "BinaryWebSocketHandler", "qualified_name": "org.springframework.web.socket.handler.BinaryWebSocketHandler", "short_description": " A convenient base class for  WebSocketHandler  implementations\nthat process binary messages only. "},
{"api_id": 4289, "api_type": 2, "full_declaration": "ConcurrentWebSocketSessionDecorator", "qualified_name": "org.springframework.web.socket.handler.ConcurrentWebSocketSessionDecorator", "short_description": " Wrap a  WebSocketSession to guarantee only one thread can send messages at a time. "},
{"api_id": 4290, "api_type": 2, "full_declaration": "ExceptionWebSocketHandlerDecorator", "qualified_name": "org.springframework.web.socket.handler.ExceptionWebSocketHandlerDecorator", "short_description": " An exception handling  WebSocketHandlerDecorator . "},
{"api_id": 4291, "api_type": 2, "full_declaration": "LoggingWebSocketHandlerDecorator", "qualified_name": "org.springframework.web.socket.handler.LoggingWebSocketHandlerDecorator", "short_description": " A  WebSocketHandlerDecorator  that adds logging to WebSocket lifecycle events. "},
{"api_id": 4292, "api_type": 2, "full_declaration": "PerConnectionWebSocketHandler", "qualified_name": "org.springframework.web.socket.handler.PerConnectionWebSocketHandler", "short_description": " A  WebSocketHandler  that initializes and destroys a  WebSocketHandler instance for each WebSocket connection and delegates all other methods to it. "},
{"api_id": 4293, "api_type": 2, "full_declaration": "TextWebSocketHandler", "qualified_name": "org.springframework.web.socket.handler.TextWebSocketHandler", "short_description": " A convenient base class for  WebSocketHandler  implementations\nthat process text messages only. "},
{"api_id": 4294, "api_type": 2, "full_declaration": "WebSocketHandlerDecorator", "qualified_name": "org.springframework.web.socket.handler.WebSocketHandlerDecorator", "short_description": " Wraps another  WebSocketHandler instance and delegates to it. "},
{"api_id": 4295, "api_type": 2, "full_declaration": "WebSocketSessionDecorator", "qualified_name": "org.springframework.web.socket.handler.WebSocketSessionDecorator", "short_description": " Wraps another  WebSocketSession  instance\nand delegates to it. "},
{"api_id": 4296, "api_type": 8, "full_declaration": "ConcurrentWebSocketSessionDecorator.OverflowStrategy", "qualified_name": "org.springframework.web.socket.handler.ConcurrentWebSocketSessionDecorator.OverflowStrategy", "short_description": " Enum for options of what to do when the buffer fills up. "},
{"api_id": 4297, "api_type": 4, "full_declaration": "SessionLimitExceededException", "qualified_name": "org.springframework.web.socket.handler.SessionLimitExceededException", "short_description": " Raised when a WebSocket session has exceeded limits it has been configured\nfor, e.g. "},
{"api_id": 4298, "api_type": 3, "full_declaration": "StompSubProtocolHandler.Stats", "qualified_name": "org.springframework.web.socket.messaging.StompSubProtocolHandler.Stats", "short_description": " Contract for access to session counters. "},
{"api_id": 4299, "api_type": 3, "full_declaration": "SubProtocolErrorHandler", "qualified_name": "org.springframework.web.socket.messaging.SubProtocolErrorHandler", "short_description": " A contract for handling sub-protocol errors sent to clients. "},
{"api_id": 4300, "api_type": 3, "full_declaration": "SubProtocolHandler", "qualified_name": "org.springframework.web.socket.messaging.SubProtocolHandler", "short_description": " A contract for handling WebSocket messages as part of a higher level protocol,\nreferred to as \"sub-protocol\" in the WebSocket RFC specification. "},
{"api_id": 4301, "api_type": 3, "full_declaration": "SubProtocolWebSocketHandler.Stats", "qualified_name": "org.springframework.web.socket.messaging.SubProtocolWebSocketHandler.Stats", "short_description": " Contract for access to session counters. "},
{"api_id": 4302, "api_type": 2, "full_declaration": "AbstractSubProtocolEvent", "qualified_name": "org.springframework.web.socket.messaging.AbstractSubProtocolEvent", "short_description": " A base class for events for a message received from a WebSocket client and\nparsed into a higher-level sub-protocol (e.g. "},
{"api_id": 4303, "api_type": 2, "full_declaration": "DefaultSimpUserRegistry", "qualified_name": "org.springframework.web.socket.messaging.DefaultSimpUserRegistry", "short_description": " A default implementation of  SimpUserRegistry  that relies on AbstractSubProtocolEvent  application context events to keep\ntrack of connected users and their subscriptions. "},
{"api_id": 4304, "api_type": 2, "full_declaration": "SessionConnectedEvent", "qualified_name": "org.springframework.web.socket.messaging.SessionConnectedEvent", "short_description": " A connected event represents the server response to a client's connect request. "},
{"api_id": 4305, "api_type": 2, "full_declaration": "SessionConnectEvent", "qualified_name": "org.springframework.web.socket.messaging.SessionConnectEvent", "short_description": " Event raised when a new WebSocket client using a Simple Messaging Protocol\n(e.g. "},
{"api_id": 4306, "api_type": 2, "full_declaration": "SessionDisconnectEvent", "qualified_name": "org.springframework.web.socket.messaging.SessionDisconnectEvent", "short_description": " Event raised when the session of a WebSocket client using a Simple Messaging\nProtocol (e.g. "},
{"api_id": 4307, "api_type": 2, "full_declaration": "SessionSubscribeEvent", "qualified_name": "org.springframework.web.socket.messaging.SessionSubscribeEvent", "short_description": " Event raised when a new WebSocket client using a Simple Messaging Protocol\n(e.g. "},
{"api_id": 4308, "api_type": 2, "full_declaration": "SessionUnsubscribeEvent", "qualified_name": "org.springframework.web.socket.messaging.SessionUnsubscribeEvent", "short_description": " Event raised when a new WebSocket client using a Simple Messaging Protocol\n(e.g. "},
{"api_id": 4309, "api_type": 2, "full_declaration": "StompSubProtocolErrorHandler", "qualified_name": "org.springframework.web.socket.messaging.StompSubProtocolErrorHandler", "short_description": " A  SubProtocolErrorHandler  for use with STOMP. "},
{"api_id": 4310, "api_type": 2, "full_declaration": "StompSubProtocolHandler", "qualified_name": "org.springframework.web.socket.messaging.StompSubProtocolHandler", "short_description": " A  SubProtocolHandler  for STOMP that supports versions 1.0, 1.1, and 1.2\nof the STOMP specification. "},
{"api_id": 4311, "api_type": 2, "full_declaration": "SubProtocolWebSocketHandler", "qualified_name": "org.springframework.web.socket.messaging.SubProtocolWebSocketHandler", "short_description": " An implementation of  WebSocketHandler  that delegates incoming WebSocket\nmessages to a  SubProtocolHandler  along with a  MessageChannel  to which\nthe sub-protocol handler can send messages from WebSocket clients to the application. "},
{"api_id": 4312, "api_type": 2, "full_declaration": "WebSocketAnnotationMethodMessageHandler", "qualified_name": "org.springframework.web.socket.messaging.WebSocketAnnotationMethodMessageHandler", "short_description": " A sub-class of  SimpAnnotationMethodMessageHandler  to provide support\nfor  ControllerAdvice  with global  @MessageExceptionHandler  methods. "},
{"api_id": 4313, "api_type": 2, "full_declaration": "WebSocketStompClient", "qualified_name": "org.springframework.web.socket.messaging.WebSocketStompClient", "short_description": " A STOMP over WebSocket client that connects using an implementation of WebSocketClient including  SockJsClient . "},
{"api_id": 4314, "api_type": 3, "full_declaration": "HandshakeHandler", "qualified_name": "org.springframework.web.socket.server.HandshakeHandler", "short_description": " Contract for processing a WebSocket handshake request. "},
{"api_id": 4315, "api_type": 3, "full_declaration": "HandshakeInterceptor", "qualified_name": "org.springframework.web.socket.server.HandshakeInterceptor", "short_description": " Interceptor for WebSocket handshake requests. "},
{"api_id": 4316, "api_type": 3, "full_declaration": "RequestUpgradeStrategy", "qualified_name": "org.springframework.web.socket.server.RequestUpgradeStrategy", "short_description": " A server-specific strategy for performing the actual upgrade to a WebSocket exchange. "},
{"api_id": 4317, "api_type": 4, "full_declaration": "HandshakeFailureException", "qualified_name": "org.springframework.web.socket.server.HandshakeFailureException", "short_description": " Thrown when handshake processing failed to complete due to an internal, unrecoverable\nerror. "},
{"api_id": 4318, "api_type": 2, "full_declaration": "JettyRequestUpgradeStrategy", "qualified_name": "org.springframework.web.socket.server.jetty.JettyRequestUpgradeStrategy", "short_description": " A  RequestUpgradeStrategy  for use with Jetty 9.4. "},
{"api_id": 4319, "api_type": 2, "full_declaration": "AbstractStandardUpgradeStrategy", "qualified_name": "org.springframework.web.socket.server.standard.AbstractStandardUpgradeStrategy", "short_description": " A base class for  RequestUpgradeStrategy  implementations that build\non the standard WebSocket API for Java (JSR-356). "},
{"api_id": 4320, "api_type": 2, "full_declaration": "AbstractTyrusRequestUpgradeStrategy", "qualified_name": "org.springframework.web.socket.server.standard.AbstractTyrusRequestUpgradeStrategy", "short_description": " A base class for  RequestUpgradeStrategy  implementations on top of\nJSR-356 based servers which include Tyrus as their WebSocket engine. "},
{"api_id": 4321, "api_type": 2, "full_declaration": "GlassFishRequestUpgradeStrategy", "qualified_name": "org.springframework.web.socket.server.standard.GlassFishRequestUpgradeStrategy", "short_description": " A WebSocket  RequestUpgradeStrategy  for Oracle's GlassFish 4.1 and higher. "},
{"api_id": 4322, "api_type": 2, "full_declaration": "ServerEndpointExporter", "qualified_name": "org.springframework.web.socket.server.standard.ServerEndpointExporter", "short_description": " Detects beans of type  ServerEndpointConfig  and registers\nwith the standard Java WebSocket runtime. "},
{"api_id": 4323, "api_type": 2, "full_declaration": "ServerEndpointRegistration", "qualified_name": "org.springframework.web.socket.server.standard.ServerEndpointRegistration", "short_description": " An implementation of  ServerEndpointConfig  for use in\nSpring-based applications. "},
{"api_id": 4324, "api_type": 2, "full_declaration": "ServletServerContainerFactoryBean", "qualified_name": "org.springframework.web.socket.server.standard.ServletServerContainerFactoryBean", "short_description": " A  FactoryBean  for configuring  ServerContainer . "},
{"api_id": 4325, "api_type": 2, "full_declaration": "SpringConfigurator", "qualified_name": "org.springframework.web.socket.server.standard.SpringConfigurator", "short_description": " A  ServerEndpointConfig.Configurator  for initializing ServerEndpoint -annotated classes through Spring. "},
{"api_id": 4326, "api_type": 2, "full_declaration": "TomcatRequestUpgradeStrategy", "qualified_name": "org.springframework.web.socket.server.standard.TomcatRequestUpgradeStrategy", "short_description": " A WebSocket  RequestUpgradeStrategy  for Apache Tomcat. "},
{"api_id": 4327, "api_type": 2, "full_declaration": "UndertowRequestUpgradeStrategy", "qualified_name": "org.springframework.web.socket.server.standard.UndertowRequestUpgradeStrategy", "short_description": " A WebSocket  RequestUpgradeStrategy  for WildFly and its underlying\nUndertow web server. "},
{"api_id": 4328, "api_type": 2, "full_declaration": "WebLogicRequestUpgradeStrategy", "qualified_name": "org.springframework.web.socket.server.standard.WebLogicRequestUpgradeStrategy", "short_description": " A WebSocket  RequestUpgradeStrategy  for Oracle's WebLogic. "},
{"api_id": 4329, "api_type": 2, "full_declaration": "WebSphereRequestUpgradeStrategy", "qualified_name": "org.springframework.web.socket.server.standard.WebSphereRequestUpgradeStrategy", "short_description": " WebSphere support for upgrading an  HttpServletRequest  during a\nWebSocket handshake. "},
{"api_id": 4330, "api_type": 2, "full_declaration": "AbstractHandshakeHandler", "qualified_name": "org.springframework.web.socket.server.support.AbstractHandshakeHandler", "short_description": " A base class for  HandshakeHandler  implementations, independent from the Servlet API. "},
{"api_id": 4331, "api_type": 2, "full_declaration": "DefaultHandshakeHandler", "qualified_name": "org.springframework.web.socket.server.support.DefaultHandshakeHandler", "short_description": " A default  HandshakeHandler  implementation,\nextending  AbstractHandshakeHandler  with Servlet-specific initialization support. "},
{"api_id": 4332, "api_type": 2, "full_declaration": "HandshakeInterceptorChain", "qualified_name": "org.springframework.web.socket.server.support.HandshakeInterceptorChain", "short_description": " A helper class that assists with invoking a list of handshake interceptors. "},
{"api_id": 4333, "api_type": 2, "full_declaration": "HttpSessionHandshakeInterceptor", "qualified_name": "org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor", "short_description": " An interceptor to copy information from the HTTP session to the \"handshake\nattributes\" map to made available via WebSocketSession.getAttributes() . "},
{"api_id": 4334, "api_type": 2, "full_declaration": "OriginHandshakeInterceptor", "qualified_name": "org.springframework.web.socket.server.support.OriginHandshakeInterceptor", "short_description": " An interceptor to check request  Origin  header value against a\ncollection of allowed origins. "},
{"api_id": 4335, "api_type": 2, "full_declaration": "WebSocketHandlerMapping", "qualified_name": "org.springframework.web.socket.server.support.WebSocketHandlerMapping", "short_description": " An extension of  SimpleUrlHandlerMapping  that is also a SmartLifecycle  container and propagates start and stop calls to any\nhandlers that implement  Lifecycle . "},
{"api_id": 4336, "api_type": 2, "full_declaration": "WebSocketHttpRequestHandler", "qualified_name": "org.springframework.web.socket.server.support.WebSocketHttpRequestHandler", "short_description": " A  HttpRequestHandler  for processing WebSocket handshake requests. "},
{"api_id": 4337, "api_type": 3, "full_declaration": "SockJsService", "qualified_name": "org.springframework.web.socket.sockjs.SockJsService", "short_description": " The main entry point for processing HTTP requests from SockJS clients. "},
{"api_id": 4338, "api_type": 4, "full_declaration": "SockJsException", "qualified_name": "org.springframework.web.socket.sockjs.SockJsException", "short_description": " Base class for exceptions raised while processing SockJS HTTP requests. "},
{"api_id": 4339, "api_type": 4, "full_declaration": "SockJsMessageDeliveryException", "qualified_name": "org.springframework.web.socket.sockjs.SockJsMessageDeliveryException", "short_description": " An exception thrown when a message frame was successfully received over an HTTP POST\nand parsed but one or more of the messages it contained could not be delivered to the\nWebSocketHandler either because the handler failed or because the connection got\nclosed. "},
{"api_id": 4340, "api_type": 4, "full_declaration": "SockJsTransportFailureException", "qualified_name": "org.springframework.web.socket.sockjs.SockJsTransportFailureException", "short_description": " Indicates a serious failure that occurred in the SockJS implementation as opposed to\nin user code (e.g. "},
{"api_id": 4341, "api_type": 3, "full_declaration": "InfoReceiver", "qualified_name": "org.springframework.web.socket.sockjs.client.InfoReceiver", "short_description": " A component that can execute the SockJS \"Info\" request that needs to be\nperformed before the SockJS session starts in order to check server endpoint\ncapabilities such as whether the endpoint permits use of WebSocket. "},
{"api_id": 4342, "api_type": 3, "full_declaration": "Transport", "qualified_name": "org.springframework.web.socket.sockjs.client.Transport", "short_description": " A client-side implementation for a SockJS transport. "},
{"api_id": 4343, "api_type": 3, "full_declaration": "TransportRequest", "qualified_name": "org.springframework.web.socket.sockjs.client.TransportRequest", "short_description": " Exposes information, typically to  Transport  and session  implementations, about a request\nto connect to a SockJS server endpoint over a given transport. "},
{"api_id": 4344, "api_type": 3, "full_declaration": "XhrTransport", "qualified_name": "org.springframework.web.socket.sockjs.client.XhrTransport", "short_description": " A SockJS  Transport  that uses HTTP requests to simulate a WebSocket\ninteraction. "},
{"api_id": 4345, "api_type": 2, "full_declaration": "AbstractClientSockJsSession", "qualified_name": "org.springframework.web.socket.sockjs.client.AbstractClientSockJsSession", "short_description": " Base class for SockJS client implementations of  WebSocketSession . "},
{"api_id": 4346, "api_type": 2, "full_declaration": "AbstractXhrTransport", "qualified_name": "org.springframework.web.socket.sockjs.client.AbstractXhrTransport", "short_description": " Abstract base class for XHR transport implementations to extend. "},
{"api_id": 4347, "api_type": 2, "full_declaration": "JettyXhrTransport", "qualified_name": "org.springframework.web.socket.sockjs.client.JettyXhrTransport", "short_description": " An XHR transport based on Jetty's  HttpClient . "},
{"api_id": 4348, "api_type": 2, "full_declaration": "RestTemplateXhrTransport", "qualified_name": "org.springframework.web.socket.sockjs.client.RestTemplateXhrTransport", "short_description": " An  XhrTransport  implementation that uses a RestTemplate . "},
{"api_id": 4349, "api_type": 2, "full_declaration": "SockJsClient", "qualified_name": "org.springframework.web.socket.sockjs.client.SockJsClient", "short_description": " A SockJS implementation of WebSocketClient with fallback alternatives that simulate a WebSocket interaction through plain\nHTTP streaming and long polling techniques.. "},
{"api_id": 4350, "api_type": 2, "full_declaration": "SockJsUrlInfo", "qualified_name": "org.springframework.web.socket.sockjs.client.SockJsUrlInfo", "short_description": " Container for the base URL of a SockJS endpoint with additional helper methods\nto derive related SockJS URLs: specifically, the  info and  transport  URLs. "},
{"api_id": 4351, "api_type": 2, "full_declaration": "UndertowXhrTransport", "qualified_name": "org.springframework.web.socket.sockjs.client.UndertowXhrTransport", "short_description": " An XHR transport based on Undertow's  UndertowClient . "},
{"api_id": 4352, "api_type": 2, "full_declaration": "WebSocketClientSockJsSession", "qualified_name": "org.springframework.web.socket.sockjs.client.WebSocketClientSockJsSession", "short_description": " An extension of  AbstractClientSockJsSession  wrapping and delegating\nto an actual WebSocket session. "},
{"api_id": 4353, "api_type": 2, "full_declaration": "WebSocketTransport", "qualified_name": "org.springframework.web.socket.sockjs.client.WebSocketTransport", "short_description": " A SockJS  Transport  that uses a WebSocketClient . "},
{"api_id": 4354, "api_type": 2, "full_declaration": "XhrClientSockJsSession", "qualified_name": "org.springframework.web.socket.sockjs.client.XhrClientSockJsSession", "short_description": " An extension of  AbstractClientSockJsSession  for use with HTTP\ntransports simulating a WebSocket session. "},
{"api_id": 4355, "api_type": 3, "full_declaration": "SockJsFrameFormat", "qualified_name": "org.springframework.web.socket.sockjs.frame.SockJsFrameFormat", "short_description": " Applies a transport-specific format to the content of a SockJS frame resulting\nin a content that can be written out. "},
{"api_id": 4356, "api_type": 3, "full_declaration": "SockJsMessageCodec", "qualified_name": "org.springframework.web.socket.sockjs.frame.SockJsMessageCodec", "short_description": " Encode and decode messages to and from a SockJS message frame,\nessentially an array of JSON-encoded messages. "},
{"api_id": 4357, "api_type": 2, "full_declaration": "AbstractSockJsMessageCodec", "qualified_name": "org.springframework.web.socket.sockjs.frame.AbstractSockJsMessageCodec", "short_description": " An base class for SockJS message codec that provides an implementation of AbstractSockJsMessageCodec.encode(String[]) . "},
{"api_id": 4358, "api_type": 2, "full_declaration": "DefaultSockJsFrameFormat", "qualified_name": "org.springframework.web.socket.sockjs.frame.DefaultSockJsFrameFormat", "short_description": " A default implementation of SockJsFrameFormat  that relies\non  String.format(String, Object...) .. "},
{"api_id": 4359, "api_type": 2, "full_declaration": "Jackson2SockJsMessageCodec", "qualified_name": "org.springframework.web.socket.sockjs.frame.Jackson2SockJsMessageCodec", "short_description": " A Jackson 2.6+ codec for encoding and decoding SockJS messages. "},
{"api_id": 4360, "api_type": 2, "full_declaration": "SockJsFrame", "qualified_name": "org.springframework.web.socket.sockjs.frame.SockJsFrame", "short_description": " Represents a SockJS frame. "},
{"api_id": 4361, "api_type": 8, "full_declaration": "SockJsFrameType", "qualified_name": "org.springframework.web.socket.sockjs.frame.SockJsFrameType", "short_description": " SockJS frame types. "},
{"api_id": 4362, "api_type": 2, "full_declaration": "AbstractSockJsService", "qualified_name": "org.springframework.web.socket.sockjs.support.AbstractSockJsService", "short_description": " An abstract base class for  SockJsService  implementations that provides SockJS\npath resolution and handling of static SockJS requests (e.g. "},
{"api_id": 4363, "api_type": 2, "full_declaration": "SockJsHttpRequestHandler", "qualified_name": "org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler", "short_description": " An  HttpRequestHandler  that allows mapping a  SockJsService  to requests\nin a Servlet container. "},
{"api_id": 4364, "api_type": 3, "full_declaration": "SockJsServiceConfig", "qualified_name": "org.springframework.web.socket.sockjs.transport.SockJsServiceConfig", "short_description": " Provides transport handling code with access to the  SockJsService  configuration\noptions they need to have access to. "},
{"api_id": 4365, "api_type": 3, "full_declaration": "SockJsSession", "qualified_name": "org.springframework.web.socket.sockjs.transport.SockJsSession", "short_description": " SockJS extension of Spring's standard  WebSocketSession . "},
{"api_id": 4366, "api_type": 3, "full_declaration": "SockJsSessionFactory", "qualified_name": "org.springframework.web.socket.sockjs.transport.SockJsSessionFactory", "short_description": " A factory for creating a SockJS session. "},
{"api_id": 4367, "api_type": 3, "full_declaration": "TransportHandler", "qualified_name": "org.springframework.web.socket.sockjs.transport.TransportHandler", "short_description": " Handle a SockJS session URL, i.e. "},
{"api_id": 4368, "api_type": 2, "full_declaration": "TransportHandlingSockJsService", "qualified_name": "org.springframework.web.socket.sockjs.transport.TransportHandlingSockJsService", "short_description": " A basic implementation of  SockJsService with support for SPI-based transport handling and session management. "},
{"api_id": 4369, "api_type": 8, "full_declaration": "TransportType", "qualified_name": "org.springframework.web.socket.sockjs.transport.TransportType", "short_description": " SockJS transport types. "},
{"api_id": 4370, "api_type": 2, "full_declaration": "AbstractHttpReceivingTransportHandler", "qualified_name": "org.springframework.web.socket.sockjs.transport.handler.AbstractHttpReceivingTransportHandler", "short_description": " Base class for HTTP transport handlers that receive messages via HTTP POST. "},
{"api_id": 4371, "api_type": 2, "full_declaration": "AbstractHttpSendingTransportHandler", "qualified_name": "org.springframework.web.socket.sockjs.transport.handler.AbstractHttpSendingTransportHandler", "short_description": " Base class for HTTP transport handlers that push messages to connected clients. "},
{"api_id": 4372, "api_type": 2, "full_declaration": "AbstractTransportHandler", "qualified_name": "org.springframework.web.socket.sockjs.transport.handler.AbstractTransportHandler", "short_description": " Common base class for  TransportHandler  implementations. "},
{"api_id": 4373, "api_type": 2, "full_declaration": "DefaultSockJsService", "qualified_name": "org.springframework.web.socket.sockjs.transport.handler.DefaultSockJsService", "short_description": " A default implementation of  SockJsService with all default  TransportHandler  implementations pre-registered. "},
{"api_id": 4374, "api_type": 2, "full_declaration": "EventSourceTransportHandler", "qualified_name": "org.springframework.web.socket.sockjs.transport.handler.EventSourceTransportHandler", "short_description": " A TransportHandler for sending messages via Server-Sent Events: https://dev.w3.org/html5/eventsource/ . "},
{"api_id": 4375, "api_type": 2, "full_declaration": "HtmlFileTransportHandler", "qualified_name": "org.springframework.web.socket.sockjs.transport.handler.HtmlFileTransportHandler", "short_description": " An HTTP  TransportHandler  that uses a famous browser document.domain technique . "},
{"api_id": 4376, "api_type": 2, "full_declaration": "SockJsWebSocketHandler", "qualified_name": "org.springframework.web.socket.sockjs.transport.handler.SockJsWebSocketHandler", "short_description": " An implementation of  WebSocketHandler  that adds SockJS messages frames, sends\nSockJS heartbeat messages, and delegates lifecycle events and messages to a target WebSocketHandler . "},
{"api_id": 4377, "api_type": 2, "full_declaration": "WebSocketTransportHandler", "qualified_name": "org.springframework.web.socket.sockjs.transport.handler.WebSocketTransportHandler", "short_description": " WebSocket-based  TransportHandler . "},
{"api_id": 4378, "api_type": 2, "full_declaration": "XhrPollingTransportHandler", "qualified_name": "org.springframework.web.socket.sockjs.transport.handler.XhrPollingTransportHandler", "short_description": " A  TransportHandler  based on XHR (long) polling. "},
{"api_id": 4379, "api_type": 2, "full_declaration": "XhrReceivingTransportHandler", "qualified_name": "org.springframework.web.socket.sockjs.transport.handler.XhrReceivingTransportHandler", "short_description": " A  TransportHandler  that receives messages over HTTP. "},
{"api_id": 4380, "api_type": 2, "full_declaration": "XhrStreamingTransportHandler", "qualified_name": "org.springframework.web.socket.sockjs.transport.handler.XhrStreamingTransportHandler", "short_description": " A  TransportHandler  that sends messages over an HTTP streaming request. "},
{"api_id": 4381, "api_type": 2, "full_declaration": "AbstractHttpSockJsSession", "qualified_name": "org.springframework.web.socket.sockjs.transport.session.AbstractHttpSockJsSession", "short_description": " An abstract base class for use with HTTP transport SockJS sessions. "},
{"api_id": 4382, "api_type": 2, "full_declaration": "AbstractSockJsSession", "qualified_name": "org.springframework.web.socket.sockjs.transport.session.AbstractSockJsSession", "short_description": " An abstract base class for SockJS sessions implementing  SockJsSession . "},
{"api_id": 4383, "api_type": 2, "full_declaration": "PollingSockJsSession", "qualified_name": "org.springframework.web.socket.sockjs.transport.session.PollingSockJsSession", "short_description": " A SockJS session for use with polling HTTP transports. "},
{"api_id": 4384, "api_type": 2, "full_declaration": "StreamingSockJsSession", "qualified_name": "org.springframework.web.socket.sockjs.transport.session.StreamingSockJsSession", "short_description": " A SockJS session for use with streaming HTTP transports. "},
{"api_id": 4385, "api_type": 2, "full_declaration": "WebSocketServerSockJsSession", "qualified_name": "org.springframework.web.socket.sockjs.transport.session.WebSocketServerSockJsSession", "short_description": " A SockJS session for use with the WebSocket transport. "},
{"api_id": 4386, "api_type": 3, "full_declaration": "UriBuilder", "qualified_name": "org.springframework.web.util.UriBuilder", "short_description": " Builder-style methods to prepare and expand a URI template with variables. "},
{"api_id": 4387, "api_type": 3, "full_declaration": "UriBuilderFactory", "qualified_name": "org.springframework.web.util.UriBuilderFactory", "short_description": " Factory to create  UriBuilder  instances with shared configuration\nsuch as a base URI, an encoding mode strategy, and others across all URI\nbuilder instances created through a factory. "},
{"api_id": 4388, "api_type": 3, "full_declaration": "UriComponents.UriTemplateVariables", "qualified_name": "org.springframework.web.util.UriComponents.UriTemplateVariables", "short_description": " Defines the contract for URI Template variables. "},
{"api_id": 4389, "api_type": 3, "full_declaration": "UriTemplateHandler", "qualified_name": "org.springframework.web.util.UriTemplateHandler", "short_description": " Defines methods for expanding a URI template with variables. "},
{"api_id": 4390, "api_type": 2, "full_declaration": "AbstractUriTemplateHandler", "qualified_name": "org.springframework.web.util.AbstractUriTemplateHandler", "short_description": "Deprecated as of 5.0 in favor of  DefaultUriBuilderFactory "},
{"api_id": 4391, "api_type": 2, "full_declaration": "ContentCachingRequestWrapper", "qualified_name": "org.springframework.web.util.ContentCachingRequestWrapper", "short_description": " HttpServletRequest  wrapper that caches all content read from\nthe  input stream  and  reader ,\nand allows this content to be retrieved via a  byte array . "},
{"api_id": 4392, "api_type": 2, "full_declaration": "ContentCachingResponseWrapper", "qualified_name": "org.springframework.web.util.ContentCachingResponseWrapper", "short_description": " HttpServletResponse  wrapper that caches all content written to\nthe  output stream  and  writer ,\nand allows this content to be retrieved via a  byte array . "},
{"api_id": 4393, "api_type": 2, "full_declaration": "CookieGenerator", "qualified_name": "org.springframework.web.util.CookieGenerator", "short_description": " Helper class for cookie generation, carrying cookie descriptor settings\nas bean properties and being able to add and remove cookie to/from a\ngiven response. "},
{"api_id": 4394, "api_type": 2, "full_declaration": "DefaultUriBuilderFactory", "qualified_name": "org.springframework.web.util.DefaultUriBuilderFactory", "short_description": " UriBuilderFactory  that relies on  UriComponentsBuilder  for\nthe actual building of the URI. "},
{"api_id": 4395, "api_type": 2, "full_declaration": "DefaultUriTemplateHandler", "qualified_name": "org.springframework.web.util.DefaultUriTemplateHandler", "short_description": "Deprecated as of 5.0 in favor of  DefaultUriBuilderFactory . "},
{"api_id": 4396, "api_type": 2, "full_declaration": "HtmlUtils", "qualified_name": "org.springframework.web.util.HtmlUtils", "short_description": " Utility class for HTML escaping. "},
{"api_id": 4397, "api_type": 2, "full_declaration": "HttpSessionMutexListener", "qualified_name": "org.springframework.web.util.HttpSessionMutexListener", "short_description": " Servlet HttpSessionListener that automatically exposes the session mutex\nwhen an HttpSession gets created. "},
{"api_id": 4398, "api_type": 2, "full_declaration": "IntrospectorCleanupListener", "qualified_name": "org.springframework.web.util.IntrospectorCleanupListener", "short_description": " Listener that flushes the JDK's  JavaBeans Introspector cache on web app shutdown. "},
{"api_id": 4399, "api_type": 2, "full_declaration": "JavaScriptUtils", "qualified_name": "org.springframework.web.util.JavaScriptUtils", "short_description": " Utility class for JavaScript escaping. "},
{"api_id": 4400, "api_type": 2, "full_declaration": "ServletContextPropertyUtils", "qualified_name": "org.springframework.web.util.ServletContextPropertyUtils", "short_description": " Helper class for resolving placeholders in texts. "},
{"api_id": 4401, "api_type": 2, "full_declaration": "ServletRequestPathUtils", "qualified_name": "org.springframework.web.util.ServletRequestPathUtils", "short_description": " Utility class to parse the path of an  HttpServletRequest  to a RequestPath  and cache it in a request attribute for further access. "},
{"api_id": 4402, "api_type": 2, "full_declaration": "TagUtils", "qualified_name": "org.springframework.web.util.TagUtils", "short_description": " Utility class for tag library related code, exposing functionality\nsuch as translating  Strings  to web scopes. "},
{"api_id": 4403, "api_type": 2, "full_declaration": "UriComponents", "qualified_name": "org.springframework.web.util.UriComponents", "short_description": " Represents an immutable collection of URI components, mapping component type to\nString values. "},
{"api_id": 4404, "api_type": 2, "full_declaration": "UriComponentsBuilder", "qualified_name": "org.springframework.web.util.UriComponentsBuilder", "short_description": " Builder for  UriComponents . "},
{"api_id": 4405, "api_type": 2, "full_declaration": "UriTemplate", "qualified_name": "org.springframework.web.util.UriTemplate", "short_description": " Representation of a URI template that can be expanded with URI variables via UriTemplate.expand(Map) ,  UriTemplate.expand(Object[]) , or matched to a URL via UriTemplate.match(String) . "},
{"api_id": 4406, "api_type": 2, "full_declaration": "UriUtils", "qualified_name": "org.springframework.web.util.UriUtils", "short_description": " Utility methods for URI encoding and decoding based on RFC 3986. "},
{"api_id": 4407, "api_type": 2, "full_declaration": "UrlPathHelper", "qualified_name": "org.springframework.web.util.UrlPathHelper", "short_description": " Helper class for URL path matching. "},
{"api_id": 4408, "api_type": 2, "full_declaration": "WebAppRootListener", "qualified_name": "org.springframework.web.util.WebAppRootListener", "short_description": " Listener that sets a system property to the web application root directory. "},
{"api_id": 4409, "api_type": 2, "full_declaration": "WebUtils", "qualified_name": "org.springframework.web.util.WebUtils", "short_description": " Miscellaneous utilities for web applications. "},
{"api_id": 4410, "api_type": 8, "full_declaration": "DefaultUriBuilderFactory.EncodingMode", "qualified_name": "org.springframework.web.util.DefaultUriBuilderFactory.EncodingMode", "short_description": " Enum to represent multiple URI encoding strategies. "},
{"api_id": 4411, "api_type": 4, "full_declaration": "NestedServletException", "qualified_name": "org.springframework.web.util.NestedServletException", "short_description": " Subclass of  ServletException  that properly handles a root cause in terms\nof message and stacktrace, just like NestedChecked/RuntimeException does. "},
{"api_id": 4412, "api_type": 2, "full_declaration": "PathPattern", "qualified_name": "org.springframework.web.util.pattern.PathPattern", "short_description": " Representation of a parsed path pattern. "},
{"api_id": 4413, "api_type": 2, "full_declaration": "PathPattern.PathMatchInfo", "qualified_name": "org.springframework.web.util.pattern.PathPattern.PathMatchInfo", "short_description": " Holder for URI variables and path parameters (matrix variables) extracted\nbased on the pattern for a given matched path. "},
{"api_id": 4414, "api_type": 2, "full_declaration": "PathPattern.PathRemainingMatchInfo", "qualified_name": "org.springframework.web.util.pattern.PathPattern.PathRemainingMatchInfo", "short_description": " Holder for the result of a match on the start of a pattern. "},
{"api_id": 4415, "api_type": 2, "full_declaration": "PathPatternParser", "qualified_name": "org.springframework.web.util.pattern.PathPatternParser", "short_description": " Parser for URI path patterns producing  PathPattern  instances that can\nthen be matched to requests. "},
{"api_id": 4416, "api_type": 2, "full_declaration": "PathPatternRouteMatcher", "qualified_name": "org.springframework.web.util.pattern.PathPatternRouteMatcher", "short_description": " RouteMatcher  built on  PathPatternParser  that uses PathContainer  and  PathPattern  as parsed representations of\nroutes and patterns. "},
{"api_id": 4417, "api_type": 8, "full_declaration": "PatternParseException.PatternMessage", "qualified_name": "org.springframework.web.util.pattern.PatternParseException.PatternMessage", "short_description": " The messages that can be included in a  PatternParseException  when there is a parse failure. "},
{"api_id": 4418, "api_type": 4, "full_declaration": "PatternParseException", "qualified_name": "org.springframework.web.util.pattern.PatternParseException", "short_description": " Exception that is thrown when there is a problem with the pattern being parsed. "}
]